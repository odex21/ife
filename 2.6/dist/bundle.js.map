{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///task.san","webpack:///./src/main.css","webpack:///./src/task.san?2631","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./src/task.san?e784","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/san/dist/san.dev.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./src/task.san?57df","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/index.js","webpack:///./src/main.css?e0d3","webpack:///./src/task.san"],"names":["parentHotUpdateCallback","window","chunkId","moreModules","hotAvailableFilesMap","hotRequestedFilesMap","moduleId","Object","prototype","hasOwnProperty","call","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotRequestTimeout","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateRequire","me","installedModules","__webpack_require__","fn","request","hot","active","parents","indexOf","push","children","console","warn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","e","hotStatus","hotSetStatus","then","finishChunkLoading","err","hotWaitingFilesMap","hotEnsureUpdateChunk","t","mode","hotStatusHandlers","newStatus","i","length","hotDeferred","hotUpdateNewHash","toModuleId","id","hotCheck","apply","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","requestPath","p","open","timeout","send","onreadystatechange","readyState","status","update","JSON","parse","responseText","hotDownloadManifest","c","h","promise","head","document","getElementsByTagName","script","createElement","charset","src","appendChild","hotDownloadUpdateChunk","deferred","hotApply","result","outdatedModules","options","cb","j","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","slice","map","chain","queueItem","pop","_selfAccepted","_selfDeclined","type","_main","parentId","parent","_declinedDependencies","concat","_acceptedDependencies","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","idx","outdatedSelfAcceptedModules","errorHandler","keys","forEach","installedChunks","hotDisposeChunk","dependency","moduleOutdatedDependencies","data","disposeHandlers","_disposeHandlers","child","splice","modules","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","exports","l","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","check","addStatusHandler","removeStatusHandler","hotCreateModule","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","s","Task","san__WEBPACK_IMPORTED_MODULE_0___default","defineComponent","template","__webpack_exports__","components","x-task","attached","this","ref","slot","log","initData","list","label","task","title","content","time","version","sources","names","mappings","file","sourcesContent","sourceRoot","useSourceMap","toString","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","stringify","toComment","sourceURLs","source","cssWithMappingToString","mediaQuery","alreadyImportedModules","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","setImmediate","root","guidIndex","guidPrefix","Date","getTime","guid","empty","extend","target","inherits","subClass","superClass","subClassProto","F","Function","constructor","each","iterator","func","thisArg","nativeBind","el","eventName","listener","capture","addEventListener","attachEvent","un","removeEventListener","detachEvent","splitStr2Obj","split","svgTags","createEl","tagName","createElementNS","removeEl","parentNode","removeChild","nextHandler","nextTasks","isNativePromise","test","tasks","MessageChannel","channel","port","port2","port1","onmessage","postMessage","ieVersionMatch","navigator","userAgent","match","ie","ieOldThan9","trigger","event","createEvent","initEvent","dispatchEvent","activeElement","autoCloseTags","ANONYMOUS_CLASS_NAME","getDataType","obj","nodeType","toLowerCase","createChainableChecker","validate","chainedChecker","isRequired","checkType","dataName","componentName","fullDataName","dataValue","dataType","createPrimaryTypeChecker","DataTypes","Walker","index","createANode","textExpr","directives","props","events","kebab2camel","replace","alpha","toUpperCase","any","string","number","bool","symbol","arrayOf","arrayItemChecker","instanceOf","expectedClass","dataValueClassName","expectedClassName","shape","shapeTypes","shapeKeyName","checker","oneOf","expectedEnumValues","oneOfType","expectedEnumOfTypeValues","objectOf","typeChecker","dataKeyName","exact","secret","dataValueType","allKeys","currentCode","charCodeAt","cut","start","end","go","distance","nextCode","charCode","goUntil","code","reg","isMatchStart","lastIndex","exec","createAccessor","paths","readUnaryExpr","walker","expr","operator","startCode","startIndex","walkLoop","literal","readString","readNumber","readTertiaryExpr","parenthesized","readParenthesizedExpr","arrItems","spread","items","objItems","walkerIndexBeforeName","readCall","readIdent","conditional","readLogicalORExpr","readLogicalANDExpr","readRelationalExpr","segs","readEqualityExpr","yesExpr","readAccessor","firstSeg","accessorLoop","defaultArgs","readMultiplicativeExpr","readAdditiveExpr","parseExpr","raw","parseCall","parseInterp","interp","filters","callExpr","original","ENTITY_DECODE_MAP","lt","gt","nbsp","quot","emsp","ensp","thinsp","copy","zwnj","zwj","amp","regexpLiteral","delimRegCache","parseText","delimiters","exprMatch","regCacheKey","exprStartReg","RegExp","beforeIndex","pushStringToSeg","text","String","fromCharCode","parseInt","decodeHTMLEntity","delimEndLen","interpSource","interpLen","directiveParsers","for","directive","trackBy","if","elif","else","html","transition","postProp","prop","integrateAttr","aNode","realName","prefix","prefixIndex","colonIndex","modifier","parser","parseDirective","integrateProp","vars","xMatch","x","seg","getXPath","stack","currentTagName","path","parseTemplate","trimWhitespace","rootNode","tagMatch","tagReg","attrReg","currentNode","stackIndex","beforeLastIndex","tagMatchStart","tagEnd","closeIndex","pushTextNode","aElement","tagClose","nextCharCode","attrMatch","parentChildrenLen","parentChild","elses","tbodyNode","DEFAULT_FILTERS","url","_class","_style","_sep","sep","evalExpr","owner","dataCache","leftValue","rightValue","itemValue","filter","filterName","evalArgs","method","pathsLen","buf","dataCacheSource","dataCacheClearly","clear","changeExprCompareExprs","changeExpr","exprs","changeExprCompare","changePaths","changeLen","pathExpr","pathExprValue","Math","max","filterResult","lifeCycleOwnIs","LifeCycle","compiled","is","inited","created","leaving","detached","disposed","getANodeProp","hotspot","HTML_ATTR_PROP_MAP","readonly","cellpadding","cellspacing","colspan","rowspan","valign","usemap","frameborder","defaultElementPropHandler","element","propName","setAttribute","output","bindInfo","svgPropHandler","boolPropHandler","defaultElementPropHandlers","style","cssText","class","className","draggable","analInputChecker","checkbox","radio","elementPropHandlers","input","multiple","checked","state","bindValue","bindType","scope","bindChecked","hintExpr","analInputCheckedState","disabled","autofocus","required","option","parentSelect","selectValue","isOptionSelected","selected","select","textarea","button","getPropHandler","attrName","tagPropHandlers","propHandler","isDataChangeByElement","change","changeTarget","findMethod","nameExpr","Data","immutableSet","exprPaths","isNaN","eventDeclarationListener","eventBind","isComponentEvent","$event","checkDataTypes","setTypeChecker","listen","unlisten","fire","silent","silence","quiet","callee","exprRaw","force","merge","oldValue","returnValue","newArray","deleteCount","insertions","shift","unshift","removeAt","remove","isBrowser","insertBefore","targetEl","parentEl","beforeEl","warnSetHTML","noSetHTML","message","isEndStump","getNodePath","node","nodePaths","nodeParent","anode","subTag","TextNode","reverseWalker","current","sel","goNext","createTextNode","attach","createComment","tempFlag","insertAdjacentHTML","noDetach","textUpdateProp","textContent","changesIsInDataRef","changes","dataRef","overview","extOverview","wildOverview","DOMChildrenWalker","next","firstChild","nextSibling","Element","lifeCycle","_elFns","parentComponent","elementInitTagName","nodeSBindInit","_toPhase","reverseElementChildren","_attached","nodeDispose","_ondisposed","sBind","_sbindData","unionKeys","obj1","obj2","nodeSBindUpdate","updater","newBindData","createReverseNode","parentIsComponent","childOwner","childScope","IfNode","ForNode","SlotNode","TemplateNode","ComponentType","getComponentType","elementDisposeChildren","noTransition","elementUpdateChildren","_update","elementOwnToPhase","createNode","genElementChildren","aNodeChildren","nodeOwnOnlyChildrenAttach","realANode","nameBind","isNamed","givenChildren","givenSlots","named","noname","isInserted","varItem","isScoped","slotChildren","aNodeChild","cloneDirectives","excludes","nodeOwnSimpleDispose","nodeOwnCreateStump","ForItemData","forElement","createForDirectiveChild","itemScope","itemANode","param","listData","eachForData","_create","forNode","rinseCondANode","cond","elseIndex","elseANode","handleProp","startRemoveEl","removeTarget","elementOwnAttach","detach","elementOwnDetach","elementOwnDispose","elementOwnCreate","_onEl","elementOwnOnEl","_doneLeave","leaveDispose","elementDispose","disposeNoDetach","disposeNoTransition","dynamicProps","htmlDirective","innerHTML","elementOwnAttached","isFromOuter","_notifyNeedReload","varKeys","scopedChanges","relation","exprResolve","resolveItem","resolvedPaths","_createChildren","oldIsArr","newIsArr","_disposeChildren","_updateArray","parentFirstChild","parentLastChild","lastChild","violentClear","disposedChildCount","disposeChild","childDisposed","replaceNode","cloneNode","replaceChild","newList","oldChildrenLen","childrenChanges","pushToChildrenChanges","isChildrenRebuild","disposeChildren","newLen","cIndex","forLen","changeIndex","_set","_splice","getItemKey","getForKey","newIndex","oldIndex","lcsFlags","newListKeys","oldListKeys","lcsFlag","changeStart","insertionsLen","newCount","indexChange","deleteLen","spliceArgs","newChildrenLen","lengthChange","_doCreateAndUpdate","doCreateAndUpdate","nextChild","childANode","newChild","san4devtool","emptyPropWhenCreate","isComponent","sourceNode","elementAttach","_contentReady","elementGetTransition","cmptGivenTransition","givenANode","elementLeave","leave","warnEventListenMethod","valid","inputOnCompositionEnd","composing","inputOnCompositionStart","xPropOutputer","xProp","inputXPropOutputer","outputer","xProps","CompositionEvent","nativeEvents","native","_isInitFromEl","enter","emitDevtool","arg","debug","__san_devtool__","Component","clazz","computed","messages","compileComponent","ComponentClass","recordHotspotData","refs","notContentData","analyseANodeHotspot","analyseExprDataHotspot","idProp","valueProp","componentPreheat","protoANode","givenNamedSlotBinds","firstCommentNode","stumpMatch","stumpText","previousSibling","_createGivenSlots","binds","camelComponentBinds","dataTypes","dataTypeChecker","dataTypeName","createDataTypesChecker","computedDeps","_calcComputed","dataChanger","_dataChanger","proto","SuperComponent","componentClass","_cmptReady","tpl","componentPropExtra","extra","analyseExprs","main","slotBind","givenSlotInited","slotName","_callHook","declaration","nameListeners","computedExpr","watch","dispatch","receiver","childrenTraversal","refTarget","elementTraversal","needReloadForSlot","bindItem","setExpr","updateExpr","_repaintChildren","slotChildrenLen","slotChild","dataChanges","_updateBindxOwner","updateScopeExpr","_aftercreated","dataExpr","san","ExprType","STRING","NUMBER","BOOL","ACCESSOR","INTERP","CALL","TEXT","BINARY","UNARY","TERTIARY","OBJECT","ARRAY","NodeType","IF","FOR","ELEM","CMPT","SLOT","TPL","global","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","messagePrefix","random","onGlobalMessage","installPostMessageImplementation","installMessageChannelImplementation","documentElement","installReadyStateChangeImplementation","clearImmediate","self","hmr","transform","insertInto","locals","newContent","stylesInDom","isOldIE","memo","memoize","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","before","removeStyleElement","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","newObj","DEBUG","mayRemove","replaceText","textStore","replacement","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","g","eval","_task","_interopRequireDefault","body","__san_script__","__san_template__","__san_styles__","__san_proto__","__san_exports__"],"mappings":"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","file":"bundle.js","sourcesContent":[" \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\thead.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"f6a03d71b6142f002a9d\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tvar chunkId = 0;\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(\"./src/index.js\")(__webpack_require__.s = \"./src/index.js\");\n","<template>\r\n<div>\r\n   <x-task data=\"{{task}}\"  list=\"{{list}}\" s-ref=\"task\" class=\"block\">\r\n        <p slot=\"n-title\">{{c.label}}: {{n.title}}</p>\r\n        <p slot=\"n-content\">{{c.label}}: {{n.content}}</p>\r\n        <p slot=\"n-time\">{{c.label}}: {{n.time}}</p>\r\n   </x-task>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n    import san from 'san';\r\n    import './main.css'\r\n    let Task = san.defineComponent({\r\n        template:   `<div>\r\n                        <div s-for=\"n in data\" class=\"task\">\r\n                            <h3>{{n.name}}</h3>\r\n                            <div  class=\"t-block\">\r\n                            <template s-for=\"c in list\">\r\n                            <slot name=\"n-{{c.name}}\" var-n=\"n\" var-c=\"c\">\r\n                            </slot>\r\n                            </template>\r\n                            </div>\r\n                        </div>\r\n                    </div>`\r\n    })\r\n\r\n\r\n    export default {\r\n        components: {\r\n            \"x-task\" : Task\r\n        },\r\n\r\n        attached: function(){\r\n            let slots = this.ref('task').slot();\r\n            console.log(this.data.get('task'))\r\n        },\r\n\r\n        initData: function(){\r\n            return {\r\n                list: [\r\n                    {name: 'name', label: ''},\r\n                    {name: 'title', label: '标题1'},\r\n                    {name: 'content', label: '内容'},\r\n                    {name: 'time', label: '时间'}\r\n                ],\r\n                task: [\r\n                    {name: \"任务一\", title: \"插槽\", content: \"xxxxxxx\", time: \"2018-11-12\"},\r\n                    {name: \"任务一\", title: \"插槽\", content: \"xxxxxxx\", time: \"2018-11-12\"},\r\n                    {name: \"任务一\", title: \"插槽\", content: \"xxxxxxx\", time: \"2018-11-12\"},\r\n                    {name: \"任务一\", title: \"插槽\", content: \"xxxxxxx\", time: \"2018-11-12\"},\r\n                    {name: \"任务一\", title: \"插槽\", content: \"xxxxxxx\", time: \"2018-11-12\"},\r\n                    {name: \"任务一\", title: \"插槽\", content: \"xxxxxxx\", time: \"2018-11-12\"},\r\n                ]\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n.block {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    \r\n}\r\n.task {\r\n    margin: 10px;\r\n    background-color: rgba(45, 44, 13, 0.38);\r\n    width: 250px;\r\n    \r\n}\r\n\r\nh3 {\r\n    text-align: center;\r\n    background: rgba(255, 255, 255, 0.575);\r\n    width: 115px;\r\n    margin: 20px auto;\r\n    line-height: 30px;\r\n    font-size: 15px;\r\n}\r\n\r\n.t-block {\r\n    margin: 20px auto;\r\n    right: 30px;\r\n    width: 180px;\r\n    padding: 10px;\r\n    background: rgb(255, 235, 185, 0.72)\r\n    \r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body > div{\\r\\n    width: 810px; \\r\\n}\\r\\n\\r\\n.block {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    \\r\\n}\\r\\n.task {\\r\\n    margin: 10px;\\r\\n    background-color: rgba(45, 44, 13, 0.38);\\r\\n    width: 250px;\\r\\n    \\r\\n}\\r\\n\\r\\nh3 {\\r\\n    text-align: center;\\r\\n    background: rgba(255, 255, 255, 0.575);\\r\\n    width: 115px;\\r\\n    margin: 20px auto;\\r\\n    line-height: 30px;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.t-block {\\r\\n    margin: 20px auto;\\r\\n    right: 30px;\\r\\n    width: 180px;\\r\\n    padding: 10px;\\r\\n    background: rgb(255, 235, 185, 0.72)\\r\\n    \\r\\n}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\r\\n\\r\\n.block {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    \\r\\n}\\r\\n.task {\\r\\n    margin: 10px;\\r\\n    background-color: rgba(45, 44, 13, 0.38);\\r\\n    width: 250px;\\r\\n    \\r\\n}\\r\\n\\r\\nh3 {\\r\\n    text-align: center;\\r\\n    background: rgba(255, 255, 255, 0.575);\\r\\n    width: 115px;\\r\\n    margin: 20px auto;\\r\\n    line-height: 30px;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.t-block {\\r\\n    margin: 20px auto;\\r\\n    right: 30px;\\r\\n    width: 180px;\\r\\n    padding: 10px;\\r\\n    background: rgb(255, 235, 185, 0.72)\\r\\n    \\r\\n}\\r\\n\", \"\", {\"version\":3,\"sources\":[\"D:/UIUX/san__/1/src/task.san?5408b1b6\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;IACA,cAAA;IACA,gBAAA;;CAEA;AACA;IACA,aAAA;IACA,yCAAA;IACA,aAAA;;CAEA;;AAEA;IACA,mBAAA;IACA,uCAAA;IACA,aAAA;IACA,kBAAA;IACA,kBAAA;IACA,gBAAA;CACA;;AAEA;IACA,kBAAA;IACA,YAAA;IACA,aAAA;IACA,cAAA;IACA,oCAAA;;CAEA\",\"file\":\"task.san\",\"sourcesContent\":[\"<template>\\r\\n<div>\\r\\n   <x-task data=\\\"{{task}}\\\"  list=\\\"{{list}}\\\" s-ref=\\\"task\\\" class=\\\"block\\\">\\r\\n        <p slot=\\\"n-title\\\">{{c.label}}: {{n.title}}</p>\\r\\n        <p slot=\\\"n-content\\\">{{c.label}}: {{n.content}}</p>\\r\\n        <p slot=\\\"n-time\\\">{{c.label}}: {{n.time}}</p>\\r\\n   </x-task>\\r\\n</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n    import san from 'san';\\r\\n    import './main.css'\\r\\n    let Task = san.defineComponent({\\r\\n        template:   `<div>\\r\\n                        <div s-for=\\\"n in data\\\" class=\\\"task\\\">\\r\\n                            <h3>{{n.name}}</h3>\\r\\n                            <div  class=\\\"t-block\\\">\\r\\n                            <template s-for=\\\"c in list\\\">\\r\\n                            <slot name=\\\"n-{{c.name}}\\\" var-n=\\\"n\\\" var-c=\\\"c\\\">\\r\\n                            </slot>\\r\\n                            </template>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>`\\r\\n    })\\r\\n\\r\\n\\r\\n    export default {\\r\\n        components: {\\r\\n            \\\"x-task\\\" : Task\\r\\n        },\\r\\n\\r\\n        attached: function(){\\r\\n            let slots = this.ref('task').slot();\\r\\n            console.log(this.data.get('task'))\\r\\n        },\\r\\n\\r\\n        initData: function(){\\r\\n            return {\\r\\n                list: [\\r\\n                    {name: 'name', label: ''},\\r\\n                    {name: 'title', label: '标题1'},\\r\\n                    {name: 'content', label: '内容'},\\r\\n                    {name: 'time', label: '时间'}\\r\\n                ],\\r\\n                task: [\\r\\n                    {name: \\\"任务一\\\", title: \\\"插槽\\\", content: \\\"xxxxxxx\\\", time: \\\"2018-11-12\\\"},\\r\\n                    {name: \\\"任务一\\\", title: \\\"插槽\\\", content: \\\"xxxxxxx\\\", time: \\\"2018-11-12\\\"},\\r\\n                    {name: \\\"任务一\\\", title: \\\"插槽\\\", content: \\\"xxxxxxx\\\", time: \\\"2018-11-12\\\"},\\r\\n                    {name: \\\"任务一\\\", title: \\\"插槽\\\", content: \\\"xxxxxxx\\\", time: \\\"2018-11-12\\\"},\\r\\n                    {name: \\\"任务一\\\", title: \\\"插槽\\\", content: \\\"xxxxxxx\\\", time: \\\"2018-11-12\\\"},\\r\\n                    {name: \\\"任务一\\\", title: \\\"插槽\\\", content: \\\"xxxxxxx\\\", time: \\\"2018-11-12\\\"},\\r\\n                ]\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\r\\n.block {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    \\r\\n}\\r\\n.task {\\r\\n    margin: 10px;\\r\\n    background-color: rgba(45, 44, 13, 0.38);\\r\\n    width: 250px;\\r\\n    \\r\\n}\\r\\n\\r\\nh3 {\\r\\n    text-align: center;\\r\\n    background: rgba(255, 255, 255, 0.575);\\r\\n    width: 115px;\\r\\n    margin: 20px auto;\\r\\n    line-height: 30px;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.t-block {\\r\\n    margin: 20px auto;\\r\\n    right: 30px;\\r\\n    width: 180px;\\r\\n    padding: 10px;\\r\\n    background: rgb(255, 235, 185, 0.72)\\r\\n    \\r\\n}\\r\\n</style>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</script>\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = \"\\r\\n<div>\\r\\n   <x-task data=\\\"{{task}}\\\"  list=\\\"{{list}}\\\" s-ref=\\\"task\\\" class=\\\"block\\\">\\r\\n        <p slot=\\\"n-title\\\">{{c.label}}: {{n.title}}</p>\\r\\n        <p slot=\\\"n-content\\\">{{c.label}}: {{n.content}}</p>\\r\\n        <p slot=\\\"n-time\\\">{{c.label}}: {{n.time}}</p>\\r\\n   </x-task>\\r\\n</div>\\r\\n\";","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * San\n * Copyright 2016 Baidu Inc. All rights reserved.\n *\n * @file 主文件\n * @author errorrik(errorrik@gmail.com)\n *         otakustay(otakustay@gmail.com)\n *         junmer(junmer@foxmail.com)\n */\n\n(function (root) {\n    // 人工调整打包代码顺序，通过注释手工写一些依赖\n//     // require('./util/guid');\n//     // require('./util/empty');\n//     // require('./util/extend');\n//     // require('./util/inherits');\n//     // require('./util/each');\n//     // require('./util/contains');\n//     // require('./util/bind');\n//     // require('./browser/on');\n//     // require('./browser/un');\n//     // require('./browser/svg-tags');\n//     // require('./browser/create-el');\n//     // require('./browser/remove-el');\n//     // require('./util/next-tick');\n//     // require('./browser/ie');\n//     // require('./browser/ie-old-than-9');\n//     // require('./browser/input-event-compatible');\n//     // require('./browser/auto-close-tags');\n//     // require('./util/data-types.js');\n//     // require('./util/create-data-types-checker.js');\n//     // require('./parser/walker');\n//     // require('./parser/create-a-node');\n//     // require('./parser/parse-template');\n//     // require('./runtime/change-expr-compare');\n//     // require('./runtime/data-change-type');\n//     // require('./runtime/default-filters');\n//     // require('./view/life-cycle');\n//     // require('./view/node-type');\n//     // require('./view/get-prop-handler');\n//     // require('./view/is-data-change-by-element');\n//     // require('./view/event-declaration-listener');\n//     // require('./view/create-node');\n\n\n    /**\n * @file 生成唯一id\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 唯一id的起始值\n *\n * @inner\n * @type {number}\n */\nvar guidIndex = 1;\n\n/**\n * 唯一id的前缀\n *\n * @inner\n * @type {string}\n */\nvar guidPrefix = (new Date()).getTime().toString(16).slice(8);\n\n/**\n * 获取唯一id\n *\n * @inner\n * @return {string} 唯一id\n */\nfunction guid() {\n    return '_' + guidPrefix + (guidIndex++);\n}\n\n// exports = module.exports = guid;\n\n\n/**\n * @file 空函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 啥都不干\n */\nfunction empty() {}\n\n// exports = module.exports = empty;\n\n\n/**\n * @file 属性拷贝\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 对象属性拷贝\n *\n * @param {Object} target 目标对象\n * @param {Object} source 源对象\n * @return {Object} 返回目标对象\n */\nfunction extend(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var value = source[key];\n            if (typeof value !== 'undefined') {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n}\n\n// exports = module.exports = extend;\n\n\n/**\n * @file 构建类之间的继承关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var extend = require('./extend');\n\n/**\n * 构建类之间的继承关系\n *\n * @param {Function} subClass 子类函数\n * @param {Function} superClass 父类函数\n */\nfunction inherits(subClass, superClass) {\n    /* jshint -W054 */\n    var subClassProto = subClass.prototype;\n    var F = new Function();\n    F.prototype = superClass.prototype;\n    subClass.prototype = new F();\n    subClass.prototype.constructor = subClass;\n    extend(subClass.prototype, subClassProto);\n    /* jshint +W054 */\n}\n\n// exports = module.exports = inherits;\n\n\n/**\n * @file 遍历数组\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 遍历数组集合\n *\n * @param {Array} array 数组源\n * @param {function(Any,number):boolean} iterator 遍历函数\n */\nfunction each(array, iterator) {\n    if (array && array.length > 0) {\n        for (var i = 0, l = array.length; i < l; i++) {\n            if (iterator(array[i], i) === false) {\n                break;\n            }\n        }\n    }\n}\n\n// exports = module.exports = each;\n\n\n/**\n * @file 判断数组中是否包含某项\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('./each');\n\n/**\n * 判断数组中是否包含某项\n *\n * @param {Array} array 数组\n * @param {*} value 包含的项\n * @return {boolean}\n */\nfunction contains(array, value) {\n    var result = false;\n    each(array, function (item) {\n        result = item === value;\n        return !result;\n    });\n\n    return result;\n}\n\n// exports = module.exports = contains;\n\n\n/**\n * @file bind函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * Function.prototype.bind 方法的兼容性封装\n *\n * @param {Function} func 要bind的函数\n * @param {Object} thisArg this指向对象\n * @param {...*} args 预设的初始参数\n * @return {Function}\n */\nfunction bind(func, thisArg) {\n    var nativeBind = Function.prototype.bind;\n    var slice = Array.prototype.slice;\n    // #[begin] allua\n    if (nativeBind && func.bind === nativeBind) {\n    // #[end]\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    // #[begin] allua\n    }\n\n    var args = slice.call(arguments, 2);\n    return function () {\n        return func.apply(thisArg, args.concat(slice.call(arguments)));\n    };\n    // #[end]\n}\n\n// exports = module.exports = bind;\n\n\n/**\n * @file DOM 事件挂载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction on(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.addEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.attachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = on;\n\n\n/**\n * @file DOM 事件卸载\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * DOM 事件卸载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n * @param {Function} listener 监听函数\n * @param {boolean} capture 是否是捕获阶段\n */\nfunction un(el, eventName, listener, capture) {\n    // #[begin] allua\n    if (el.addEventListener) {\n    // #[end]\n        el.removeEventListener(eventName, listener, capture);\n    // #[begin] allua\n    }\n    else {\n        el.detachEvent('on' + eventName, listener);\n    }\n    // #[end]\n}\n\n// exports = module.exports = un;\n\n\n/**\n * @file 将字符串逗号切分返回对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n\n/**\n * 将字符串逗号切分返回对象\n *\n * @param {string} source 源字符串\n * @return {Object}\n */\nfunction splitStr2Obj(source) {\n    var result = {};\n    each(\n        source.split(','),\n        function (key) {\n            result[key] = key;\n        }\n    );\n    return result;\n}\n\n// exports = module.exports = splitStr2Obj;\n\n\n/**\n * @file SVG标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * svgTags\n *\n * @see https://www.w3.org/TR/SVG/svgdtd.html 只取常用\n * @type {Object}\n */\nvar svgTags = splitStr2Obj(''\n    // structure\n    + 'svg,g,defs,desc,metadata,symbol,use,'\n    // image & shape\n    + 'image,path,rect,circle,line,ellipse,polyline,polygon,'\n    // text\n    + 'text,tspan,tref,textpath,'\n    // other\n    + 'marker,pattern,clippath,mask,filter,cursor,view,animate,'\n    // font\n    + 'font,font-face,glyph,missing-glyph,'\n    // camel\n    + 'animateColor,animateMotion,animateTransform,textPath,foreignObject'\n);\n\n// exports = module.exports = svgTags;\n\n\n/**\n * @file DOM创建\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var svgTags = require('./svg-tags');\n\n/**\n * 创建 DOM 元素\n *\n * @param  {string} tagName tagName\n * @return {HTMLElement}\n */\nfunction createEl(tagName) {\n    if (svgTags[tagName]) {\n        return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    }\n\n    return document.createElement(tagName);\n}\n\n// exports = module.exports = createEl;\n\n\n/**\n * @file 移除DOM\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 将 DOM 从页面中移除\n *\n * @param {HTMLElement} el DOM元素\n */\nfunction removeEl(el) {\n    if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n    }\n}\n\n// exports = module.exports = removeEl;\n\n\n/**\n * @file 在下一个时间周期运行任务\n * @author errorrik(errorrik@gmail.com)\n */\n\n// 该方法参照了vue2.5.0的实现，感谢vue团队\n// SEE: https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/core/util/env.js#L68\n\n\n// var bind = require('./bind');\n\n/**\n * 下一个周期要执行的任务列表\n *\n * @inner\n * @type {Array}\n */\nvar nextTasks = [];\n\n/**\n * 执行下一个周期任务的函数\n *\n * @inner\n * @type {Function}\n */\nvar nextHandler;\n\n/**\n * 浏览器是否支持原生Promise\n * 对Promise做判断，是为了禁用一些不严谨的Promise的polyfill\n *\n * @inner\n * @type {boolean}\n */\nvar isNativePromise = typeof Promise === 'function' && /native code/.test(Promise);\n\n/**\n * 在下一个时间周期运行任务\n *\n * @inner\n * @param {Function} fn 要运行的任务函数\n * @param {Object=} thisArg this指向对象\n */\nfunction nextTick(fn, thisArg) {\n    if (thisArg) {\n        fn = bind(fn, thisArg);\n    }\n    nextTasks.push(fn);\n\n    if (nextHandler) {\n        return;\n    }\n\n    nextHandler = function () {\n        var tasks = nextTasks.slice(0);\n        nextTasks = [];\n        nextHandler = null;\n\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            tasks[i]();\n        }\n    };\n\n    // 非标准方法，但是此方法非常吻合要求。\n    if (typeof setImmediate === 'function') {\n        setImmediate(nextHandler);\n    }\n    // 用MessageChannel去做setImmediate的polyfill\n    // 原理是将新的message事件加入到原有的dom events之后\n    else if (typeof MessageChannel === 'function') {\n        var channel = new MessageChannel();\n        var port = channel.port2;\n        channel.port1.onmessage = nextHandler;\n        port.postMessage(1);\n    }\n    // for native app\n    else if (isNativePromise) {\n        Promise.resolve().then(nextHandler);\n    }\n    else {\n        setTimeout(nextHandler, 0);\n    }\n}\n\n// exports = module.exports = nextTick;\n\n\n/**\n * @file ie版本号\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 从userAgent中ie版本号的匹配信息\n *\n * @type {Array}\n */\nvar ieVersionMatch = typeof navigator !== 'undefined'\n    && navigator.userAgent.match(/msie\\s*([0-9]+)/i);\n\n/**\n * ie版本号，非ie时为0\n *\n * @type {number}\n */\nvar ie = ieVersionMatch ? ieVersionMatch[1] - 0 : 0;\n\n// exports = module.exports = ie;\n\n\n/**\n * @file 是否 IE 并且小于 9\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ie = require('./ie');\n\n// HACK:\n// 1. IE8下，设置innerHTML时如果以html comment开头，comment会被自动滤掉\n//    为了保证stump存在，需要设置完html后，createComment并appendChild/insertBefore\n// 2. IE8下，innerHTML还不支持custom element，所以需要用div替代，不用createElement\n// 3. 虽然IE8已经优化了字符串+连接，碎片化连接性能不再退化\n//    但是由于上面多个兼容场景都用 < 9 判断，所以字符串连接也沿用\n//    所以结果是IE8下字符串连接用的是数组join的方式\n\n// #[begin] allua\n/**\n * 是否 IE 并且小于 9\n */\nvar ieOldThan9 = ie && ie < 9;\n// #[end]\n\n// exports = module.exports = ieOldThan9;\n\n\n/**\n * @file DOM 事件挂载\n * @author dafrok(o.o@mug.dog)\n */\n\n/**\n * DOM 事件挂载\n *\n * @inner\n * @param {HTMLElement} el DOM元素\n * @param {string} eventName 事件名\n */\nfunction trigger(el, eventName) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, true, true);\n    el.dispatchEvent(event);\n}\n\n// exports = module.exports = trigger;\n\n\n/**\n * @file 解决 IE9 在表单元素中删除字符时不触发事件的问题\n * @author dafrok(o.o@mug.dog)\n */\n\n// var ie = require('./ie');\n// var on = require('./on');\n// var trigger = require('./trigger');\n\n// #[begin] allua\nif (ie === 9) {\n    on(document, 'selectionchange', function () {\n        var el = document.activeElement;\n        if (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') {\n            trigger(el, 'input');\n        }\n    });\n}\n// #[end]\n\n\n/**\n * @file 自闭合标签表\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var splitStr2Obj = require('../util/split-str-2-obj');\n\n/**\n * 自闭合标签列表\n *\n * @type {Object}\n */\nvar autoCloseTags = splitStr2Obj('area,base,br,col,embed,hr,img,input,keygen,param,source,track,wbr');\n\n// exports = module.exports = autoCloseTags;\n\n\n/**\n * @file data types\n * @author leon <ludafa@outlook.com>\n */\n\n// var bind = require('./bind');\n// var empty = require('./empty');\n// var extend = require('./extend');\n\n// #[begin] error\nvar ANONYMOUS_CLASS_NAME = '<<anonymous>>';\n\n/**\n * 获取精确的类型\n *\n * @NOTE 如果 obj 是一个 DOMElement，我们会返回 `element`；\n *\n * @param  {*} obj 目标\n * @return {string}\n */\nfunction getDataType(obj) {\n\n    if (obj && obj.nodeType === 1) {\n        return 'element';\n    }\n\n    return Object.prototype.toString\n        .call(obj)\n        .slice(8, -1)\n        .toLowerCase();\n}\n// #[end]\n\n/**\n * 创建链式的数据类型校验器\n *\n * @param  {Function} validate 真正的校验器\n * @return {Function}\n */\nfunction createChainableChecker(validate) {\n    var chainedChecker = function () {};\n    chainedChecker.isRequired = empty;\n\n    // 只在 error 功能启用时才有实际上的 dataTypes 检测\n    // #[begin] error\n    var checkType = function (isRequired, data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        componentName = componentName || ANONYMOUS_CLASS_NAME;\n\n        // 如果是 null 或 undefined，那么要提前返回啦\n        if (dataValue == null) {\n            // 是 required 就报错\n            if (isRequired) {\n                throw new Error('[SAN ERROR] '\n                    + 'The `' + dataName + '` '\n                    + 'is marked as required in `' + componentName + '`, '\n                    + 'but its value is ' + dataType\n                );\n            }\n            // 不是 required，那就是 ok 的\n            return;\n        }\n\n        validate(data, dataName, componentName, fullDataName);\n\n    };\n\n    chainedChecker = bind(checkType, null, false);\n    chainedChecker.isRequired = bind(checkType, null, true);\n    // #[end]\n\n\n\n    return chainedChecker;\n\n}\n\n// #[begin] error\n/**\n * 生成主要类型数据校验器\n *\n * @param  {string} type 主类型\n * @return {Function}\n */\nfunction createPrimaryTypeChecker(type) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== type) {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected ' + type + ')'\n            );\n        }\n\n    });\n\n}\n\n\n\n/**\n * 生成 arrayOf 校验器\n *\n * @param  {Function} arrayItemChecker 数组中每项数据的校验器\n * @return {Function}\n */\nfunction createArrayOfChecker(arrayItemChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof arrayItemChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `arrayOf`, expected `function`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected array)'\n            );\n        }\n\n        for (var i = 0, len = dataValue.length; i < len; i++) {\n            arrayItemChecker(dataValue, i, componentName, fullDataName + '[' + i + ']');\n        }\n\n    });\n\n}\n\n/**\n * 生成 instanceOf 检测器\n *\n * @param  {Function|Class} expectedClass 期待的类\n * @return {Function}\n */\nfunction createInstanceOfChecker(expectedClass) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        var dataValue = data[dataName];\n\n        if (dataValue instanceof expectedClass) {\n            return;\n        }\n\n        var dataValueClassName = dataValue.constructor && dataValue.constructor.name\n            ? dataValue.constructor.name\n            : ANONYMOUS_CLASS_NAME;\n\n        var expectedClassName = expectedClass.name || ANONYMOUS_CLASS_NAME;\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n            + '(' + dataValueClassName + ' supplied to ' + componentName + ', '\n            + 'expected instance of ' + expectedClassName + ')'\n        );\n\n\n    });\n\n}\n\n/**\n * 生成 shape 校验器\n *\n * @param  {Object} shapeTypes shape 校验规则\n * @return {Function}\n */\nfunction createShapeChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `shape`, expected `object`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + fullDataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var shapeKeyName in shapeTypes) {\n            if (shapeTypes.hasOwnProperty(shapeKeyName)) {\n                var checker = shapeTypes[shapeKeyName];\n                if (typeof checker === 'function') {\n                    checker(dataValue, shapeKeyName, componentName, fullDataName + '.' + shapeKeyName);\n                }\n            }\n        }\n\n    });\n\n}\n\n/**\n * 生成 oneOf 校验器\n *\n * @param  {Array} expectedEnumValues 期待的枚举值\n * @return {Function}\n */\nfunction createOneOfChecker(expectedEnumValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + fullDataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumValues.length; i < len; i++) {\n            if (dataValue === expectedEnumValues[i]) {\n                return;\n            }\n        }\n\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + fullDataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ', '\n            + 'expected one of ' + expectedEnumValues.join(',') + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 oneOfType 校验器\n *\n * @param  {Array<Function>} expectedEnumOfTypeValues 期待的枚举类型\n * @return {Function}\n */\nfunction createOneOfTypeChecker(expectedEnumOfTypeValues) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (getDataType(expectedEnumOfTypeValues) !== 'array') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `oneOf`, array is expected.'\n            );\n        }\n\n        var dataValue = data[dataName];\n\n        for (var i = 0, len = expectedEnumOfTypeValues.length; i < len; i++) {\n\n            var checker = expectedEnumOfTypeValues[i];\n\n            if (typeof checker !== 'function') {\n                continue;\n            }\n\n            try {\n                checker(data, dataName, componentName, fullDataName);\n                // 如果 checker 完成校验没报错，那就返回了\n                return;\n            }\n            catch (e) {\n                // 如果有错误，那么应该把错误吞掉\n            }\n\n        }\n\n        // 所有的可接受 type 都失败了，才丢一个异常\n        throw new Error('[SAN ERROR] '\n            + 'Invalid ' + componentName + ' data `' + dataName + '` of value'\n            + '(`' + dataValue + '` supplied to ' + componentName + ')'\n        );\n\n    });\n\n}\n\n/**\n * 生成 objectOf 校验器\n *\n * @param  {Function} typeChecker 对象属性值校验器\n * @return {Function}\n */\nfunction createObjectOfChecker(typeChecker) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName) {\n\n        if (typeof typeChecker !== 'function') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `objectOf`, expected function'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataType = getDataType(dataValue);\n\n        if (dataType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid ' + componentName + ' data `' + dataName + '` of type'\n                + '(' + dataType + ' supplied to ' + componentName + ', '\n                + 'expected object)'\n            );\n        }\n\n        for (var dataKeyName in dataValue) {\n            if (dataValue.hasOwnProperty(dataKeyName)) {\n                typeChecker(\n                    dataValue,\n                    dataKeyName,\n                    componentName,\n                    fullDataName + '.' + dataKeyName\n                );\n            }\n        }\n\n\n    });\n\n}\n\n/**\n * 生成 exact 校验器\n *\n * @param  {Object} shapeTypes object 形态定义\n * @return {Function}\n */\nfunction createExactChecker(shapeTypes) {\n\n    return createChainableChecker(function (data, dataName, componentName, fullDataName, secret) {\n\n        if (getDataType(shapeTypes) !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Data `' + dataName + '` of `' + componentName + '` has invalid '\n                + 'DataType notation inside `exact`'\n            );\n        }\n\n        var dataValue = data[dataName];\n        var dataValueType = getDataType(dataValue);\n\n        if (dataValueType !== 'object') {\n            throw new Error('[SAN ERROR] '\n                + 'Invalid data `' + fullDataName + '` of type `' + dataValueType + '`'\n                + '(supplied to ' + componentName + ', expected `object`)'\n            );\n        }\n\n        var allKeys = {};\n\n        // 先合入 shapeTypes\n        extend(allKeys, shapeTypes);\n        // 再合入 dataValue\n        extend(allKeys, dataValue);\n        // 保证 allKeys 的类型正确\n\n        for (var key in allKeys) {\n            if (allKeys.hasOwnProperty(key)) {\n                var checker = shapeTypes[key];\n\n                // dataValue 中有一个多余的数据项\n                if (!checker) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is not defined in `DataTypes.exact`)'\n                    );\n                }\n\n                if (!(key in dataValue)) {\n                    throw new Error('[SAN ERROR] '\n                        + 'Invalid data `' + fullDataName + '` key `' + key + '` '\n                        + 'supplied to `' + componentName + '`. '\n                        + '(`' + key + '` is marked `required` in `DataTypes.exact`)'\n                    );\n                }\n\n                checker(\n                    dataValue,\n                    key,\n                    componentName,\n                    fullDataName + '.' + key,\n                    secret\n                );\n\n            }\n        }\n\n    });\n\n}\n// #[end]\n\n\n\n/* eslint-disable fecs-valid-var-jsdoc */\nvar DataTypes = {\n    array: createChainableChecker(empty),\n    object: createChainableChecker(empty),\n    func: createChainableChecker(empty),\n    string: createChainableChecker(empty),\n    number: createChainableChecker(empty),\n    bool: createChainableChecker(empty),\n    symbol: createChainableChecker(empty),\n    any: createChainableChecker,\n    arrayOf: createChainableChecker,\n    instanceOf: createChainableChecker,\n    shape: createChainableChecker,\n    oneOf: createChainableChecker,\n    oneOfType: createChainableChecker,\n    objectOf: createChainableChecker,\n    exact: createChainableChecker\n};\n\n// #[begin] error\nDataTypes = {\n\n    any: createChainableChecker(empty),\n\n    // 类型检测\n    array: createPrimaryTypeChecker('array'),\n    object: createPrimaryTypeChecker('object'),\n    func: createPrimaryTypeChecker('function'),\n    string: createPrimaryTypeChecker('string'),\n    number: createPrimaryTypeChecker('number'),\n    bool: createPrimaryTypeChecker('boolean'),\n    symbol: createPrimaryTypeChecker('symbol'),\n\n    // 复合类型检测\n    arrayOf: createArrayOfChecker,\n    instanceOf: createInstanceOfChecker,\n    shape: createShapeChecker,\n    oneOf: createOneOfChecker,\n    oneOfType: createOneOfTypeChecker,\n    objectOf: createObjectOfChecker,\n    exact: createExactChecker\n\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n// #[end]\n\n\n// module.exports = DataTypes;\n\n\n/**\n * @file 创建数据检测函数\n * @author leon<ludafa@outlook.com>\n */\n\n\n// #[begin] error\n\n/**\n * 创建数据检测函数\n *\n * @param  {Object} dataTypes     数据格式\n * @param  {string} componentName 组件名\n * @return {Function}\n */\nfunction createDataTypesChecker(dataTypes, componentName) {\n\n    /**\n     * 校验 data 是否满足 data types 的格式\n     *\n     * @param  {*} data 数据\n     */\n    return function (data) {\n\n        for (var dataTypeName in dataTypes) {\n\n            if (dataTypes.hasOwnProperty(dataTypeName)) {\n\n                var dataTypeChecker = dataTypes[dataTypeName];\n\n                if (typeof dataTypeChecker !== 'function') {\n                    throw new Error('[SAN ERROR] '\n                        + componentName + ':' + dataTypeName + ' is invalid; '\n                        + 'it must be a function, usually from san.DataTypes'\n                    );\n                }\n\n                dataTypeChecker(\n                    data,\n                    dataTypeName,\n                    componentName,\n                    dataTypeName\n                );\n\n\n            }\n        }\n\n    };\n\n}\n\n// #[end]\n\n// module.exports = createDataTypesChecker;\n\n\n/**\n * @file 字符串源码读取类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 字符串源码读取类，用于模板字符串解析过程\n *\n * @class\n * @param {string} source 要读取的字符串\n */\nfunction Walker(source) {\n    this.source = source;\n    this.len = this.source.length;\n    this.index = 0;\n}\n\n/**\n * 获取当前字符码\n *\n * @return {number}\n */\nWalker.prototype.currentCode = function () {\n    return this.source.charCodeAt(this.index);\n};\n\n/**\n * 截取字符串片段\n *\n * @param {number} start 起始位置\n * @param {number} end 结束位置\n * @return {string}\n */\nWalker.prototype.cut = function (start, end) {\n    return this.source.slice(start, end);\n};\n\n/**\n * 向前读取字符\n *\n * @param {number} distance 读取字符数\n */\nWalker.prototype.go = function (distance) {\n    this.index += distance;\n};\n\n/**\n * 读取下一个字符，返回下一个字符的 code\n *\n * @return {number}\n */\nWalker.prototype.nextCode = function () {\n    this.go(1);\n    return this.currentCode();\n};\n\n/**\n * 获取相应位置字符的 code\n *\n * @param {number} index 字符位置\n * @return {number}\n */\nWalker.prototype.charCode = function (index) {\n    return this.source.charCodeAt(index);\n};\n\n/**\n * 向前读取字符，直到遇到指定字符再停止\n * 未指定字符时，当遇到第一个非空格、制表符的字符停止\n *\n * @param {number=} charCode 指定字符的code\n * @return {boolean} 当指定字符时，返回是否碰到指定的字符\n */\nWalker.prototype.goUntil = function (charCode) {\n    var code;\n    while (this.index < this.len && (code = this.currentCode())) {\n        switch (code) {\n            // 空格 space\n            case 32:\n            // 制表符 tab\n            case 9:\n            // \\r\n            case 13:\n            // \\n\n            case 10:\n                this.index++;\n                break;\n            default:\n                if (code === charCode) {\n                    this.index++;\n                    return 1;\n                }\n                return;\n        }\n    }\n};\n\n/**\n * 向前读取符合规则的字符片段，并返回规则匹配结果\n *\n * @param {RegExp} reg 字符片段的正则表达式\n * @param {boolean} isMatchStart 是否必须匹配当前位置\n * @return {Array?}\n */\nWalker.prototype.match = function (reg, isMatchStart) {\n    reg.lastIndex = this.index;\n\n    var match = reg.exec(this.source);\n    if (match && (!isMatchStart || this.index === match.index)) {\n        this.index = reg.lastIndex;\n        return match;\n    }\n};\n\n// exports = module.exports = Walker;\n\n\n/**\n * @file 模板解析生成的抽象节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 创建模板解析生成的抽象节点\n *\n * @param {Object=} options 节点参数\n * @param {string=} options.tagName 标签名\n * @param {ANode=} options.parent 父节点\n * @param {boolean=} options.textExpr 文本节点表达式对象\n * @return {Object}\n */\nfunction createANode(options) {\n    options = options || {};\n\n    if (!options.textExpr) {\n        options.directives = options.directives || {};\n        options.props = options.props || [];\n        options.events = options.events || [];\n        options.children = options.children || [];\n    }\n\n    return options;\n}\n\n// exports = module.exports = createANode;\n\n\n/**\n * @file 把 kebab case 字符串转换成 camel case\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 把 kebab case 字符串转换成 camel case\n *\n * @param {string} source 源字符串\n * @return {string}\n */\nfunction kebab2camel(source) {\n    return source.replace(/-+(.)/ig, function (match, alpha) {\n        return alpha.toUpperCase();\n    });\n}\n\n// exports = module.exports = kebab2camel;\n\n\n/**\n * @file 表达式类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 表达式类型\n *\n * @const\n * @type {Object}\n */\nvar ExprType = {\n    STRING: 1,\n    NUMBER: 2,\n    BOOL: 3,\n    ACCESSOR: 4,\n    INTERP: 5,\n    CALL: 6,\n    TEXT: 7,\n    BINARY: 8,\n    UNARY: 9,\n    TERTIARY: 10,\n    OBJECT: 11,\n    ARRAY: 12\n};\n\n// exports = module.exports = ExprType;\n\n\n/**\n * @file 创建访问表达式对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n\n/**\n * 创建访问表达式对象\n *\n * @param {Array} paths 访问路径\n * @return {Object}\n */\nfunction createAccessor(paths) {\n    return {\n        type: 4,\n        paths: paths\n    };\n}\n\n// exports = module.exports = createAccessor;\n\n\n/**\n * @file 读取字符串\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n\n/**\n * 读取字符串\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readString(walker) {\n    var startCode = walker.currentCode();\n    var startIndex = walker.index;\n    var charCode;\n\n    walkLoop: while ((charCode = walker.nextCode())) {\n        switch (charCode) {\n            case 92: // \\\n                walker.go(1);\n                break;\n            case startCode:\n                walker.go(1);\n                break walkLoop;\n        }\n    }\n\n    var literal = walker.cut(startIndex, walker.index);\n    return {\n        type: 1,\n        // 处理字符转义\n        value: (new Function('return ' + literal))()\n    };\n}\n\n// exports = module.exports = readString;\n\n\n/**\n * @file 读取一元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readString = require('./read-string');\n// var readNumber = require('./read-number');\n// var readCall = require('./read-call');\n// var readParenthesizedExpr = require('./read-parenthesized-expr');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n\n/**\n * 读取一元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readUnaryExpr(walker) {\n    walker.goUntil();\n\n    switch (walker.currentCode()) {\n        case 33: // !\n            walker.go(1);\n            return {\n                type: 9,\n                expr: readUnaryExpr(walker),\n                operator: 33\n            };\n\n        case 34: // \"\n        case 39: // '\n            return readString(walker);\n\n        case 45: // -\n        // number\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            return readNumber(walker);\n\n        case 40: // (\n            return readParenthesizedExpr(walker);\n\n        // array literal\n        case 91: // [\n            walker.go(1);\n            var arrItems = [];\n            while (!walker.goUntil(93)) { // ]\n                var item = {};\n                arrItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                }\n\n                item.expr = readTertiaryExpr(walker);\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: 12,\n                items: arrItems\n            };\n\n        // object literal\n        case 123: // {\n            walker.go(1);\n            var objItems = [];\n\n            while (!walker.goUntil(125)) { // }\n                var item = {};\n                objItems.push(item);\n\n                if (walker.currentCode() === 46 && walker.match(/\\.\\.\\.\\s*/g)) {\n                    item.spread = true;\n                    item.expr = readTertiaryExpr(walker);\n                }\n                else {\n                    // #[begin] error\n                    var walkerIndexBeforeName = walker.index;\n                    // #[end]\n\n                    item.name = readUnaryExpr(walker);\n\n                    // #[begin] error\n                    if (item.name.type > 4) {\n                        throw new Error(\n                            '[SAN FATAL] unexpect object name: '\n                            + walker.cut(walkerIndexBeforeName, walker.index)\n                        );\n                    }\n                    // #[end]\n\n                    if (walker.goUntil(58)) { // :\n                        item.expr = readTertiaryExpr(walker);\n                    }\n                    else {\n                        item.expr = item.name;\n                    }\n\n                    if (item.name.type === 4) {\n                        item.name = item.name.paths[0];\n                    }\n                }\n\n                walker.goUntil(44); // ,\n            }\n\n            return {\n                type: 11,\n                items: objItems\n            };\n    }\n\n    return readCall(walker);\n}\n\n// exports = module.exports = readUnaryExpr;\n\n\n/**\n * @file 读取数字\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取数字\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readNumber(walker) {\n    var match = walker.match(/\\s*(-?[0-9]+(\\.[0-9]+)?)/g, 1);\n\n    if (match) {\n        return {\n            type: 2,\n            value: +match[1]\n        };\n    }\n    else if (walker.currentCode() === 45) {\n        walker.go(1);\n        return {\n            type: 9,\n            expr: readUnaryExpr(walker),\n            operator: 45\n        };\n    }\n}\n\n// exports = module.exports = readNumber;\n\n\n/**\n * @file 读取ident\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 读取ident\n * 这里的 ident 指标识符(identifier)，也就是通常意义上的变量名\n * 这里默认的变量名规则为：由美元符号($)、数字、字母或者下划线(_)构成的字符串\n *\n * @inner\n * @param {Walker} walker 源码读取对象\n * @return {string}\n */\nfunction readIdent(walker) {\n    var match = walker.match(/\\s*([\\$0-9a-z_]+)/ig, 1);\n\n    // #[begin] error\n    if (!match) {\n        throw new Error('[SAN FATAL] expect an ident: ' + walker.cut(walker.index));\n    }\n    // #[end]\n\n    return match[1];\n}\n\n// exports = module.exports = readIdent;\n\n\n/**\n * @file 读取三元表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalORExpr = require('./read-logical-or-expr');\n\n/**\n * 读取三元表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readTertiaryExpr(walker) {\n    var conditional = readLogicalORExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 63) { // ?\n        walker.go(1);\n        var yesExpr = readTertiaryExpr(walker);\n        walker.goUntil();\n\n        if (walker.currentCode() === 58) { // :\n            walker.go(1);\n            return {\n                type: 10,\n                segs: [\n                    conditional,\n                    yesExpr,\n                    readTertiaryExpr(walker)\n                ]\n            };\n        }\n    }\n\n    return conditional;\n}\n\n// exports = module.exports = readTertiaryExpr;\n\n\n/**\n * @file 读取访问表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var readIdent = require('./read-ident');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取访问表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAccessor(walker) {\n    var firstSeg = readIdent(walker);\n    switch (firstSeg) {\n        case 'true':\n        case 'false':\n            return {\n                type: 3,\n                value: firstSeg === 'true'\n            };\n    }\n\n    var result = createAccessor([\n        {\n            type: 1,\n            value: firstSeg\n        }\n    ]);\n\n    /* eslint-disable no-constant-condition */\n    accessorLoop: while (1) {\n    /* eslint-enable no-constant-condition */\n\n        switch (walker.currentCode()) {\n            case 46: // .\n                walker.go(1);\n\n                // ident as string\n                result.paths.push({\n                    type: 1,\n                    value: readIdent(walker)\n                });\n                break;\n\n            case 91: // [\n                walker.go(1);\n                result.paths.push(readTertiaryExpr(walker));\n                walker.goUntil(93); // ]\n                break;\n\n            default:\n                break accessorLoop;\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = readAccessor;\n\n\n/**\n * @file 读取调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAccessor = require('./read-accessor');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取调用\n *\n * @param {Walker} walker 源码读取对象\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction readCall(walker, defaultArgs) {\n    walker.goUntil();\n    var result = readAccessor(walker);\n\n    var args;\n    if (walker.goUntil(40)) { // (\n        args = [];\n\n        while (!walker.goUntil(41)) { // )\n            args.push(readTertiaryExpr(walker));\n            walker.goUntil(44); // ,\n        }\n    }\n    else if (defaultArgs) {\n        args = defaultArgs;\n    }\n\n    if (args) {\n        result = {\n            type: 6,\n            name: result,\n            args: args\n        };\n    }\n\n    return result;\n}\n\n// exports = module.exports = readCall;\n\n\n/**\n * @file 读取括号表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 读取括号表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readParenthesizedExpr(walker) {\n    walker.go(1);\n    var expr = readTertiaryExpr(walker);\n    walker.goUntil(41); // )\n\n    expr.parenthesized = true;\n    return expr;\n}\n\n// exports = module.exports = readParenthesizedExpr;\n\n\n/**\n * @file 读取乘法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 读取乘法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readMultiplicativeExpr(walker) {\n    var expr = readUnaryExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n\n        var code = walker.currentCode();\n        switch (code) {\n            case 37: // %\n            case 42: // *\n            case 47: // /\n                walker.go(1);\n                expr = {\n                    type: 8,\n                    operator: code,\n                    segs: [expr, readUnaryExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n\n    return expr;\n}\n\n// exports = module.exports = readMultiplicativeExpr;\n\n\n/**\n * @file 读取加法表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readMultiplicativeExpr = require('./read-multiplicative-expr');\n\n\n/**\n * 读取加法表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readAdditiveExpr(walker) {\n    var expr = readMultiplicativeExpr(walker);\n\n    while (1) {\n        walker.goUntil();\n        var code = walker.currentCode();\n\n        switch (code) {\n            case 43: // +\n            case 45: // -\n                walker.go(1);\n                expr = {\n                    type: 8,\n                    operator: code,\n                    segs: [expr, readMultiplicativeExpr(walker)]\n                };\n                continue;\n        }\n\n        break;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readAdditiveExpr;\n\n\n/**\n * @file 读取关系判断表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readAdditiveExpr = require('./read-additive-expr');\n\n/**\n * 读取关系判断表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readRelationalExpr(walker) {\n    var expr = readAdditiveExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 60: // <\n        case 62: // >\n            if (walker.nextCode() === 61) {\n                code += 61;\n                walker.go(1);\n            }\n\n            return {\n                type: 8,\n                operator: code,\n                segs: [expr, readAdditiveExpr(walker)]\n            };\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readRelationalExpr;\n\n\n/**\n * @file 读取相等比对表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readRelationalExpr = require('./read-relational-expr');\n\n/**\n * 读取相等比对表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readEqualityExpr(walker) {\n    var expr = readRelationalExpr(walker);\n    walker.goUntil();\n\n    var code = walker.currentCode();\n    switch (code) {\n        case 61: // =\n        case 33: // !\n            if (walker.nextCode() === 61) {\n                code += 61;\n                if (walker.nextCode() === 61) {\n                    code += 61;\n                    walker.go(1);\n                }\n\n                return {\n                    type: 8,\n                    operator: code,\n                    segs: [expr, readRelationalExpr(walker)]\n                };\n            }\n\n            walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readEqualityExpr;\n\n\n/**\n * @file 读取逻辑与表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readEqualityExpr = require('./read-equality-expr');\n\n/**\n * 读取逻辑与表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalANDExpr(walker) {\n    var expr = readEqualityExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 38) { // &\n        if (walker.nextCode() === 38) {\n            walker.go(1);\n            return {\n                type: 8,\n                operator: 76,\n                segs: [expr, readLogicalANDExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalANDExpr;\n\n\n/**\n * @file 读取逻辑或表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('./expr-type');\n// var readLogicalANDExpr = require('./read-logical-and-expr');\n\n/**\n * 读取逻辑或表达式\n *\n * @param {Walker} walker 源码读取对象\n * @return {Object}\n */\nfunction readLogicalORExpr(walker) {\n    var expr = readLogicalANDExpr(walker);\n    walker.goUntil();\n\n    if (walker.currentCode() === 124) { // |\n        if (walker.nextCode() === 124) {\n            walker.go(1);\n            return {\n                type: 8,\n                operator: 248,\n                segs: [expr, readLogicalORExpr(walker)]\n            };\n        }\n\n        walker.go(-1);\n    }\n\n    return expr;\n}\n\n// exports = module.exports = readLogicalORExpr;\n\n\n/**\n * @file 解析表达式\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n\n/**\n * 解析表达式\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseExpr(source) {\n    if (!source) {\n        return;\n    }\n\n    if (typeof source === 'object' && source.type) {\n        return source;\n    }\n\n    var expr = readTertiaryExpr(new Walker(source));\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseExpr;\n\n\n/**\n * @file 解析调用\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析调用\n *\n * @param {string} source 源码\n * @param {Array=} defaultArgs 默认参数\n * @return {Object}\n */\nfunction parseCall(source, defaultArgs) {\n    var expr = readCall(new Walker(source), defaultArgs);\n\n    if (expr.type !== 6) {\n        expr = {\n            type: 6,\n            name: expr,\n            args: defaultArgs || []\n        };\n    }\n\n    expr.raw = source;\n    return expr;\n}\n\n// exports = module.exports = parseCall;\n\n\n/**\n * @file 解析插值替换\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var readTertiaryExpr = require('./read-tertiary-expr');\n// var ExprType = require('./expr-type');\n// var readCall = require('./read-call');\n\n/**\n * 解析插值替换\n *\n * @param {string} source 源码\n * @return {Object}\n */\nfunction parseInterp(source) {\n    var walker = new Walker(source);\n\n    var interp = {\n        type: 5,\n        expr: readTertiaryExpr(walker),\n        filters: [],\n        raw: source\n    };\n\n    while (walker.goUntil(124)) { // |\n        var callExpr = readCall(walker, []);\n        switch (callExpr.name.paths[0].value) {\n            case 'html':\n                break;\n            case 'raw':\n                interp.original = 1;\n                break;\n            default:\n                interp.filters.push(callExpr);\n        }\n    }\n\n    return interp;\n}\n\n// exports = module.exports = parseInterp;\n\n\n/**\n * @file 解码 HTML 字符实体\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar ENTITY_DECODE_MAP = {\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    quot: '\\\"',\n    emsp: '\\u2003',\n    ensp: '\\u2002',\n    thinsp: '\\u2009',\n    copy: '\\xa9',\n    reg: '\\xae',\n    zwnj: '\\u200c',\n    zwj: '\\u200d',\n    amp: '&'\n};\n\n/**\n * 解码 HTML 字符实体\n *\n * @param {string} source 要解码的字符串\n * @return {string}\n */\nfunction decodeHTMLEntity(source) {\n    return source\n        .replace(/&#([0-9]+);/g, function (match, code) {\n            return String.fromCharCode(+code);\n        })\n        .replace(/&#x([0-9a-f]+);/ig, function (match, code) {\n            return String.fromCharCode(parseInt(code, 16));\n        })\n        .replace(/&([a-z]+);/ig, function (match, code) {\n            return ENTITY_DECODE_MAP[code] || match;\n        });\n}\n\n// exports = module.exports = decodeHTMLEntity;\n\n\n/**\n * @file 解析文本\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Walker = require('./walker');\n// var ExprType = require('./expr-type');\n// var parseInterp = require('./parse-interp');\n// var decodeHTMLEntity = require('../util/decode-html-entity');\n\n/**\n * 对字符串进行可用于new RegExp的字面化\n *\n * @inner\n * @param {string} source 需要字面化的字符串\n * @return {string} 字符串字面化结果\n */\nfunction regexpLiteral(source) {\n    return source.replace(/[\\^\\[\\]\\$\\(\\)\\{\\}\\?\\*\\.\\+\\\\]/g, function (c) {\n        return '\\\\' + c;\n    });\n}\n\nvar delimRegCache = {};\n\n/**\n * 解析文本\n *\n * @param {string} source 源码\n * @param {Array?} delimiters 分隔符。默认为 ['{{', '}}']\n * @return {Object}\n */\nfunction parseText(source, delimiters) {\n    delimiters = delimiters || ['{{', '}}'];\n\n    var regCacheKey = delimiters[0] + '>..<' + delimiters[1];\n    var exprStartReg = delimRegCache[regCacheKey];\n    if (!exprStartReg) {\n        exprStartReg = new RegExp(\n            regexpLiteral(delimiters[0])\n                + '\\\\s*([\\\\s\\\\S]+?)\\\\s*'\n                + regexpLiteral(delimiters[1]),\n            'ig'\n        );\n        delimRegCache[regCacheKey] = exprStartReg;\n    }\n\n    var exprMatch;\n\n    var walker = new Walker(source);\n    var beforeIndex = 0;\n\n    var expr = {\n        type: 7,\n        segs: []\n    };\n\n    function pushStringToSeg(text) {\n        text && expr.segs.push({\n            type: 1,\n            literal: text,\n            value: decodeHTMLEntity(text)\n        });\n    }\n\n    var delimEndLen = delimiters[1].length;\n    while ((exprMatch = walker.match(exprStartReg)) != null) {\n        var interpSource = exprMatch[1];\n        var interpLen = exprMatch[0].length;\n        if (walker.cut(walker.index + 1 - delimEndLen, walker.index + 1) === delimiters[1]) {\n            interpSource += walker.cut(walker.index, walker.index + 1);\n            walker.go(1);\n            interpLen++;\n        }\n\n        pushStringToSeg(walker.cut(\n            beforeIndex,\n            walker.index - interpLen\n        ));\n\n        var interp = parseInterp(interpSource);\n        expr.original = expr.original || interp.original;\n        expr.segs.push(interp);\n\n        beforeIndex = walker.index;\n    }\n\n    pushStringToSeg(walker.cut(beforeIndex));\n\n\n\n    if (expr.segs.length === 1 && expr.segs[0].type === 1) {\n        expr.value = expr.segs[0].value;\n    }\n\n    return expr;\n}\n\n// exports = module.exports = parseText;\n\n\n/**\n * @file 解析指令\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var Walker = require('./walker');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var readAccessor = require('./read-accessor');\n// var readUnaryExpr = require('./read-unary-expr');\n\n/**\n * 指令解析器\n *\n * @inner\n * @type {Object}\n */\nvar directiveParsers = {\n    'for': function (value) {\n        var walker = new Walker(value);\n        var match = walker.match(/^\\s*([\\$0-9a-z_]+)(\\s*,\\s*([\\$0-9a-z_]+))?\\s+in\\s+/ig, 1);\n\n        if (match) {\n            var directive = {\n                item: parseExpr(match[1]),\n                index: parseExpr(match[3] || '$index'),\n                value: readUnaryExpr(walker)\n            };\n\n            if (walker.match(/\\s*trackby\\s+/ig, 1)) {\n                var start = walker.index;\n                directive.trackBy = readAccessor(walker);\n                directive.trackBy.raw = walker.cut(start, walker.index);\n            }\n            return directive;\n        }\n\n        // #[begin] error\n        throw new Error('[SAN FATAL] for syntax error: ' + value);\n        // #[end]\n    },\n\n    'ref': function (value, options) {\n        return {\n            value: parseText(value, options.delimiters)\n        };\n    },\n\n    'if': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'elif': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'else': function (value) {\n        return {\n            value: {}\n        };\n    },\n\n    'bind': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'html': function (value) {\n        return {\n            value: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n        };\n    },\n\n    'transition': function (value) {\n        return {\n            value: parseCall(value)\n        };\n    }\n};\n\n/**\n * 解析指令\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 指令名称\n * @param {string} value 指令值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction parseDirective(aNode, name, value, options) {\n    if (name === 'else-if') {\n        name = 'elif';\n    }\n\n    var parser = directiveParsers[name];\n    if (parser) {\n        (aNode.directives[name] = parser(value, options)).raw = value;\n    }\n}\n\n// exports = module.exports = parseDirective;\n\n\n/**\n * @file 对属性信息进行处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n\n/**\n * 对属性信息进行处理\n * 对组件的 binds 或者特殊的属性（比如 input 的 checked）需要处理\n *\n * 扁平化：\n * 当 text 解析只有一项时，要么就是 string，要么就是 interp\n * interp 有可能是绑定到组件属性的表达式，不希望被 eval text 成 string\n * 所以这里做个处理，只有一项时直接抽出来\n *\n * bool属性：\n * 当绑定项没有值时，默认为true\n *\n * @param {Object} prop 属性对象\n */\nfunction postProp(prop) {\n    var expr = prop.expr;\n\n    if (expr.type === 7) {\n        switch (expr.segs.length) {\n            case 0:\n                prop.expr = {\n                    type: 3,\n                    value: true\n                };\n                break;\n\n            case 1:\n                expr = prop.expr = expr.segs[0];\n                if (expr.type === 5 && expr.filters.length === 0) {\n                    prop.expr = expr.expr;\n                }\n        }\n    }\n}\n\n// exports = module.exports = postProp;\n\n\n/**\n * @file 解析抽象节点属性\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var kebab2camel = require('../util/kebab2camel');\n// var ExprType = require('./expr-type');\n// var createAccessor = require('./create-accessor');\n// var parseExpr = require('./parse-expr');\n// var parseCall = require('./parse-call');\n// var parseText = require('./parse-text');\n// var parseDirective = require('./parse-directive');\n// var postProp = require('./post-prop');\n\n\n/**\n * 解析抽象节点属性\n *\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateAttr(aNode, name, value, options) {\n    var prefixIndex = name.indexOf('-');\n    var realName;\n    var prefix;\n\n    if (prefixIndex > 0) {\n        prefix = name.slice(0, prefixIndex);\n        realName = name.slice(prefixIndex + 1);\n    }\n\n    switch (prefix) {\n        case 'on':\n            var event = {\n                name: realName,\n                modifier: {}\n            };\n            aNode.events.push(event);\n\n            var colonIndex;\n            while ((colonIndex = value.indexOf(':')) > 0) {\n                var modifier = value.slice(0, colonIndex);\n\n                // eventHandler(\"dd:aa\") 这种情况不能算modifier，需要辨识\n                if (!/^[a-z]+$/i.test(modifier)) {\n                    break;\n                }\n\n                event.modifier[modifier] = true;\n                value = value.slice(colonIndex + 1);\n            }\n\n            event.expr = parseCall(value, [\n                createAccessor([\n                    {type: 1, value: '$event'}\n                ])\n            ]);\n            break;\n\n        case 'san':\n        case 's':\n            parseDirective(aNode, realName, value, options);\n            break;\n\n        case 'prop':\n            integrateProp(aNode, realName, value, options);\n            break;\n\n        case 'var':\n            if (!aNode.vars) {\n                aNode.vars = [];\n            }\n\n            realName = kebab2camel(realName);\n            aNode.vars.push({\n                name: realName,\n                expr: parseExpr(value.replace(/(^\\{\\{|\\}\\}$)/g, ''))\n            });\n            break;\n\n        default:\n            integrateProp(aNode, name, value, options);\n    }\n}\n\n/**\n * 解析抽象节点绑定属性\n *\n * @inner\n * @param {ANode} aNode 抽象节点\n * @param {string} name 属性名称\n * @param {string} value 属性值\n * @param {Object} options 解析参数\n * @param {Array?} options.delimiters 插值分隔符列表\n */\nfunction integrateProp(aNode, name, value, options) {\n    // parse two way binding, e.g. value=\"{=ident=}\"\n    var xMatch = value.match(/^\\{=\\s*(.*?)\\s*=\\}$/);\n\n    if (xMatch) {\n        aNode.props.push({\n            name: name,\n            expr: parseExpr(xMatch[1]),\n            x: 1,\n            raw: value\n        });\n\n        return;\n    }\n\n    // parse normal prop\n    var prop = {\n        name: name,\n        expr: parseText(value, options.delimiters),\n        raw: value\n    };\n\n    // 这里不能把只有一个插值的属性抽取\n    // 因为插值里的值可能是html片段，容易被注入\n    // 组件的数据绑定在组件init时做抽取\n    switch (name) {\n        case 'class':\n        case 'style':\n            each(prop.expr.segs, function (seg) {\n                if (seg.type === 5) {\n                    seg.filters.push({\n                        type: 6,\n                        name: createAccessor([\n                            {\n                                type: 1,\n                                value: '_' + prop.name\n                            }\n                        ]),\n                        args: []\n                    });\n                }\n            });\n            break;\n\n        case 'checked':\n            if (aNode.tagName === 'input') {\n                postProp(prop);\n            }\n            break;\n    }\n\n    aNode.props.push(prop);\n}\n\n\n// exports = module.exports = integrateAttr;\n\n\n/**\n * @file 解析模板\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('./create-a-node');\n// var Walker = require('./walker');\n// var integrateAttr = require('./integrate-attr');\n// var parseText = require('./parse-text');\n// var svgTags = require('../browser/svg-tags');\n// var autoCloseTags = require('../browser/auto-close-tags');\n\n// #[begin] error\nfunction getXPath(stack, currentTagName) {\n    var path = ['ROOT'];\n    for (var i = 1, len = stack.length; i < len; i++) {\n        path.push(stack[i].tagName);\n    }\n    if (currentTagName) {\n        path.push(currentTagName);\n    }\n    return path.join('>');\n}\n// #[end]\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 解析 template\n *\n * @param {string} source template源码\n * @param {Object?} options 解析参数\n * @param {string?} options.trimWhitespace 空白文本的处理策略。none|blank|all\n * @param {Array?} options.delimiters 插值分隔符列表\n * @return {ANode}\n */\nfunction parseTemplate(source, options) {\n    options = options || {};\n    options.trimWhitespace = options.trimWhitespace || 'none';\n\n    var rootNode = createANode();\n\n    if (typeof source !== 'string') {\n        return rootNode;\n    }\n\n    source = source.replace(/<!--([\\s\\S]*?)-->/mg, '').replace(/(^\\s+|\\s+$)/g, '');\n    var walker = new Walker(source);\n\n    var tagReg = /<(\\/)?([a-z0-9-]+)\\s*/ig;\n    var attrReg = /([-:0-9a-z\\[\\]]+)(\\s*=\\s*(['\"])([^\\3]*?)\\3)?\\s*/ig;\n\n    var tagMatch;\n    var currentNode = rootNode;\n    var stack = [rootNode];\n    var stackIndex = 0;\n    var beforeLastIndex = 0;\n\n    while ((tagMatch = walker.match(tagReg)) != null) {\n        var tagMatchStart = walker.index - tagMatch[0].length;\n        var tagEnd = tagMatch[1];\n        var tagName = tagMatch[2];\n        if (!svgTags[tagName]) {\n            tagName = tagName.toLowerCase();\n        }\n\n        // 62: >\n        // 47: /\n        // 处理 </xxxx >\n        if (tagEnd) {\n            if (walker.currentCode() === 62) {\n                // 满足关闭标签的条件时，关闭标签\n                // 向上查找到对应标签，找不到时忽略关闭\n                var closeIndex = stackIndex;\n\n                // #[begin] error\n                // 如果正在闭合一个自闭合的标签，例如 </input>，报错\n                if (autoCloseTags[tagName]) {\n                    throw new Error(''\n                        + '[SAN ERROR] ' + getXPath(stack, tagName) + ' is a `auto closed` tag, '\n                        + 'so it cannot be closed with </' + tagName + '>'\n                    );\n                }\n\n                // 如果关闭的 tag 和当前打开的不一致，报错\n                if (\n                    stack[closeIndex].tagName !== tagName\n                    // 这里要把 table 自动添加 tbody 的情况给去掉\n                    && !(tagName === 'table' && stack[closeIndex].tagName === 'tbody')\n                ) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack) + ' is closed with ' + tagName);\n                }\n                // #[end]\n\n\n                pushTextNode(source.slice(beforeLastIndex, tagMatchStart));\n                while (closeIndex > 0 && stack[closeIndex].tagName !== tagName) {\n                    closeIndex--;\n                }\n\n                if (closeIndex > 0) {\n                    stackIndex = closeIndex - 1;\n                    currentNode = stack[stackIndex];\n                }\n                walker.go(1);\n            }\n            // #[begin] error\n            else {\n                // 处理 </xxx 非正常闭合标签\n\n                // 如果闭合标签时，匹配后的下一个字符是 <，即下一个标签的开始，那么当前闭合标签未闭合\n                if (walker.currentCode() === 60) {\n                    throw new Error(''\n                        + '[SAN ERROR] ' + getXPath(stack)\n                        + '\\'s close tag not closed'\n                    );\n                }\n\n                // 闭合标签有属性\n                throw new Error(''\n                    + '[SAN ERROR] ' + getXPath(stack)\n                    + '\\'s close tag has attributes'\n                );\n            }\n            // #[end]\n        }\n        else {\n            var aElement = createANode({\n                tagName: tagName\n            });\n            var tagClose = autoCloseTags[tagName];\n\n            // 解析 attributes\n\n            /* eslint-disable no-constant-condition */\n            while (1) {\n            /* eslint-enable no-constant-condition */\n\n                var nextCharCode = walker.currentCode();\n\n                // 标签结束时跳出 attributes 读取\n                // 标签可能直接结束或闭合结束\n                if (nextCharCode === 62) {\n                    walker.go(1);\n                    break;\n                }\n\n                // 遇到 /> 按闭合处理\n                if (nextCharCode === 47\n                    && walker.charCode(walker.index + 1) === 62\n                ) {\n                    walker.go(2);\n                    tagClose = 1;\n                    break;\n                }\n\n                // template 串结束了\n                // 这时候，说明这个读取周期的所有内容，都是text\n                if (!nextCharCode) {\n                    pushTextNode(walker.cut(beforeLastIndex));\n                    aElement = null;\n                    break;\n                }\n\n                // #[begin] error\n                // 在处理一个 open 标签时，如果遇到了 <， 即下一个标签的开始，则当前标签未能正常闭合，报错\n                if (nextCharCode === 60) {\n                    throw new Error('[SAN ERROR] ' + getXPath(stack, tagName) + ' is not closed');\n                }\n                // #[end]\n\n                // 读取 attribute\n                var attrMatch = walker.match(attrReg);\n                if (attrMatch) {\n\n                    // #[begin] error\n                    // 如果属性有 =，但没取到 value，报错\n                    if (\n                        walker.charCode(attrMatch.index + attrMatch[1].length) === 61\n                        && !attrMatch[2]\n                    ) {\n                        throw new Error(''\n                            + '[SAN ERROR] ' + getXPath(stack, tagName) + ' attribute `'\n                            + attrMatch[1] + '` is not wrapped with \"\"'\n                        );\n                    }\n                    // #[end]\n\n                    integrateAttr(\n                        aElement,\n                        attrMatch[1],\n                        attrMatch[2] ? attrMatch[4] : '',\n                        options\n                    );\n                }\n\n            }\n\n            if (aElement) {\n                pushTextNode(source.slice(beforeLastIndex, tagMatchStart));\n\n                // match if directive for else/elif directive\n                var elseDirective = aElement.directives['else'] // eslint-disable-line dot-notation\n                    || aElement.directives.elif;\n\n                if (elseDirective) {\n                    var parentChildrenLen = currentNode.children.length;\n\n                    while (parentChildrenLen--) {\n                        var parentChild = currentNode.children[parentChildrenLen];\n                        if (parentChild.textExpr) {\n                            currentNode.children.splice(parentChildrenLen, 1);\n                            continue;\n                        }\n\n                        // #[begin] error\n                        if (!parentChild.directives['if']) { // eslint-disable-line dot-notation\n                            throw new Error('[SAN FATEL] else not match if.');\n                        }\n                        // #[end]\n\n                        parentChild.elses = parentChild.elses || [];\n                        parentChild.elses.push(aElement);\n\n                        break;\n                    }\n                }\n                else {\n                    if (aElement.tagName === 'tr' && currentNode.tagName === 'table') {\n                        var tbodyNode = createANode({\n                            tagName: 'tbody'\n                        });\n                        currentNode.children.push(tbodyNode);\n                        currentNode = tbodyNode;\n                        stack[++stackIndex] = tbodyNode;\n                    }\n\n                    currentNode.children.push(aElement);\n                }\n\n                if (!tagClose) {\n                    currentNode = aElement;\n                    stack[++stackIndex] = aElement;\n                }\n            }\n\n        }\n\n        beforeLastIndex = walker.index;\n    }\n\n    pushTextNode(walker.cut(beforeLastIndex));\n\n    return rootNode;\n\n    /**\n     * 在读取栈中添加文本节点\n     *\n     * @inner\n     * @param {string} text 文本内容\n     */\n    function pushTextNode(text) {\n        switch (options.trimWhitespace) {\n            case 'blank':\n                if (/^\\s+$/.test(text)) {\n                    text = null;\n                }\n                break;\n\n            case 'all':\n                text = text.replace(/(^\\s+|\\s+$)/g, '');\n                break;\n        }\n\n        if (text) {\n            currentNode.children.push(createANode({\n                textExpr: parseText(text, options.delimiters)\n            }));\n        }\n    }\n}\n\n/* eslint-enable fecs-max-statements */\n\n// exports = module.exports = parseTemplate;\n\n\n/**\n * @file 默认filter\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/* eslint-disable fecs-camelcase */\n\n/**\n * 默认filter\n *\n * @const\n * @type {Object}\n */\nvar DEFAULT_FILTERS = {\n\n    /**\n     * URL编码filter\n     *\n     * @param {string} source 源串\n     * @return {string} 替换结果串\n     */\n    url: encodeURIComponent,\n\n    _class: function (source) {\n        if (source instanceof Array) {\n            return source.join(' ');\n        }\n\n        return source;\n    },\n\n    _style: function (source) {\n        if (typeof source === 'object') {\n            var result = '';\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result += key + ':' + source[key] + ';';\n                }\n            }\n\n            return result;\n        }\n\n        return source;\n    },\n\n    _sep: function (source, sep) {\n        return source ? sep + source : source;\n    }\n};\n/* eslint-enable fecs-camelcase */\n\n// exports = module.exports = DEFAULT_FILTERS;\n\n\n/**\n * @file 表达式计算\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var extend = require('../util/extend');\n// var DEFAULT_FILTERS = require('./default-filters');\n// var evalArgs = require('./eval-args');\n// var dataCache = require('./data-cache');\n\n/**\n * 计算表达式的值\n *\n * @param {Object} expr 表达式对象\n * @param {Data} data 数据容器对象\n * @param {Component=} owner 所属组件环境\n * @return {*}\n */\nfunction evalExpr(expr, data, owner) {\n    if (expr.value != null) {\n        return expr.value;\n    }\n\n    var value = dataCache.get(data, expr);\n\n    if (value == null) {\n        switch (expr.type) {\n            case 9:\n                value = evalExpr(expr.expr, data, owner);\n                switch (expr.operator) {\n                    case 33:\n                        value = !value;\n                        break;\n\n                    case 45:\n                        value = 0 - value;\n                        break;\n                }\n                break;\n\n            case 8:\n                var leftValue = evalExpr(expr.segs[0], data, owner);\n                var rightValue = evalExpr(expr.segs[1], data, owner);\n\n                /* eslint-disable eqeqeq */\n                switch (expr.operator) {\n                    case 37:\n                        value = leftValue % rightValue;\n                        break;\n                    case 43:\n                        value = leftValue + rightValue;\n                        break;\n                    case 45:\n                        value = leftValue - rightValue;\n                        break;\n                    case 42:\n                        value = leftValue * rightValue;\n                        break;\n                    case 47:\n                        value = leftValue / rightValue;\n                        break;\n                    case 60:\n                        value = leftValue < rightValue;\n                        break;\n                    case 62:\n                        value = leftValue > rightValue;\n                        break;\n                    case 76:\n                        value = leftValue && rightValue;\n                        break;\n                    case 94:\n                        value = leftValue != rightValue;\n                        break;\n                    case 121:\n                        value = leftValue <= rightValue;\n                        break;\n                    case 122:\n                        value = leftValue == rightValue;\n                        break;\n                    case 123:\n                        value = leftValue >= rightValue;\n                        break;\n                    case 155:\n                        value = leftValue !== rightValue;\n                        break;\n                    case 183:\n                        value = leftValue === rightValue;\n                        break;\n                    case 248:\n                        value = leftValue || rightValue;\n                        break;\n                }\n                /* eslint-enable eqeqeq */\n                break;\n\n            case 10:\n                value = evalExpr(\n                    expr.segs[evalExpr(expr.segs[0], data, owner) ? 1 : 2],\n                    data,\n                    owner\n                );\n                break;\n\n            case 12:\n                value = [];\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && (value = value.concat(itemValue));\n                    }\n                    else {\n                        value.push(itemValue);\n                    }\n                }\n                break;\n\n            case 11:\n                value = {};\n                for (var i = 0, l = expr.items.length; i < l; i++) {\n                    var item = expr.items[i];\n                    var itemValue = evalExpr(item.expr, data, owner);\n\n                    if (item.spread) {\n                        itemValue && extend(value, itemValue);\n                    }\n                    else {\n                        value[evalExpr(item.name, data, owner)] = itemValue;\n                    }\n                }\n                break;\n\n            case 4:\n                value = data.get(expr);\n                break;\n\n            case 5:\n                value = evalExpr(expr.expr, data, owner);\n\n                if (owner) {\n                    for (var i = 0, l = expr.filters.length; i < l; i++) {\n                        var filter = expr.filters[i];\n                        var filterName = filter.name.paths[0].value;\n\n                        if (owner.filters[filterName]) {\n                            value = owner.filters[filterName].apply(\n                                owner,\n                                [value].concat(evalArgs(filter.args, data, owner))\n                            );\n                        }\n                        else if (DEFAULT_FILTERS[filterName]) {\n                            value = DEFAULT_FILTERS[filterName](\n                                value,\n                                filter.args[0] ? filter.args[0].value : ''\n                            );\n                        }\n                    }\n                }\n\n                if (value == null) {\n                    value = '';\n                }\n\n                break;\n\n            case 6:\n                if (owner && expr.name.type === 4) {\n                    var method = owner;\n                    var pathsLen = expr.name.paths.length;\n\n                    for (var i = 0; method && i < pathsLen; i++) {\n                        method = method[evalExpr(expr.name.paths[i], data, owner)];\n                    }\n\n                    if (method) {\n                        value = method.apply(owner, evalArgs(expr.args, data, owner));\n                    }\n                }\n\n                break;\n\n            /* eslint-disable no-redeclare */\n            case 7:\n                var buf = '';\n                for (var i = 0, l = expr.segs.length; i < l; i++) {\n                    var seg = expr.segs[i];\n                    buf += seg.value || evalExpr(seg, data, owner);\n                }\n                return buf;\n        }\n\n        dataCache.set(data, expr, value);\n    }\n\n    return value;\n}\n\n// exports = module.exports = evalExpr;\n\n\n/**\n * @file 为函数调用计算参数数组的值\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('./eval-expr');\n\n/**\n * 为函数调用计算参数数组的值\n *\n * @param {Array} args 参数表达式列表\n * @param {Data} data 数据环境\n * @param {Component} owner 组件环境\n * @return {Array}\n */\nfunction evalArgs(args, data, owner) {\n    var result = [];\n    for (var i = 0; i < args.length; i++) {\n        result.push(evalExpr(args[i], data, owner));\n    }\n\n    return result;\n}\n\n// exports = module.exports = evalArgs;\n\n\n/**\n * @file 数据缓存管理器\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\nvar dataCacheSource = {};\nvar dataCacheClearly = 1;\n\n/**\n * 数据缓存管理器\n *\n * @const\n * @type {Object}\n */\nvar dataCache = {\n    clear: function () {\n        if (!dataCacheClearly) {\n            dataCacheClearly = 1;\n            dataCacheSource = {};\n        }\n    },\n\n    set: function (data, expr, value) {\n        if (expr.raw) {\n            dataCacheClearly = 0;\n            (dataCacheSource[data.id] = dataCacheSource[data.id] || {})[expr.raw] = value;\n        }\n    },\n\n    get: function (data, expr) {\n        if (expr.raw && dataCacheSource[data.id]) {\n            return dataCacheSource[data.id][expr.raw];\n        }\n    }\n};\n\n\n// exports = module.exports = dataCache;\n\n\n/**\n * @file 比较变更表达式与目标表达式之间的关系\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var each = require('../util/each');\n\n/**\n * 判断变更表达式与多个表达式之间的关系，0为完全没关系，1为有关系\n *\n * @inner\n * @param {Object} changeExpr 目标表达式\n * @param {Array} exprs 多个源表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompareExprs(changeExpr, exprs, data) {\n    for (var i = 0, l = exprs.length; i < l; i++) {\n        if (changeExprCompare(changeExpr, exprs[i], data)) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n/**\n * 比较变更表达式与目标表达式之间的关系，用于视图更新判断\n * 视图更新需要根据其关系，做出相应的更新行为\n *\n * 0: 完全没关系\n * 1: 变更表达式是目标表达式的母项(如a与a.b) 或 表示需要完全变化\n * 2: 变更表达式是目标表达式相等\n * >2: 变更表达式是目标表达式的子项，如a.b.c与a.b\n *\n * @param {Object} changeExpr 变更表达式\n * @param {Object} expr 要比较的目标表达式\n * @param {Data} data 表达式所属数据环境\n * @return {number}\n */\nfunction changeExprCompare(changeExpr, expr, data) {\n    switch (expr.type) {\n        case 4:\n            var paths = expr.paths;\n            var pathsLen = paths.length;\n            var changePaths = changeExpr.paths;\n            var changeLen = changePaths.length;\n\n            var result = 1;\n            for (var i = 0; i < pathsLen; i++) {\n                var pathExpr = paths[i];\n                var pathExprValue = pathExpr.value;\n\n                if (pathExprValue == null && changeExprCompare(changeExpr, pathExpr, data)) {\n                    return 1;\n                }\n\n                if (result && i < changeLen\n                    /* eslint-disable eqeqeq */\n                    && (pathExprValue || evalExpr(pathExpr, data))\n                        != (changePaths[i].value || evalExpr(changePaths[i], data))\n                    /* eslint-enable eqeqeq */\n                ) {\n                    result = 0;\n                }\n            }\n\n            if (result) {\n                result = Math.max(1, changeLen - pathsLen + 2);\n            }\n            return result;\n\n        case 9:\n            return changeExprCompare(changeExpr, expr.expr, data) ? 1 : 0;\n\n\n        case 7:\n        case 8:\n        case 10:\n            return changeExprCompareExprs(changeExpr, expr.segs, data);\n\n        case 12:\n        case 11:\n            for (var i = 0, l = expr.items.length; i < l; i++) {\n                if (changeExprCompare(changeExpr, expr.items[i].expr, data)) {\n                    return 1;\n                }\n            }\n\n            return 0;\n\n        case 5:\n            if (!changeExprCompare(changeExpr, expr.expr, data)) {\n                var filterResult;\n                each(expr.filters, function (filter) {\n                    filterResult = changeExprCompareExprs(changeExpr, filter.args, data);\n                    return !filterResult;\n                });\n\n                return filterResult ? 1 : 0;\n            }\n\n            return 1;\n\n        case 6:\n            if (changeExprCompareExprs(changeExpr, expr.name.paths, data)\n                || changeExprCompareExprs(changeExpr, expr.args, data)\n            ) {\n                return 1;\n            }\n    }\n\n    return 0;\n}\n\n// exports = module.exports = changeExprCompare;\n\n\n/**\n * @file 数据变更类型枚举\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 数据变更类型枚举\n *\n * @const\n * @type {Object}\n */\nvar DataChangeType = {\n    SET: 1,\n    SPLICE: 2\n};\n\n// exports = module.exports = DataChangeType;\n\n\n/**\n * @file 生命周期类\n * @author errorrik(errorrik@gmail.com)\n */\n\nfunction lifeCycleOwnIs(name) {\n    return this[name];\n}\n\n/* eslint-disable fecs-valid-var-jsdoc */\n/**\n * 节点生命周期信息\n *\n * @inner\n * @type {Object}\n */\nvar LifeCycle = {\n    start: {},\n\n    compiled: {\n        is: lifeCycleOwnIs,\n        compiled: true\n    },\n\n    inited: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true\n    },\n\n    created: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true\n    },\n\n    attached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true\n    },\n\n    leaving: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        attached: true,\n        leaving: true\n    },\n\n    detached: {\n        is: lifeCycleOwnIs,\n        compiled: true,\n        inited: true,\n        created: true,\n        detached: true\n    },\n\n    disposed: {\n        is: lifeCycleOwnIs,\n        disposed: true\n    }\n};\n/* eslint-enable fecs-valid-var-jsdoc */\n\n\n// exports = module.exports = LifeCycle;\n\n\n/**\n * @file 节点类型\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 节点类型\n *\n * @const\n * @type {Object}\n */\nvar NodeType = {\n    TEXT: 1,\n    IF: 2,\n    FOR: 3,\n    ELEM: 4,\n    CMPT: 5,\n    SLOT: 6,\n    TPL: 7\n};\n\n// exports = module.exports = NodeType;\n\n\n/**\n * @file 获取 ANode props 数组中相应 name 的项\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 获取 ANode props 数组中相应 name 的项\n *\n * @param {Object} aNode ANode对象\n * @param {string} name name属性匹配串\n * @return {Object}\n */\nfunction getANodeProp(aNode, name) {\n    var index = aNode.hotspot.props[name];\n    if (index != null) {\n        return aNode.props[index];\n    }\n}\n\n// exports = module.exports = getANodeProp;\n\n\n/**\n * @file 获取属性处理对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var contains = require('../util/contains');\n// var empty = require('../util/empty');\n// var svgTags = require('../browser/svg-tags');\n// var evalExpr = require('../runtime/eval-expr');\n// var getANodeProp = require('./get-a-node-prop');\n// var NodeType = require('./node-type');\n\n\n/**\n * HTML 属性和 DOM 操作属性的对照表\n *\n * @inner\n * @const\n * @type {Object}\n */\nvar HTML_ATTR_PROP_MAP = {\n    'readonly': 'readOnly',\n    'cellpadding': 'cellPadding',\n    'cellspacing': 'cellSpacing',\n    'colspan': 'colSpan',\n    'rowspan': 'rowSpan',\n    'valign': 'vAlign',\n    'usemap': 'useMap',\n    'frameborder': 'frameBorder',\n    'for': 'htmlFor'\n};\n\n/**\n * 默认的元素的属性设置的变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandler = {\n    prop: function (el, value, name, element) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        value = value == null ? '' : value;\n        // input 的 type 是个特殊属性，其实也应该用 setAttribute\n        // 但是 type 不应该运行时动态改变，否则会有兼容性问题\n        // 所以这里直接就不管了\n        if (propName in el) {\n            el[propName] = value;\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n\n        // attribute 绑定的是 text，所以不会出现 null 的情况，这里无需处理\n        // 换句话来说，san 是做不到 attribute 时有时无的\n        // if (value == null) {\n        //     el.removeAttribute(name);\n        // }\n    },\n\n    output: function (element, bindInfo, data) {\n        data.set(bindInfo.expr, element.el[bindInfo.name], {\n            target: {\n                id: element.id,\n                prop: bindInfo.name\n            }\n        });\n    }\n};\n\nvar svgPropHandler = {\n    prop: function (el, value, name) {\n        el.setAttribute(name, value);\n    }\n};\n\nvar boolPropHandler = {\n    prop: function (el, value, name, element, prop) {\n        var propName = HTML_ATTR_PROP_MAP[name] || name;\n        el[propName] = !!(prop && prop.raw === ''\n            || value && value !== 'false' && value !== '0');\n    }\n};\n\n/* eslint-disable fecs-properties-quote */\n/**\n * 默认的属性设置变换方法\n *\n * @inner\n * @type {Object}\n */\nvar defaultElementPropHandlers = {\n    style: {\n        prop: function (el, value) {\n            el.style.cssText = value;\n        }\n    },\n\n    'class': { // eslint-disable-line\n        prop: function (el, value) {\n            el.className = value;\n        }\n    },\n\n    slot: {\n        prop: empty\n    },\n\n    draggable: boolPropHandler\n};\n/* eslint-enable fecs-properties-quote */\n\nvar analInputChecker = {\n    checkbox: contains,\n    radio: function (a, b) {\n        return a === b;\n    }\n};\n\nfunction analInputCheckedState(element, value) {\n    var bindValue = getANodeProp(element.aNode, 'value');\n    var bindType = getANodeProp(element.aNode, 'type');\n\n    if (bindValue && bindType) {\n        var type = evalExpr(bindType.expr, element.scope, element.owner);\n\n        if (analInputChecker[type]) {\n            var bindChecked = getANodeProp(element.aNode, 'checked');\n            if (bindChecked != null && !bindChecked.hintExpr) {\n                bindChecked.hintExpr = bindValue.expr;\n            }\n\n            return !!analInputChecker[type](\n                value,\n                evalExpr(bindValue.expr, element.scope, element.owner)\n            );\n        }\n    }\n}\n\nvar elementPropHandlers = {\n    input: {\n        multiple: boolPropHandler,\n        checked: {\n            prop: function (el, value, name, element) {\n                var state = analInputCheckedState(element, value);\n\n                boolPropHandler.prop(\n                    el,\n                    state != null ? state : value,\n                    'checked',\n                    element\n                );\n            },\n\n            output: function (element, bindInfo, data) {\n                var el = element.el;\n                var bindValue = getANodeProp(element.aNode, 'value');\n                var bindType = getANodeProp(element.aNode, 'type') || {};\n\n                if (bindValue && bindType) {\n                    switch (el.type.toLowerCase()) {\n                        case 'checkbox':\n                            data[el.checked ? 'push' : 'remove'](bindInfo.expr, el.value);\n                            return;\n\n                        case 'radio':\n                            el.checked && data.set(bindInfo.expr, el.value, {\n                                target: {\n                                    id: element.id,\n                                    prop: bindInfo.name\n                                }\n                            });\n                            return;\n                    }\n                }\n\n                defaultElementPropHandler.output(element, bindInfo, data);\n            }\n        },\n        readonly: boolPropHandler,\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        required: boolPropHandler\n    },\n\n    option: {\n        value: {\n            prop: function (el, value, name, element) {\n                defaultElementPropHandler.prop(el, value, name, element);\n\n                if (isOptionSelected(element, value)) {\n                    el.selected = true;\n                }\n            }\n        }\n    },\n\n    select: {\n        value: {\n            prop: function (el, value) {\n                el.value = value || '';\n            },\n\n            output: defaultElementPropHandler.output\n        },\n        readonly: boolPropHandler,\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        required: boolPropHandler\n    },\n\n    textarea: {\n        readonly: boolPropHandler,\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        required: boolPropHandler\n    },\n\n    button: {\n        disabled: boolPropHandler,\n        autofocus: boolPropHandler,\n        type: {\n            prop: function (el, value) {\n                el.setAttribute('type', value || '');\n            }\n        }\n    }\n};\n\nfunction isOptionSelected(element, value) {\n    var parentSelect = element.parent;\n    while (parentSelect) {\n        if (parentSelect.tagName === 'select') {\n            break;\n        }\n\n        parentSelect = parentSelect.parent;\n    }\n\n\n    if (parentSelect) {\n        var selectValue = null;\n        var prop;\n        var expr;\n\n        if ((prop = getANodeProp(parentSelect.aNode, 'value'))\n            && (expr = prop.expr)\n        ) {\n            selectValue = parentSelect.nodeType === 5\n                ? evalExpr(expr, parentSelect.data, parentSelect)\n                : evalExpr(expr, parentSelect.scope, parentSelect.owner)\n                || '';\n        }\n\n        if (selectValue === value) {\n            return 1;\n        }\n    }\n}\n\n\n/**\n * 获取属性处理对象\n *\n * @param {string} tagName 元素tag\n * @param {string} attrName 属性名\n * @return {Object}\n */\nfunction getPropHandler(tagName, attrName) {\n    if (svgTags[tagName]) {\n        return svgPropHandler;\n    }\n\n    var tagPropHandlers = elementPropHandlers[tagName];\n    if (!tagPropHandlers) {\n        tagPropHandlers = elementPropHandlers[tagName] = {};\n    }\n\n    var propHandler = tagPropHandlers[attrName];\n    if (!propHandler) {\n        propHandler = defaultElementPropHandlers[attrName] || defaultElementPropHandler;\n        tagPropHandlers[attrName] = propHandler;\n    }\n\n    return propHandler;\n}\n\n// exports = module.exports = getPropHandler;\n\n\n/**\n * @file 判断变更是否来源于元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 判断变更是否来源于元素，来源于元素时，视图更新需要阻断\n *\n * @param {Object} change 变更对象\n * @param {Element} element 元素\n * @param {string?} propName 属性名，可选。需要精确判断是否来源于此属性时传入\n * @return {boolean}\n */\nfunction isDataChangeByElement(change, element, propName) {\n    var changeTarget = change.option.target;\n    return changeTarget && changeTarget.id === element.id\n        && (!propName || changeTarget.prop === propName);\n}\n\n// exports = module.exports = isDataChangeByElement;\n\n\n/**\n * @file 在对象上使用accessor表达式查找方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 在对象上使用accessor表达式查找方法\n *\n * @param {Object} source 源对象\n * @param {Object} nameExpr 表达式\n * @param {Data} data 所属数据环境\n * @return {Function}\n */\nfunction findMethod(source, nameExpr, data) {\n    var method = source;\n\n    for (var i = 0; method != null && i < nameExpr.paths.length; i++) {\n        method = method[evalExpr(nameExpr.paths[i], data)];\n    }\n\n    return method;\n}\n\n// exports = module.exports = findMethod;\n\n\n/**\n * @file 数据类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var evalExpr = require('./eval-expr');\n// var DataChangeType = require('./data-change-type');\n// var createAccessor = require('../parser/create-accessor');\n// var parseExpr = require('../parser/parse-expr');\n// var guid = require('../util/guid');\n// var dataCache = require('./data-cache');\n\n/**\n * 数据类\n *\n * @class\n * @param {Object?} data 初始数据\n * @param {Model?} parent 父级数据容器\n */\nfunction Data(data, parent) {\n    this.id = guid();\n    this.parent = parent;\n    this.raw = data || {};\n    this.listeners = [];\n}\n\n// #[begin] error\n// 以下两个函数只在开发模式下可用，在生产模式下不存在\n/**\n * DataTypes 检测\n */\nData.prototype.checkDataTypes = function () {\n    if (this.typeChecker) {\n        this.typeChecker(this.raw);\n    }\n};\n\n/**\n * 设置 type checker\n *\n * @param  {Function} typeChecker 类型校验器\n */\nData.prototype.setTypeChecker = function (typeChecker) {\n    this.typeChecker = typeChecker;\n};\n\n// #[end]\n\n/**\n * 添加数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.listen = function (listener) {\n    if (typeof listener === 'function') {\n        this.listeners.push(listener);\n    }\n};\n\n/**\n * 移除数据变更的事件监听器\n *\n * @param {Function} listener 监听函数\n */\nData.prototype.unlisten = function (listener) {\n    var len = this.listeners.length;\n    while (len--) {\n        if (!listener || this.listeners[len] === listener) {\n            this.listeners.splice(len, 1);\n        }\n    }\n};\n\n/**\n * 触发数据变更\n *\n * @param {Object} change 变更信息对象\n */\nData.prototype.fire = function (change) {\n    if (change.option.silent || change.option.silence || change.option.quiet) {\n        return;\n    }\n\n    for (var i = 0; i < this.listeners.length; i++) {\n        this.listeners[i].call(this, change);\n    }\n};\n\n/**\n * 获取数据项\n *\n * @param {string|Object?} expr 数据项路径\n * @param {Data?} callee 当前数据获取的调用环境\n * @return {*}\n */\nData.prototype.get = function (expr, callee) {\n    var value = this.raw;\n    if (!expr) {\n        return value;\n    }\n\n    expr = parseExpr(expr);\n\n    var paths = expr.paths;\n    callee = callee || this;\n\n    value = value[paths[0].value];\n\n    if (value == null && this.parent) {\n        value = this.parent.get(expr, callee);\n    }\n    else {\n        for (var i = 1, l = paths.length; value != null && i < l; i++) {\n            value = value[paths[i].value || evalExpr(paths[i], callee)];\n        }\n    }\n\n    return value;\n};\n\n\n/**\n * 数据对象变更操作\n *\n * @inner\n * @param {Object|Array} source 要变更的源数据\n * @param {Array} exprPaths 属性路径\n * @param {*} value 变更属性值\n * @param {Data} data 对应的Data对象\n * @return {*} 变更后的新数据\n */\nfunction immutableSet(source, exprPaths, value, data) {\n    if (exprPaths.length === 0) {\n        return value;\n    }\n\n    if (source == null) {\n        source = {};\n    }\n\n    var prop = evalExpr(exprPaths[0], data);\n    var result = source;\n\n    if (source instanceof Array) {\n        var index = +prop;\n\n        result = source.slice(0);\n        result[isNaN(index) ? prop : index] = immutableSet(source[index], exprPaths.slice(1), value, data);\n    }\n    else if (typeof source === 'object') {\n        result = {};\n\n        for (var key in source) {\n            if (key !== prop) {\n                result[key] = source[key];\n            }\n        }\n\n        result[prop] = immutableSet(source[prop], exprPaths.slice(1), value, data);\n    }\n\n    return result;\n}\n\n/**\n * 设置数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.set = function (expr, value, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data set: ' + exprRaw);\n    }\n    // #[end]\n\n    if (this.get(expr) === value && !option.force) {\n        return;\n    }\n\n    dataCache.clear();\n    this.raw = immutableSet(this.raw, expr.paths, value, this);\n    this.fire({\n        type: 1,\n        expr: expr,\n        value: value,\n        option: option\n    });\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n};\n\n/**\n * 合并更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object} source 待合并的数据值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.merge = function (expr, source, option) {\n    option = option || {};\n\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data merge: ' + exprRaw);\n    }\n\n    if (typeof this.get(expr) !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Target of Type \\'object\\'; got ' + typeof oldValue);\n    }\n\n    if (typeof source !== 'object') {\n        throw new Error('[SAN ERROR] Merge Expects a Source of Type \\'object\\'; got ' + typeof source);\n    }\n    // #[end]\n\n    for (var key in source) { // eslint-disable-line\n        this.set(\n            createAccessor(\n                expr.paths.concat(\n                    [\n                        {\n                            type: 1,\n                            value: key\n                        }\n                    ]\n                )\n            ),\n            source[key],\n            option\n        );\n    }\n};\n\n/**\n * 基于更新函数更新数据项\n *\n * @param {string|Object} expr 数据项路径\n * @param {Function} fn 数据处理函数\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.apply = function (expr, fn, option) {\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data apply: ' + exprRaw);\n    }\n    // #[end]\n\n    var oldValue = this.get(expr);\n\n    // #[begin] error\n    if (typeof fn !== 'function') {\n        throw new Error(\n            '[SAN ERROR] Invalid Argument\\'s Type in Data apply: '\n            + 'Expected Function but got ' + typeof fn\n        );\n    }\n    // #[end]\n\n    this.set(expr, fn(oldValue), option);\n};\n\n/**\n * 数组数据项splice操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Array} args splice 接受的参数列表，数组项与Array.prototype.splice的参数一致\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {Array} 新数组\n */\nData.prototype.splice = function (expr, args, option) {\n    option = option || {};\n    // #[begin] error\n    var exprRaw = expr;\n    // #[end]\n\n    expr = parseExpr(expr);\n\n    // #[begin] error\n    if (expr.type !== 4) {\n        throw new Error('[SAN ERROR] Invalid Expression in Data splice: ' + exprRaw);\n    }\n    // #[end]\n\n    var target = this.get(expr);\n    var returnValue = [];\n\n    if (target instanceof Array) {\n        var index = args[0];\n        var len = target.length;\n        if (index > len) {\n            index = len;\n        }\n        else if (index < 0) {\n            index = len + index;\n            if (index < 0) {\n                index = 0;\n            }\n        }\n\n        var newArray = target.slice(0);\n        returnValue = newArray.splice.apply(newArray, args);\n        dataCache.clear();\n        this.raw = immutableSet(this.raw, expr.paths, newArray, this);\n\n        this.fire({\n            expr: expr,\n            type: 2,\n            index: index,\n            deleteCount: returnValue.length,\n            value: returnValue,\n            insertions: args.slice(2),\n            option: option\n        });\n    }\n\n    // #[begin] error\n    this.checkDataTypes();\n    // #[end]\n\n    return returnValue;\n};\n\n/**\n * 数组数据项push操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要push的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.push = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [target.length, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项pop操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.pop = function (expr, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        if (len) {\n            return this.splice(expr, [len - 1, 1], option)[0];\n        }\n    }\n};\n\n/**\n * 数组数据项shift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {*}\n */\nData.prototype.shift = function (expr, option) {\n    return this.splice(expr, [0, 1], option)[0];\n};\n\n/**\n * 数组数据项unshift操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} item 要unshift的值\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n * @return {number} 新数组的length属性\n */\nData.prototype.unshift = function (expr, item, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        this.splice(expr, [0, 0, item], option);\n        return target.length + 1;\n    }\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {number} index 要移除项的索引\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.removeAt = function (expr, index, option) {\n    this.splice(expr, [index, 1], option);\n};\n\n/**\n * 数组数据项移除操作\n *\n * @param {string|Object} expr 数据项路径\n * @param {*} value 要移除的项\n * @param {Object=} option 设置参数\n * @param {boolean} option.silent 静默设置，不触发变更事件\n */\nData.prototype.remove = function (expr, value, option) {\n    var target = this.get(expr);\n\n    if (target instanceof Array) {\n        var len = target.length;\n        while (len--) {\n            if (target[len] === value) {\n                this.splice(expr, [len, 1], option);\n                break;\n            }\n        }\n    }\n};\n\n// exports = module.exports = Data;\n\n\n/**\n * @file 声明式事件的监听函数\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var Data = require('../runtime/data');\n\n/**\n * 声明式事件的监听函数\n *\n * @param {Object} eventBind 绑定信息对象\n * @param {boolean} isComponentEvent 是否组件自定义事件\n * @param {Data} data 数据环境\n * @param {Event} e 事件对象\n */\nfunction eventDeclarationListener(eventBind, isComponentEvent, data, e) {\n    var method = findMethod(this, eventBind.expr.name, data);\n\n    if (typeof method === 'function') {\n        var scope = new Data(\n            {$event: isComponentEvent ? e : e || window.event},\n            data\n        );\n        method.apply(this, evalArgs(eventBind.expr.args, scope, this));\n    }\n}\n\n// exports = module.exports = eventDeclarationListener;\n\n\n/**\n * @file 是否浏览器环境\n * @author errorrik(errorrik@gmail.com)\n */\n\nvar isBrowser = typeof window !== 'undefined';\n\n// exports = module.exports = isBrowser;\n\n\n/**\n * @file insertBefore 方法的兼容性封装\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * insertBefore 方法的兼容性封装\n *\n * @param {HTMLNode} targetEl 要插入的节点\n * @param {HTMLElement} parentEl 父元素\n * @param {HTMLElement?} beforeEl 在此元素之前插入\n */\nfunction insertBefore(targetEl, parentEl, beforeEl) {\n    if (parentEl) {\n        if (beforeEl) {\n            parentEl.insertBefore(targetEl, beforeEl);\n        }\n        else {\n            parentEl.appendChild(targetEl);\n        }\n    }\n}\n\n// exports = module.exports = insertBefore;\n\n\n/**\n * @file 判断元素是否不允许设置HTML\n * @author errorrik(errorrik@gmail.com)\n */\n\n// some html elements cannot set innerHTML in old ie\n// see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n\n/**\n * 判断元素是否不允许设置HTML\n *\n * @param {HTMLElement} el 要判断的元素\n * @return {boolean}\n */\nfunction noSetHTML(el) {\n    return /^(col|colgroup|frameset|style|table|tbody|tfoot|thead|tr|select)$/i.test(el.tagName);\n}\n\n// exports = module.exports = noSetHTML;\n\n\n/**\n * @file  获取节点 stump 的 comment\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var noSetHTML = require('../browser/no-set-html');\n\n// #[begin] error\n/**\n * 获取节点 stump 的 comment\n *\n * @param {HTMLElement} el HTML元素\n */\nfunction warnSetHTML(el) {\n    // dont warn if not in browser runtime\n    if (!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document)) {\n        return;\n    }\n\n    // some html elements cannot set innerHTML in old ie\n    // see: https://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx\n    if (noSetHTML(el)) {\n        var message = '[SAN WARNING] set html for element \"' + el.tagName\n            + '\" may cause an error in old IE';\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnSetHTML;\n\n\n/**\n * @file 判断是否结束桩\n * @author errorrik(errorrik@gmail.com)\n */\n\n// #[begin] reverse\n/**\n * 判断是否结束桩\n *\n * @param {HTMLElement|HTMLComment} target 要判断的元素\n * @param {string} type 桩类型\n * @return {boolean}\n */\nfunction isEndStump(target, type) {\n    return target.nodeType === 8 && target.data === '/s-' + type;\n}\n// #[end]\n\n// exports = module.exports = isEndStump;\n\n\n/**\n * @file 获取节点在组件树中的路径\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var NodeType = require('./node-type');\n\n// #[begin] reverse\n/**\n * 获取节点在组件树中的路径\n *\n * @param {Node} node 节点对象\n * @return {Array}\n */\nfunction getNodePath(node) {\n    var nodePaths = [];\n    var nodeParent = node;\n    while (nodeParent) {\n        switch (nodeParent.nodeType) {\n            case 4:\n                nodePaths.unshift(nodeParent.tagName);\n                break;\n\n            case 2:\n                nodePaths.unshift('if');\n                break;\n\n            case 3:\n                nodePaths.unshift('for[' + nodeParent.anode.directives['for'].raw + ']'); // eslint-disable-line dot-notation\n                break;\n\n            case 6:\n                nodePaths.unshift('slot[' + (nodeParent.name || 'default') + ']');\n                break;\n\n            case 7:\n                nodePaths.unshift('template');\n                break;\n\n            case 5:\n                nodePaths.unshift('component[' + (nodeParent.subTag || 'root') + ']');\n                break;\n\n            case 1:\n                nodePaths.unshift('text');\n                break;\n        }\n\n        nodeParent = nodeParent.parent;\n    }\n\n    return nodePaths;\n}\n// #[end]\n\n// exports = module.exports = getNodePath;\n\n\n/**\n * @file text 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n// var removeEl = require('../browser/remove-el');\n// var insertBefore = require('../browser/insert-before');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var warnSetHTML = require('./warn-set-html');\n// var isEndStump = require('./is-end-stump');\n// var getNodePath = require('./get-node-path');\n\n\n/**\n * text 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TextNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n        if (currentNode) {\n            switch (currentNode.nodeType) {\n                case 8:\n                    if (currentNode.data === 's-text') {\n                        this.sel = currentNode;\n                        currentNode.data = this.id;\n                        reverseWalker.goNext();\n\n                        while (1) { // eslint-disable-line\n                            currentNode = reverseWalker.current;\n                            if (!currentNode) {\n                                throw new Error('[SAN REVERSE ERROR] Text end flag not found. \\nPaths: '\n                                    + getNodePath(this).join(' > '));\n                            }\n\n                            if (isEndStump(currentNode, 'text')) {\n                                this.el = currentNode;\n                                reverseWalker.goNext();\n                                currentNode.data = this.id;\n                                break;\n                            }\n\n                            reverseWalker.goNext();\n                        }\n                    }\n                    break;\n\n                case 3:\n                    reverseWalker.goNext();\n                    if (!this.aNode.textExpr.original) {\n                        this.el = currentNode;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.el = document.createTextNode('');\n            insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n        }\n    }\n    // #[end]\n}\n\nTextNode.prototype.nodeType = 1;\n\n/**\n * 将text attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nTextNode.prototype.attach = function (parentEl, beforeEl) {\n    this.content = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n    if (this.aNode.textExpr.original) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, parentEl, beforeEl);\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, parentEl, beforeEl);\n\n        var tempFlag = document.createElement('script');\n        parentEl.insertBefore(tempFlag, this.el);\n        tempFlag.insertAdjacentHTML('beforebegin', this.content);\n        parentEl.removeChild(tempFlag);\n    }\n    else {\n        this.el = document.createTextNode(this.content);\n        insertBefore(this.el, parentEl, beforeEl);\n    }\n};\n\n/**\n * 销毁 text 节点\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nTextNode.prototype.dispose = function (noDetach) {\n    if (!noDetach) {\n        removeEl(this.el);\n        removeEl(this.sel);\n    }\n\n    this.el = null;\n    this.sel = null;\n};\n\nvar textUpdateProp = isBrowser\n    && (typeof document.createTextNode('').textContent === 'string'\n        ? 'textContent'\n        : 'data');\n\n/**\n * 更新 text 节点的视图\n *\n * @param {Array} changes 数据变化信息\n */\nTextNode.prototype._update = function (changes) {\n    if (this.aNode.textExpr.value) {\n        return;\n    }\n\n    var len = changes ? changes.length : 0;\n    while (len--) {\n        if (changeExprCompare(changes[len].expr, this.aNode.textExpr, this.scope)) {\n            var text = evalExpr(this.aNode.textExpr, this.scope, this.owner);\n\n            if (text !== this.content) {\n                this.content = text;\n\n                if (this.aNode.textExpr.original) {\n                    var startRemoveEl = this.sel.nextSibling;\n                    var parentEl = this.el.parentNode;\n\n                    while (startRemoveEl !== this.el) {\n                        var removeTarget = startRemoveEl;\n                        startRemoveEl = startRemoveEl.nextSibling;\n                        removeEl(removeTarget);\n                    }\n\n                    // #[begin] error\n                    warnSetHTML(parentEl);\n                    // #[end]\n\n                    var tempFlag = document.createElement('script');\n                    parentEl.insertBefore(tempFlag, this.el);\n                    tempFlag.insertAdjacentHTML('beforebegin', text);\n                    parentEl.removeChild(tempFlag);\n                }\n                else {\n                    this.el[textUpdateProp] = text;\n                }\n            }\n\n            return;\n        }\n    }\n};\n\n// exports = module.exports = TextNode;\n\n\n/**\n * @file 判断变更数组是否影响到数据引用摘要\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 判断变更数组是否影响到数据引用摘要\n *\n * @param {Array} changes 变更数组\n * @param {Object} dataRef 数据引用摘要\n * @return {boolean}\n */\nfunction changesIsInDataRef(changes, dataRef) {\n    for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (!change.overview) {\n            var paths = change.expr.paths;\n            change.overview = paths[0].value;\n\n            if (paths.length > 1) {\n                change.extOverview = paths[0].value + '.' + paths[1].value;\n                change.wildOverview = paths[0].value + '.*';\n            }\n        }\n\n        if (dataRef[change.overview]\n            || change.wildOverview && dataRef[change.wildOverview]\n            || change.extOverview && dataRef[change.extOverview]\n        ) {\n            return true;\n        }\n    }\n}\n\n// exports = module.exports = changesIsInDataRef;\n\n\n/**\n * @file 元素子节点遍历操作类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n\n// #[begin] reverse\n/**\n * 元素子节点遍历操作类\n *\n * @inner\n * @class\n * @param {HTMLElement} el 要遍历的元素\n */\nfunction DOMChildrenWalker(el) {\n    this.raw = [];\n    this.index = 0;\n    this.target = el;\n\n    var child = el.firstChild;\n    var next;\n    while (child) {\n        next = child.nextSibling;\n\n        switch (child.nodeType) {\n            case 3:\n                if (/^\\s*$/.test(child.data || child.textContent)) {\n                    removeEl(child);\n                }\n                else {\n                    this.raw.push(child);\n                }\n                break;\n\n            case 1:\n            case 8:\n                this.raw.push(child);\n        }\n\n        child = next;\n    }\n\n    this.current = this.raw[this.index];\n    this.next = this.raw[this.index + 1];\n}\n\n/**\n * 往下走一个元素\n */\nDOMChildrenWalker.prototype.goNext = function () {\n    this.current = this.raw[++this.index];\n    this.next = this.raw[this.index + 1];\n};\n// #[end]\n\n// exports = module.exports = DOMChildrenWalker;\n\n\n/**\n * @file 元素节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var guid = require('../util/guid');\n// var removeEl = require('../browser/remove-el');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var evalExpr = require('../runtime/eval-expr');\n// var LifeCycle = require('./life-cycle');\n// var NodeType = require('./node-type');\n// var reverseElementChildren = require('./reverse-element-children');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var getPropHandler = require('./get-prop-handler');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementInitTagName = require('./element-init-tag-name');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var handleProp = require('./handle-prop');\n// var warnSetHTML = require('./warn-set-html');\n// var getNodePath = require('./get-node-path');\n\n/**\n * 元素节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction Element(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    elementInitTagName(this);\n\n    nodeSBindInit(this, aNode.directives.bind);\n\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var currentNode = reverseWalker.current;\n\n        if (!currentNode) {\n            throw new Error('[SAN REVERSE ERROR] Element not found. \\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.nodeType !== 1) {\n            throw new Error('[SAN REVERSE ERROR] Element type not match, expect 1 but '\n                + currentNode.nodeType + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        if (currentNode.tagName.toLowerCase() !== this.tagName) {\n            throw new Error('[SAN REVERSE ERROR] Element tagName not match, expect '\n                + this.tagName + ' but meat ' + currentNode.tagName.toLowerCase() + '.\\nPaths: '\n                + getNodePath(this).join(' > '));\n        }\n\n        this.el = currentNode;\n        reverseWalker.goNext();\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n\nElement.prototype.nodeType = 4;\n\n\nElement.prototype.attach = elementOwnAttach;\nElement.prototype.detach = elementOwnDetach;\nElement.prototype.dispose = elementOwnDispose;\nElement.prototype._create = elementOwnCreate;\nElement.prototype._toPhase = elementOwnToPhase;\nElement.prototype._onEl = elementOwnOnEl;\n\nElement.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 视图更新\n *\n * @param {Array} changes 数据变化信息\n */\nElement.prototype._update = function (changes) {\n    if (!changesIsInDataRef(changes, this.aNode.hotspot.data)) {\n        return;\n    }\n\n    // update s-bind\n    var me = this;\n    nodeSBindUpdate(\n        this,\n        this.aNode.directives.bind,\n        changes,\n        function (name, value) {\n            if (name in me.aNode.hotspot.props) {\n                return;\n            }\n\n            getPropHandler(me.tagName, name).prop(me.el, value, name, me);\n        }\n    );\n\n    // update prop\n    var dynamicProps = this.aNode.hotspot.dynamicProps;\n    for (var i = 0, l = dynamicProps.length; i < l; i++) {\n        var prop = dynamicProps[i];\n\n        for (var j = 0, changeLen = changes.length; j < changeLen; j++) {\n            var change = changes[j];\n\n            if (!isDataChangeByElement(change, this, prop.name)\n                && (\n                    changeExprCompare(change.expr, prop.expr, this.scope)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, this.scope)\n                )\n            ) {\n                handleProp(this, evalExpr(prop.expr, this.scope, this.owner), prop);\n                break;\n            }\n        }\n    }\n\n    // update content\n    var htmlDirective = this.aNode.directives.html;\n    if (htmlDirective) {\n        var len = changes.length;\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, htmlDirective.value, this.scope)) {\n                // #[begin] error\n                warnSetHTML(this.el);\n                // #[end]\n\n                this.el.innerHTML = evalExpr(htmlDirective.value, this.scope, this.owner);\n                break;\n            }\n        }\n    }\n    else {\n        elementUpdateChildren(this, changes);\n    }\n};\n\n/**\n * 执行完成attached状态的行为\n */\nElement.prototype._attached = elementOwnAttached;\n\n// exports = module.exports = Element;\n\n\n/**\n * @file 销毁节点，清空节点上的无用成员\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 销毁节点\n *\n * @param {Object} node 节点对象\n */\nfunction nodeDispose(node) {\n    node.el = null;\n    node.sel = null;\n    node.owner = null;\n    node.scope = null;\n    node.aNode = null;\n    node.parent = null;\n    node.parentComponent = null;\n    node.children = null;\n\n    if (node._toPhase) {\n        node._toPhase('disposed');\n    }\n\n    if (node._ondisposed) {\n        node._ondisposed();\n    }\n}\n\n// exports = module.exports = nodeDispose;\n\n\n/**\n * @file 初始化节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n * @param {Object} sBind bind指令对象\n * @return {boolean}\n */\nfunction nodeSBindInit(node, sBind) {\n    if (sBind && node.scope) {\n        node._sbindData = evalExpr(sBind.value, node.scope, node.owner);\n        return true;\n    }\n}\n\n// exports = module.exports = nodeSBindInit;\n\n\n/**\n * @file 计算两个对象 key 的并集\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 计算两个对象 key 的并集\n *\n * @param {Object} obj1 目标对象\n * @param {Object} obj2 源对象\n * @return {Array}\n */\nfunction unionKeys(obj1, obj2) {\n    var result = [];\n\n    for (var key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            result.push(key);\n        }\n    }\n\n    for (var key in obj2) {\n        if (obj2.hasOwnProperty(key)) {\n            !obj1[key] && result.push(key);\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = unionKeys;\n\n\n/**\n * @file 更新节点的 s-bind 数据\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var unionKeys = require('../util/union-keys');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n\n/**\n * 初始化节点的 s-bind 数据\n *\n * @param {Object} node 节点对象\n * @param {Object} sBind bind指令对象\n * @param {Array} changes 变更数组\n * @param {Function} updater 绑定对象子项变更的更新函数\n */\nfunction nodeSBindUpdate(node, sBind, changes, updater) {\n    if (sBind) {\n        var len = changes.length;\n\n        while (len--) {\n            if (changeExprCompare(changes[len].expr, sBind.value, node.scope)) {\n                var newBindData = evalExpr(sBind.value, node.scope, node.owner);\n                var keys = unionKeys(newBindData, node._sbindData);\n\n                for (var i = 0, l = keys.length; i < l; i++) {\n                    var key = keys[i];\n                    var value = newBindData[key];\n\n                    if (value !== node._sbindData[key]) {\n                        updater(key, value);\n                    }\n                }\n\n                node._sbindData = newBindData;\n                break;\n            }\n\n        }\n    }\n}\n\n// exports = module.exports = nodeSBindUpdate;\n\n\n/**\n * @file 通过组件反解创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n// #[begin] reverse\n/**\n * 通过组件反解创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {DOMChildrenWalker} reverseWalker 子元素遍历对象\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createReverseNode(aNode, reverseWalker, parent, scope) {\n    var parentIsComponent = parent.nodeType === 5;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent, reverseWalker);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent, reverseWalker);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent, reverseWalker);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName,\n                    reverseWalker: reverseWalker\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent, reverseWalker);\n}\n// #[end]\n\n// exports = module.exports = createReverseNode;\n\n\n/**\n * @file 销毁释放元素的子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 销毁释放元素的子元素\n *\n * @param {Object} element 元素节点\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementDisposeChildren(element, noDetach, noTransition) {\n    var children = element.children;\n    var len = children && children.length;\n    while (len--) {\n        children[len].dispose(noDetach, noTransition);\n    }\n}\n\n// exports = module.exports = elementDisposeChildren;\n\n\n/**\n * @file 更新元素的子元素视图\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n/**\n * 更新元素的子元素视图\n *\n * @param {Object} element 要更新的元素\n * @param {Array} changes 数据变化信息\n */\nfunction elementUpdateChildren(element, changes) {\n    for (var i = 0, l = element.children.length; i < l; i++) {\n        element.children[i]._update(changes);\n    }\n}\n\n// exports = module.exports = elementUpdateChildren;\n\n\n/**\n * @file 使元素节点到达相应的生命周期\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var LifeCycle = require('./life-cycle');\n\n/**\n * 使元素节点到达相应的生命周期\n *\n * @param {string} name 生命周期名称\n */\nfunction elementOwnToPhase(name) {\n    this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n}\n\n// exports = module.exports = elementOwnToPhase;\n\n\n/**\n * @file 创建节点的工厂方法\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var NodeType = require('./node-type');\n// var TextNode = require('./text-node');\n// var Element = require('./element');\n// var SlotNode = require('./slot-node');\n// var ForNode = require('./for-node');\n// var IfNode = require('./if-node');\n// var TemplateNode = require('./template-node');\n\n\n/**\n * 创建节点\n *\n * @param {ANode} aNode 抽象节点\n * @param {Node} parent 父亲节点\n * @param {Model=} scope 所属数据环境\n * @return {Node}\n */\nfunction createNode(aNode, parent, scope) {\n    var parentIsComponent = parent.nodeType === 5;\n    var owner = parentIsComponent ? parent : (parent.childOwner || parent.owner);\n    scope = scope || (parentIsComponent ? parent.data : (parent.childScope || parent.scope));\n\n\n    if (aNode.textExpr) {\n        return new TextNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['if']) { // eslint-disable-line dot-notation\n        return new IfNode(aNode, owner, scope, parent);\n    }\n\n    if (aNode.directives['for']) { // eslint-disable-line dot-notation\n        return new ForNode(aNode, owner, scope, parent);\n    }\n\n    switch (aNode.tagName) {\n        case 'slot':\n            return new SlotNode(aNode, owner, scope, parent);\n\n        case 'template':\n            return new TemplateNode(aNode, owner, scope, parent);\n\n        default:\n            var ComponentType = owner.getComponentType\n                ? owner.getComponentType(aNode)\n                : owner.components[aNode.tagName];\n\n            if (ComponentType) {\n                return new ComponentType({\n                    aNode: aNode,\n                    owner: owner,\n                    scope: scope,\n                    parent: parent,\n                    subTag: aNode.tagName\n                });\n            }\n    }\n\n    return new Element(aNode, owner, scope, parent);\n}\n\n// exports = module.exports = createNode;\n\n\n/**\n * @file 生成子元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var createNode = require('./create-node');\n\n/**\n * 生成子元素\n *\n * @param {Element} element 元素\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction genElementChildren(element, parentEl, beforeEl) {\n    parentEl = parentEl || element.el;\n\n    var aNodeChildren = element.aNode.children;\n    for (var i = 0; i < aNodeChildren.length; i++) {\n        var child = createNode(aNodeChildren[i], element);\n        element.children.push(child);\n        child.attach(parentEl, beforeEl);\n    }\n}\n\n// exports = module.exports = genElementChildren;\n\n\n/**\n * @file 将没有 root 只有 children 的元素 attach 到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var insertBefore = require('../browser/insert-before');\n// var genElementChildren = require('./gen-element-children');\n\n\n/**\n * 将没有 root 只有 children 的元素 attach 到页面\n * 主要用于 slot 和 template\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction nodeOwnOnlyChildrenAttach(parentEl, beforeEl) {\n    this.sel = document.createComment(this.id);\n    insertBefore(this.sel, parentEl, beforeEl);\n\n    genElementChildren(this, parentEl, beforeEl);\n\n    this.el = document.createComment(this.id);\n    insertBefore(this.el, parentEl, beforeEl);\n\n    this._toPhase('attached');\n}\n\n// exports = module.exports = nodeOwnOnlyChildrenAttach;\n\n\n/**\n * @file slot 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var createAccessor = require('../parser/create-accessor');\n// var evalExpr = require('../runtime/eval-expr');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var insertBefore = require('../browser/insert-before');\n// var removeEl = require('../browser/remove-el');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var nodeDispose = require('./node-dispose');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n\n/**\n * slot 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction SlotNode(aNode, owner, scope, parent, reverseWalker) {\n    var realANode = createANode();\n    this.aNode = realANode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // calc slot name\n    this.nameBind = getANodeProp(aNode, 'name');\n    if (this.nameBind) {\n        this.isNamed = true;\n        this.name = evalExpr(this.nameBind.expr, this.scope, this.owner);\n    }\n\n    // calc aNode children\n    var givenSlots = owner.givenSlots;\n    var givenChildren;\n    if (givenSlots) {\n        givenChildren = this.isNamed ? givenSlots.named[this.name] : givenSlots.noname;\n    }\n\n    if (givenChildren) {\n        this.isInserted = true;\n    }\n\n    realANode.children = givenChildren || aNode.children.slice(0);\n\n    var me = this;\n\n    // calc scoped slot vars\n    realANode.vars = aNode.vars;\n    realANode.directives = aNode.directives;\n\n    var initData;\n    if (nodeSBindInit(this, aNode.directives.bind)) {\n        initData = extend({}, this._sbindData);\n    }\n\n    if (realANode.vars) {\n        initData = initData || {};\n        each(realANode.vars, function (varItem) {\n            initData[varItem.name] = evalExpr(varItem.expr, scope, owner);\n        });\n    }\n\n    // child owner & child scope\n    if (this.isInserted) {\n        this.childOwner = owner.owner;\n        this.childScope = owner.scope;\n    }\n\n    if (initData) {\n        this.isScoped = true;\n        this.childScope = new Data(initData, this.childScope || this.scope);\n    }\n\n\n    owner.slotChildren.push(this);\n\n    // #[begin] reverse\n    if (reverseWalker) {\n\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\nSlotNode.prototype.nodeType = 6;\n\n/**\n * 销毁释放 slot\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nSlotNode.prototype.dispose = function (noDetach, noTransition) {\n    this.childOwner = null;\n    this.childScope = null;\n\n    elementDisposeChildren(this, noDetach, noTransition);\n\n    if (!noDetach) {\n        removeEl(this.el);\n        removeEl(this.sel);\n    }\n    nodeDispose(this);\n};\n\nSlotNode.prototype.attach = nodeOwnOnlyChildrenAttach;\nSlotNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n * @param {boolean=} isFromOuter 变化信息是否来源于父组件之外的组件\n * @return {boolean}\n */\nSlotNode.prototype._update = function (changes, isFromOuter) {\n    var me = this;\n\n    if (this.nameBind && evalExpr(this.nameBind.expr, this.scope, this.owner) !== this.name) {\n        this.owner._notifyNeedReload();\n        return false;\n    }\n\n    if (isFromOuter) {\n        if (this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n    else {\n        if (this.isScoped) {\n            var varKeys = {};\n            each(this.aNode.vars, function (varItem) {\n                varKeys[varItem.name] = 1;\n                me.childScope.set(varItem.name, evalExpr(varItem.expr, me.scope, me.owner));\n            });\n\n            var scopedChanges = [];\n\n            nodeSBindUpdate(\n                this,\n                this.aNode.directives.bind,\n                changes,\n                function (name, value) {\n                    if (varKeys[name]) {\n                        return;\n                    }\n\n                    me.childScope.set(name, value);\n                    scopedChanges.push({\n                        type: 1,\n                        expr: createAccessor([\n                            {type: 1, value: name}\n                        ]),\n                        value: value,\n                        option: {}\n                    });\n                }\n            );\n\n            each(changes, function (change) {\n                if (!me.isInserted) {\n                    scopedChanges.push(change);\n                }\n\n                each(me.aNode.vars, function (varItem) {\n                    var name = varItem.name;\n                    var relation = changeExprCompare(change.expr, varItem.expr, me.scope);\n\n                    if (relation < 1) {\n                        return;\n                    }\n\n                    if (change.type !== 2) {\n                        scopedChanges.push({\n                            type: 1,\n                            expr: createAccessor([\n                                {type: 1, value: name}\n                            ]),\n                            value: me.childScope.get(name),\n                            option: change.option\n                        });\n                    }\n                    else if (relation === 2) {\n                        scopedChanges.push({\n                            expr: createAccessor([\n                                {type: 1, value: name}\n                            ]),\n                            type: 2,\n                            index: change.index,\n                            deleteCount: change.deleteCount,\n                            value: change.value,\n                            insertions: change.insertions,\n                            option: change.option\n                        });\n                    }\n                });\n            });\n\n            elementUpdateChildren(this, scopedChanges);\n        }\n        else if (!this.isInserted) {\n            elementUpdateChildren(this, changes);\n        }\n    }\n};\n\n// exports = module.exports = SlotNode;\n\n\n/**\n * @file 复制指令集合对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n/**\n * 复制指令集合对象\n *\n * @param {Object} source 要复制的指令集合对象\n * @param {Object=} excludes 需要排除的key集合\n * @return {Object}\n */\nfunction cloneDirectives(source, excludes) {\n    var result = {};\n    excludes = excludes || {};\n\n    for (var key in source) {\n        if (!excludes[key]) {\n            result[key] = source[key];\n        }\n    }\n\n    return result;\n}\n\n// exports = module.exports = cloneDirectives;\n\n\n/**\n * @file 简单执行销毁节点的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var removeEl = require('../browser/remove-el');\n// var nodeDispose = require('./node-dispose');\n// var elementDisposeChildren = require('./element-dispose-children');\n\n/**\n * 简单执行销毁节点的行为\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n */\nfunction nodeOwnSimpleDispose(noDetach) {\n    elementDisposeChildren(this, noDetach, 1);\n\n    if (!noDetach) {\n        removeEl(this.el);\n    }\n\n    nodeDispose(this);\n}\n\n// exports = module.exports = nodeOwnSimpleDispose;\n\n\n/**\n * @file 创建节点对应的 stump comment 元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n\n/**\n * 创建节点对应的 stump comment 主元素\n */\nfunction nodeOwnCreateStump() {\n    this.el = this.el || document.createComment(this.id);\n}\n\n// exports = module.exports = nodeOwnCreateStump;\n\n\n/**\n * @file for 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var inherits = require('../util/inherits');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var createANode = require('../parser/create-a-node');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var cloneDirectives = require('../parser/clone-directives');\n// var Data = require('../runtime/data');\n// var DataChangeType = require('../runtime/data-change-type');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var evalExpr = require('../runtime/eval-expr');\n// var changesIsInDataRef = require('../runtime/changes-is-in-data-ref');\n// var insertBefore = require('../browser/insert-before');\n// var NodeType = require('./node-type');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var dataCache = require('../runtime/data-cache');\n\n\n/**\n * 循环项的数据容器类\n *\n * @inner\n * @class\n * @param {Object} forElement for元素对象\n * @param {*} item 当前项的数据\n * @param {number} index 当前项的索引\n */\nfunction ForItemData(forElement, item, index) {\n    this.id = guid();\n    this.parent = forElement.scope;\n    this.raw = {};\n    this.listeners = [];\n\n    this.directive = forElement.aNode.directives['for']; // eslint-disable-line dot-notation\n    this.raw[this.directive.item.raw] = item;\n    this.raw[this.directive.index.raw] = index;\n}\n\n/**\n * 将数据操作的表达式，转换成为对parent数据操作的表达式\n * 主要是对item和index进行处理\n *\n * @param {Object} expr 表达式\n * @return {Object}\n */\nForItemData.prototype.exprResolve = function (expr) {\n    var directive = this.directive;\n    var me = this;\n\n    function resolveItem(expr) {\n        if (expr.type === 4\n            && expr.paths[0].value === directive.item.paths[0].value\n        ) {\n            return createAccessor(\n                directive.value.paths.concat(\n                    {\n                        type: 2,\n                        value: me.get(directive.index)\n                    },\n                    expr.paths.slice(1)\n                )\n            );\n        }\n\n        return expr;\n    }\n\n    expr = resolveItem(expr);\n\n    var resolvedPaths = [];\n\n    each(expr.paths, function (item) {\n        resolvedPaths.push(\n            item.type === 4\n                && item.paths[0].value === directive.index.paths[0].value\n            ? {\n                type: 2,\n                value: me.get(directive.index)\n            }\n            : resolveItem(item)\n        );\n    });\n\n    return createAccessor(resolvedPaths);\n};\n\n// 代理数据操作方法\ninherits(ForItemData, Data);\neach(\n    ['set', 'remove', 'unshift', 'shift', 'push', 'pop', 'splice'],\n    function (method) {\n        ForItemData.prototype['_' + method] = Data.prototype[method];\n        ForItemData.prototype[method] = function (expr) {\n            expr = this.exprResolve(parseExpr(expr));\n            dataCache.clear();\n            this.parent[method].apply(\n                this.parent,\n                [expr].concat(Array.prototype.slice.call(arguments, 1))\n            );\n        };\n    }\n);\n\n/**\n * 创建 for 指令元素的子元素\n *\n * @inner\n * @param {ForDirective} forElement for 指令元素对象\n * @param {*} item 子元素对应数据\n * @param {number} index 子元素对应序号\n * @return {Element}\n */\nfunction createForDirectiveChild(forElement, item, index) {\n    var itemScope = new ForItemData(forElement, item, index);\n    return createNode(forElement.itemANode, forElement, itemScope);\n}\n\n/**\n * for 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction ForNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.itemANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'for': 1\n        })\n    });\n\n    this.param = aNode.directives['for']; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        var me = this;\n        this.listData = evalExpr(this.param.value, this.scope, this.owner);\n        eachForData(\n            this,\n            function (item, i) {\n                var itemScope = new ForItemData(me, item, i);\n                var child = createReverseNode(me.itemANode, reverseWalker, me, itemScope);\n                me.children.push(child);\n            }\n        );\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\n\nForNode.prototype.nodeType = 3;\nForNode.prototype._create = nodeOwnCreateStump;\nForNode.prototype.dispose = nodeOwnSimpleDispose;\n\n/**\n * 对 for 节点数据进行遍历\n *\n * @inner\n * @param {ForNode} forNode for节点对象\n * @param {Function} fn 数据遍历函数\n */\nfunction eachForData(forNode, fn) {\n    var listData = forNode.listData;\n\n    if (listData instanceof Array) {\n        for (var i = 0; i < listData.length; i++) {\n            fn(listData[i], i);\n        }\n    }\n    else if (listData && typeof listData === 'object') {\n        for (var i in listData) {\n            if (listData.hasOwnProperty(i)) {\n                (listData[i] != null) && fn(listData[i], i);\n            }\n        }\n    }\n}\n\n/**\n * 将元素attach到页面的行为\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nForNode.prototype.attach = function (parentEl, beforeEl) {\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n    this.listData = evalExpr(this.param.value, this.scope, this.owner);\n\n    this._createChildren();\n};\n\n/**\n * 创建子元素\n */\nForNode.prototype._createChildren = function () {\n    var me = this;\n    var parentEl = this.el.parentNode;\n\n    eachForData(this, function (value, i) {\n        var child = createForDirectiveChild(me, value, i);\n        me.children.push(child);\n        child.attach(parentEl, me.el);\n    });\n};\n\n/* eslint-disable fecs-max-statements */\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nForNode.prototype._update = function (changes) {\n    var listData = evalExpr(this.param.value, this.scope, this.owner);\n    var oldIsArr = this.listData instanceof Array;\n    var newIsArr = listData instanceof Array;\n\n    if (this.children.length) {\n        if (!listData || newIsArr && listData.length === 0) {\n            this._disposeChildren();\n            this.listData = listData;\n            return;\n        }\n\n        // 就是这么暴力\n        // 不推荐使用for遍历object，用的话自己负责\n        if (oldIsArr !== newIsArr || !newIsArr) {\n            this.listData = listData;\n            var me = this;\n            this._disposeChildren(null, function () {\n                me._createChildren();\n            });\n            return;\n        }\n\n        this._updateArray(changes, listData);\n        this.listData = listData;\n    }\n    else {\n        this.listData = listData;\n        this._createChildren();\n    }\n};\n\n/**\n * 销毁释放子元素\n *\n * @param {Array?} children 要销毁的子元素，默认为自身的children\n * @param {Function} callback 释放完成的回调函数\n */\nForNode.prototype._disposeChildren = function (children, callback) {\n    var parentEl = this.el.parentNode;\n    var parentFirstChild = parentEl.firstChild;\n    var parentLastChild = parentEl.lastChild;\n\n    var len = this.children.length;\n\n    var violentClear = !this.aNode.directives.transition\n        && !children\n        // 是否 parent 的唯一 child\n        && (len\n                && parentFirstChild === this.children[0].el\n                && (parentLastChild === this.el\n                    || parentLastChild === this.children[len - 1].el)\n            || len === 0\n                && parentFirstChild === this.el\n                && parentLastChild === this.el\n        );\n\n    if (!children) {\n        children = this.children;\n        this.children = [];\n    }\n\n\n    var me = this;\n    var disposedChildCount = 0;\n    len = children.length;\n    if (!len) {\n        childDisposed();\n    }\n    else {\n        for (var i = 0; i < len; i++) {\n            var disposeChild = children[i];\n            if (disposeChild) {\n                disposeChild._ondisposed = childDisposed;\n                disposeChild.dispose(violentClear, violentClear);\n            }\n            else {\n                childDisposed();\n            }\n        }\n    }\n\n    function childDisposed() {\n        disposedChildCount++;\n        if (disposedChildCount >= len) {\n            if (violentClear) {\n                // cloneNode + replaceChild is faster\n                // parentEl.innerHTML = '';\n                var replaceNode = parentEl.cloneNode(false);\n                parentEl.parentNode.replaceChild(replaceNode, parentEl);\n                me.el = document.createComment(me.id);\n                replaceNode.appendChild(me.el);\n            }\n\n            callback && callback();\n        }\n    }\n};\n\n/**\n * 数组类型的视图更新\n *\n * @param {Array} changes 数据变化信息\n * @param {Array} newList 新数组数据\n */\nForNode.prototype._updateArray = function (changes, newList) {\n    var oldChildrenLen = this.children.length;\n    var childrenChanges = new Array(oldChildrenLen);\n\n    function pushToChildrenChanges(change) {\n        for (var i = 0, l = childrenChanges.length; i < l; i++) {\n            (childrenChanges[i] = childrenChanges[i] || []).push(change);\n        }\n    }\n\n    var disposeChildren = [];\n\n    // 控制列表是否整体更新的变量\n    var isChildrenRebuild;\n\n    var newLen = newList.length;\n\n    /* eslint-disable no-redeclare */\n    for (var cIndex = 0; cIndex < changes.length; cIndex++) {\n        var change = changes[cIndex];\n        var relation = changeExprCompare(change.expr, this.param.value, this.scope);\n\n        if (!relation) {\n            // 无关时，直接传递给子元素更新，列表本身不需要动\n            pushToChildrenChanges(change);\n        }\n        else if (relation > 2) {\n            // 变更表达式是list绑定表达式的子项\n            // 只需要对相应的子项进行更新\n            var changePaths = change.expr.paths;\n            var forLen = this.param.value.paths.length;\n            var changeIndex = +evalExpr(changePaths[forLen], this.scope, this.owner);\n\n            if (isNaN(changeIndex)) {\n                pushToChildrenChanges(change);\n            }\n            else {\n                (childrenChanges[changeIndex] = childrenChanges[changeIndex] || [])\n                    .push(change);\n\n                change = {\n                    type: change.type,\n                    expr: createAccessor(\n                        this.param.item.paths.concat(changePaths.slice(forLen + 1))\n                    ),\n                    value: change.value,\n                    index: change.index,\n                    deleteCount: change.deleteCount,\n                    insertions: change.insertions,\n                    option: change.option\n                };\n\n                childrenChanges[changeIndex].push(change);\n\n                if (change.type === 1) {\n                    if (this.children[changeIndex]) {\n                        this.children[changeIndex].scope._set(\n                            change.expr,\n                            change.value,\n                            { silent: 1 }\n                        );\n                    }\n                    else {\n                        // 设置数组项的索引可能超出数组长度，此时需要新增\n                        // 比如当前数组只有2项，但是set list[4]\n                        this.children[changeIndex] = 0;\n                    }\n                }\n                else if (this.children[changeIndex]) {\n                    this.children[changeIndex].scope._splice(\n                        change.expr,\n                        [].concat(change.index, change.deleteCount, change.insertions),\n                        { silent: 1 }\n                    );\n                }\n            }\n        }\n        else if (change.type !== 2) {\n            // 变更表达式是list绑定表达式本身或母项的重新设值\n            // 此时需要更新整个列表\n\n            var getItemKey = this.aNode.hotspot.getForKey;\n            if (getItemKey && newLen && oldChildrenLen) {\n                // 如果设置了trackBy，用lcs更新。开始 ====\n                var lcsFlags = [];\n                var newListKeys = [];\n                var oldListKeys = [];\n\n                each(newList, function (item) {\n                    newListKeys.push(getItemKey(item));\n                });\n\n                each(this.listData, function (item) {\n                    oldListKeys.push(getItemKey(item));\n                });\n\n\n                var newIndex;\n                var oldIndex;\n                for (oldIndex = 0; oldIndex <= oldChildrenLen; oldIndex++) {\n                    lcsFlags.push([]);\n\n                    for (newIndex = 0; newIndex <= newLen; newIndex++) {\n                        var lcsFlag = 0;\n                        if (newIndex && oldIndex) {\n                            lcsFlag = newListKeys[newIndex - 1] === oldListKeys[oldIndex - 1]\n                                ? lcsFlags[oldIndex - 1][newIndex - 1] + 1\n                                : Math.max(lcsFlags[oldIndex - 1][newIndex], lcsFlags[oldIndex][newIndex - 1]);\n                        }\n\n                        lcsFlags[oldIndex].push(lcsFlag);\n                    }\n                }\n\n                newIndex--;\n                oldIndex--;\n                while (1) {\n                    if (oldIndex && newIndex && oldListKeys[oldIndex - 1] === newListKeys[newIndex - 1]) {\n                        newIndex--;\n                        oldIndex--;\n\n                        // 如果数据本身引用发生变化，设置变更\n                        if (this.listData[oldIndex] !== newList[newIndex]) {\n                            (childrenChanges[oldIndex] = childrenChanges[oldIndex] || []).push({\n                                type: 1,\n                                option: change.option,\n                                expr: createAccessor(this.param.item.paths.slice(0)),\n                                value: newList[newIndex]\n                            });\n                        }\n\n                        // 对list更上级数据的直接设置\n                        if (relation < 2) {\n                            (childrenChanges[oldIndex] = childrenChanges[oldIndex] || []).push(change);\n                        }\n                    }\n                    else if (newIndex\n                        && (!oldIndex || lcsFlags[oldIndex][newIndex - 1] >= lcsFlags[oldIndex - 1][newIndex])\n                    ) {\n                        newIndex--;\n                        childrenChanges.splice(oldIndex, 0, 0);\n                        this.children.splice(oldIndex, 0, 0);\n                    }\n                    else if (oldIndex\n                        && (!newIndex || lcsFlags[oldIndex][newIndex - 1] < lcsFlags[oldIndex - 1][newIndex])\n                    ) {\n                        oldIndex--;\n                        disposeChildren.push(this.children[oldIndex]);\n                        childrenChanges.splice(oldIndex, 1);\n                        this.children.splice(oldIndex, 1);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                // 如果设置了trackBy，用lcs更新。结束 ====\n            }\n            else {\n                // 老的比新的多的部分，标记需要dispose\n                if (oldChildrenLen > newLen) {\n                    disposeChildren = disposeChildren.concat(this.children.slice(newLen));\n                    childrenChanges = childrenChanges.slice(0, newLen);\n                    this.children = this.children.slice(0, newLen);\n                }\n\n                // 剩下的部分整项变更\n                for (var i = 0; i < newLen; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: 1,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: newList[i]\n                    });\n\n                    // 对list更上级数据的直接设置\n                    if (relation < 2) {\n                        childrenChanges[i].push(change);\n                    }\n\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            newList[i],\n                            {silent: 1}\n                        );\n                    }\n                    else {\n                        this.children[i] = 0;\n                    }\n                }\n            }\n\n            isChildrenRebuild = 1;\n        }\n        else if (relation === 2 && change.type === 2 && !isChildrenRebuild) {\n            // 变更表达式是list绑定表达式本身数组的splice操作\n            // 此时需要删除部分项，创建部分项\n            var changeStart = change.index;\n            var deleteCount = change.deleteCount;\n            var insertionsLen = change.insertions.length;\n            var newCount = insertionsLen - deleteCount;\n\n            if (newCount) {\n                var indexChange = {\n                    type: 1,\n                    option: change.option,\n                    expr: this.param.index\n                };\n\n                for (var i = changeStart + deleteCount; i < this.children.length; i++) {\n                    (childrenChanges[i] = childrenChanges[i] || []).push(indexChange);\n                    this.children[i] && this.children[i].scope._set(\n                        indexChange.expr,\n                        i - deleteCount + insertionsLen,\n                        {silent: 1}\n                    );\n                }\n            }\n\n            var deleteLen = deleteCount;\n            while (deleteLen--) {\n                if (deleteLen < insertionsLen) {\n                    var i = changeStart + deleteLen;\n                    // update\n                    (childrenChanges[i] = childrenChanges[i] || []).push({\n                        type: 1,\n                        option: change.option,\n                        expr: createAccessor(this.param.item.paths.slice(0)),\n                        value: change.insertions[deleteLen]\n                    });\n                    if (this.children[i]) {\n                        this.children[i].scope._set(\n                            this.param.item,\n                            change.insertions[deleteLen],\n                            {silent: 1}\n                        );\n                    }\n                }\n            }\n\n            if (newCount < 0) {\n                disposeChildren = disposeChildren.concat(this.children.splice(changeStart + insertionsLen, -newCount));\n                childrenChanges.splice(changeStart + insertionsLen, -newCount);\n            }\n            else if (newCount > 0) {\n                var spliceArgs = [changeStart + deleteCount, 0].concat(new Array(newCount));\n                this.children.splice.apply(this.children, spliceArgs);\n                childrenChanges.splice.apply(childrenChanges, spliceArgs);\n            }\n        }\n    }\n\n    var newChildrenLen = this.children.length;\n\n    // 标记 length 是否发生变化\n    if (newChildrenLen !== oldChildrenLen && this.param.value.paths) {\n        var lengthChange = {\n            type: 1,\n            option: {},\n            expr: createAccessor(\n                this.param.value.paths.concat({\n                    type: 1,\n                    value: 'length'\n                })\n            )\n        };\n\n        if (changesIsInDataRef([lengthChange], this.aNode.hotspot.data)) {\n            pushToChildrenChanges(lengthChange);\n        }\n    }\n\n    // 执行视图更新，先删再刷新\n    this._doCreateAndUpdate = doCreateAndUpdate;\n\n    var me = this;\n    if (disposeChildren.length === 0) {\n        doCreateAndUpdate();\n    }\n    else {\n        this._disposeChildren(disposeChildren, function () {\n            if (doCreateAndUpdate === me._doCreateAndUpdate) {\n                doCreateAndUpdate();\n            }\n        });\n    }\n\n    function doCreateAndUpdate() {\n        me._doCreateAndUpdate = null;\n\n        var beforeEl = me.el;\n        var parentEl = beforeEl.parentNode;\n\n        // 对相应的项进行更新\n        // 如果不attached则直接创建，如果存在则调用更新函数\n        var j = -1;\n        for (var i = 0; i < newChildrenLen; i++) {\n            var child = me.children[i];\n\n            if (child) {\n                childrenChanges[i] && child._update(childrenChanges[i]);\n            }\n            else {\n                if (j < i) {\n                    j = i + 1;\n                    beforeEl = null;\n                    while (j < newChildrenLen) {\n                        var nextChild = me.children[j];\n                        if (nextChild) {\n                            beforeEl = nextChild.sel || nextChild.el;\n                            break;\n                        }\n                        j++;\n                    }\n                }\n\n                me.children[i] = createForDirectiveChild(me, newList[i], i);\n                me.children[i].attach(parentEl, beforeEl || me.el);\n            }\n        }\n    }\n};\n\n\n// exports = module.exports = ForNode;\n\n\n/**\n * @file 清洗条件 aNode\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n\n\n/**\n * 清洗条件 aNode，返回纯净无条件指令的 aNode\n *\n * @param {ANode} aNode 条件节点对象\n * @return {ANode}\n */\nfunction rinseCondANode(aNode) {\n    var clearANode = createANode({\n        children: aNode.children,\n        props: aNode.props,\n        events: aNode.events,\n        tagName: aNode.tagName,\n        vars: aNode.vars,\n        hotspot: aNode.hotspot,\n        directives: cloneDirectives(aNode.directives, {\n            'if': 1,\n            'else': 1,\n            'elif': 1\n        })\n    });\n\n    return clearANode;\n}\n\n// exports = module.exports = rinseCondANode;\n\n\n/**\n * @file if 指令节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var evalExpr = require('../runtime/eval-expr');\n// var NodeType = require('./node-type');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var createNode = require('./create-node');\n// var createReverseNode = require('./create-reverse-node');\n// var nodeOwnCreateStump = require('./node-own-create-stump');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnSimpleDispose = require('./node-own-simple-dispose');\n\n/**\n * if 指令节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction IfNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.children = [];\n\n    this.cond = this.aNode.directives['if'].value; // eslint-disable-line dot-notation\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        if (evalExpr(this.cond, this.scope, this.owner)) {\n            this.elseIndex = -1;\n            this.children[0] = createReverseNode(\n                rinseCondANode(aNode),\n                reverseWalker,\n                this\n            );\n        }\n        else {\n            var me = this;\n            each(aNode.elses, function (elseANode, index) {\n                var elif = elseANode.directives.elif;\n\n                if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                    me.elseIndex = index;\n                    me.children[0] = createReverseNode(\n                        rinseCondANode(elseANode),\n                        reverseWalker,\n                        me\n                    );\n                    return false;\n                }\n            });\n        }\n\n        this._create();\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n    }\n    // #[end]\n}\n\nIfNode.prototype.nodeType = 2;\n\nIfNode.prototype._create = nodeOwnCreateStump;\nIfNode.prototype.dispose = nodeOwnSimpleDispose;\n\nIfNode.prototype.attach = function (parentEl, beforeEl) {\n    var me = this;\n    var elseIndex;\n    var child;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        child = createNode(rinseCondANode(this.aNode), this);\n        elseIndex = -1;\n    }\n    else {\n        each(this.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (!elif || elif && evalExpr(elif.value, me.scope, me.owner)) {\n                child = createNode(rinseCondANode(elseANode), me);\n                elseIndex = index;\n                return false;\n            }\n        });\n    }\n\n    if (child) {\n        this.children[0] = child;\n        child.attach(parentEl, beforeEl);\n        this.elseIndex = elseIndex;\n    }\n\n\n    this._create();\n    insertBefore(this.el, parentEl, beforeEl);\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nIfNode.prototype._update = function (changes) {\n    var me = this;\n    var childANode = this.aNode;\n    var elseIndex;\n\n    if (evalExpr(this.cond, this.scope, this.owner)) {\n        elseIndex = -1;\n    }\n    else {\n        each(this.aNode.elses, function (elseANode, index) {\n            var elif = elseANode.directives.elif;\n\n            if (elif && evalExpr(elif.value, me.scope, me.owner) || !elif) {\n                elseIndex = index;\n                childANode = elseANode;\n                return false;\n            }\n        });\n    }\n\n    if (elseIndex === this.elseIndex) {\n        elementUpdateChildren(this, changes);\n    }\n    else {\n        var child = this.children[0];\n        this.children = [];\n        if (child) {\n            child._ondisposed = newChild;\n            child.dispose();\n        }\n        else {\n            newChild();\n        }\n\n        this.elseIndex = elseIndex;\n    }\n\n    function newChild() {\n        if (typeof elseIndex !== 'undefined') {\n            (me.children[0] = createNode(rinseCondANode(childANode), me))\n                .attach(me.el.parentNode, me.el);\n        }\n    }\n};\n\n// exports = module.exports = IfNode;\n\n\n/**\n * @file template 节点类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var insertBefore = require('../browser/insert-before');\n// var removeEl = require('../browser/remove-el');\n// var NodeType = require('./node-type');\n// var LifeCycle = require('./life-cycle');\n// var nodeDispose = require('./node-dispose');\n// var createReverseNode = require('./create-reverse-node');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementOwnToPhase = require('./element-own-to-phase');\n// var elementUpdateChildren = require('./element-update-children');\n// var nodeOwnOnlyChildrenAttach = require('./node-own-only-children-attach');\n\n/**\n * template 节点类\n *\n * @param {Object} aNode 抽象节点\n * @param {Component} owner 所属组件环境\n * @param {Model=} scope 所属数据环境\n * @param {Node} parent 父亲节点\n * @param {DOMChildrenWalker?} reverseWalker 子元素遍历对象\n */\nfunction TemplateNode(aNode, owner, scope, parent, reverseWalker) {\n    this.aNode = aNode;\n    this.owner = owner;\n    this.scope = scope;\n    this.parent = parent;\n    this.parentComponent = parent.nodeType === 5\n        ? parent\n        : parent.parentComponent;\n\n    this.id = guid();\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n\n    // #[begin] reverse\n    if (reverseWalker) {\n        this.sel = document.createComment(this.id);\n        insertBefore(this.sel, reverseWalker.target, reverseWalker.current);\n\n        var me = this;\n        each(this.aNode.children, function (aNodeChild) {\n            me.children.push(createReverseNode(aNodeChild, reverseWalker, me));\n        });\n\n        this.el = document.createComment(this.id);\n        insertBefore(this.el, reverseWalker.target, reverseWalker.current);\n\n        this._toPhase('attached');\n    }\n    // #[end]\n}\n\n\n\nTemplateNode.prototype.nodeType = 7;\n\nTemplateNode.prototype.attach = nodeOwnOnlyChildrenAttach;\n\n/**\n * 销毁释放\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nTemplateNode.prototype.dispose = function (noDetach, noTransition) {\n    elementDisposeChildren(this, noDetach, noTransition);\n\n    if (!noDetach) {\n        removeEl(this.el);\n        removeEl(this.sel);\n    }\n    nodeDispose(this);\n};\n\n\nTemplateNode.prototype._toPhase = elementOwnToPhase;\n\n/**\n * 视图更新函数\n *\n * @param {Array} changes 数据变化信息\n */\nTemplateNode.prototype._update = function (changes) {\n    elementUpdateChildren(this, changes);\n};\n\n// exports = module.exports = TemplateNode;\n\n\n/**\n * @file 对元素的子节点进行反解\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var DOMChildrenWalker = require('./dom-children-walker');\n// var createReverseNode = require('./create-reverse-node');\n\n// #[begin] reverse\n\n/**\n * 对元素的子节点进行反解\n *\n * @param {Object} element 元素\n */\nfunction reverseElementChildren(element) {\n    var htmlDirective = element.aNode.directives.html;\n\n    if (!htmlDirective) {\n        var reverseWalker = new DOMChildrenWalker(element.el);\n\n        each(element.aNode.children, function (aNodeChild) {\n            element.children.push(createReverseNode(aNodeChild, reverseWalker, element));\n        });\n    }\n}\n// #[end]\n\n// exports = module.exports = reverseElementChildren;\n\n\n/**\n * @file 处理元素的属性操作\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var getPropHandler = require('./get-prop-handler');\n\n/**\n * 处理元素属性操作\n *\n * @param {Object} element 元素对象\n * @param {*} value 属性值\n * @param {Object} prop 属性信息对象\n */\nfunction handleProp(element, value, prop) {\n    var name = prop.name;\n    getPropHandler(element.tagName, name).prop(element.el, value, name, element, prop);\n}\n\n// exports = module.exports = handleProp;\n\n\n/**\n * @file 创建节点对应的 HTMLElement 主元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var evalExpr = require('../runtime/eval-expr');\n// var createEl = require('../browser/create-el');\n// var handleProp = require('./handle-prop');\n// var NodeType = require('./node-type');\n// var getPropHandler = require('./get-prop-handler');\n\nvar emptyPropWhenCreate = {\n    'class': 1,\n    'style': 1,\n    'id': 1\n};\n\n/**\n * 创建节点对应的 HTMLElement 主元素\n */\nfunction elementOwnCreate() {\n    if (!this.lifeCycle.created) {\n        var isComponent = this.nodeType === 5;\n        var sourceNode = this.aNode.hotspot.sourceNode;\n        var props = this.aNode.props;\n\n        if (sourceNode) {\n            this.el = sourceNode.cloneNode();\n            props = this.aNode.hotspot.dynamicProps;\n        }\n        else {\n            this.el = createEl(this.tagName);\n        }\n\n        for (var key in this._sbindData) {\n            if (this._sbindData.hasOwnProperty(key)) {\n                getPropHandler(this.tagName, key).prop(\n                    this.el,\n                    this._sbindData[key],\n                    key,\n                    this\n                );\n            }\n        }\n\n        for (var i = 0, l = props.length; i < l; i++) {\n            var prop = props[i];\n            var value = isComponent\n                ? evalExpr(prop.expr, this.data, this)\n                : evalExpr(prop.expr, this.scope, this.owner);\n\n            if (value || !emptyPropWhenCreate[prop.name]) {\n                handleProp(this, value, prop);\n            }\n        }\n\n        this._toPhase('created');\n    }\n}\n\n// exports = module.exports = elementOwnCreate;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var genElementChildren = require('./gen-element-children');\n// var evalExpr = require('../runtime/eval-expr');\n// var insertBefore = require('../browser/insert-before');\n\n/**\n * 将元素attach到页面\n *\n * @param {Object} element 元素节点\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementAttach(element, parentEl, beforeEl) {\n    element._create();\n    insertBefore(element.el, parentEl, beforeEl);\n\n    if (!element._contentReady) {\n        var htmlDirective = element.aNode.directives.html;\n\n        if (htmlDirective) {\n            element.el.innerHTML = evalExpr(htmlDirective.value, element.scope, element.owner);\n        }\n        else {\n            genElementChildren(element);\n        }\n\n        element._contentReady = 1;\n    }\n}\n\n\n// exports = module.exports = elementAttach;\n\n\n/**\n * @file 将元素attach到页面\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var elementAttach = require('./element-attach');\n\n/**\n * 将元素attach到页面\n *\n * @param {HTMLElement} parentEl 要添加到的父元素\n * @param {HTMLElement＝} beforeEl 要添加到哪个元素之前\n */\nfunction elementOwnAttach(parentEl, beforeEl) {\n    if (!this.lifeCycle.attached) {\n        elementAttach(this, parentEl, beforeEl);\n        this._attached();\n    }\n}\n\n// exports = module.exports = elementOwnAttach;\n\n\n/**\n * @file 获取 element 的 transition 控制对象\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var evalArgs = require('../runtime/eval-args');\n// var findMethod = require('../runtime/find-method');\n// var NodeType = require('./node-type');\n\n/**\n * 获取 element 的 transition 控制对象\n *\n * @param {Object} element 元素\n * @return {Object?}\n */\nfunction elementGetTransition(element) {\n    var directive = element.aNode.directives.transition;\n    var owner = element.owner;\n\n    if (element.nodeType === 5) {\n        var cmptGivenTransition = element.givenANode && element.givenANode.directives.transition;\n        if (cmptGivenTransition) {\n            directive = cmptGivenTransition;\n        }\n        else {\n            owner = element;\n        }\n    }\n\n    var transition;\n    if (directive && owner) {\n        transition = findMethod(owner, directive.value.name);\n\n        if (typeof transition === 'function') {\n            transition = transition.apply(\n                owner,\n                evalArgs(directive.value.args, element.scope, owner)\n            );\n        }\n    }\n\n    return transition || element.transition;\n}\n\n// exports = module.exports = elementGetTransition;\n\n\n/**\n * @file 元素节点执行leave行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementGetTransition = require('./element-get-transition');\n\n\n/**\n * 元素节点执行leave行为\n *\n * @param {Object} element 元素\n */\nfunction elementLeave(element) {\n    var lifeCycle = element.lifeCycle;\n    if (lifeCycle.leaving) {\n        return;\n    }\n\n    if (element.disposeNoTransition) {\n        element._doneLeave();\n    }\n    else {\n        var transition = elementGetTransition(element);\n\n        if (transition && transition.leave) {\n            element._toPhase('leaving');\n            transition.leave(element.el, function () {\n                element._doneLeave();\n            });\n        }\n        else {\n            element._doneLeave();\n        }\n    }\n}\n\n// exports = module.exports = elementLeave;\n\n\n/**\n * @file 将元素从页面上移除\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 将元素从页面上移除\n */\nfunction elementOwnDetach() {\n    elementLeave(this);\n}\n\n\n// exports = module.exports = elementOwnDetach;\n\n\n/**\n * @file 销毁释放元素\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var elementLeave = require('./element-leave');\n\n/**\n * 销毁释放元素\n *\n * @param {boolean=} noDetach 是否不要把节点从dom移除\n * @param {boolean=} noTransition 是否不显示过渡动画效果\n */\nfunction elementOwnDispose(noDetach, noTransition) {\n    this.leaveDispose = 1;\n    this.disposeNoDetach = noDetach;\n    this.disposeNoTransition = noTransition;\n\n    elementLeave(this);\n}\n\n// exports = module.exports = elementOwnDispose;\n\n\n/**\n * @file 为元素的 el 绑定事件\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var on = require('../browser/on');\n\n/**\n * 为元素的 el 绑定事件\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {boolean} capture 是否是捕获阶段触发\n */\nfunction elementOwnOnEl(name, listener, capture) {\n    if (typeof listener === 'function') {\n        capture = !!capture;\n        this._elFns.push([name, listener, capture]);\n        on(this.el, name, listener, capture);\n    }\n}\n\n// exports = module.exports = elementOwnOnEl;\n\n\n/**\n * @file  事件绑定不存在的 warning\n * @author varsha(wangshuonpu@gmail.com)\n */\n\n// var each = require('../util/each');\n\n// #[begin] error\n/**\n * 事件绑定不存在的 warning\n *\n * @param {Object} eventBind 事件绑定对象\n * @param {Component} owner 所属的组件对象\n */\nfunction warnEventListenMethod(eventBind, owner) {\n    var valid = true;\n    var method = owner;\n    each(eventBind.expr.name.paths, function (path) {\n        if (!path.value) {\n            return false;\n        }\n\n        method = method[path.value];\n        valid = !!method;\n        return valid;\n    });\n\n    if (!valid) {\n        var paths = [];\n        each(eventBind.expr.name.paths, function (path) {\n            paths.push(path.value);\n        });\n        var message = '[SAN WARNING] ' + eventBind.name + ' listen fail,\"' + paths.join('.') + '\" not exist';\n\n        /* eslint-disable no-console */\n        if (typeof console === 'object' && console.warn) {\n            console.warn(message);\n        }\n        else {\n            throw new Error(message);\n        }\n        /* eslint-enable no-console */\n    }\n}\n// #[end]\n\n// exports = module.exports = warnEventListenMethod;\n\n\n/**\n * @file 完成元素 attached 后的行为\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var bind = require('../util/bind');\n// var empty = require('../util/empty');\n// var isBrowser = require('../browser/is-browser');\n// var trigger = require('../browser/trigger');\n// var NodeType = require('./node-type');\n// var elementGetTransition = require('./element-get-transition');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var getPropHandler = require('./get-prop-handler');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n\n/**\n * 双绑输入框CompositionEnd事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionEnd() {\n    if (!this.composing) {\n        return;\n    }\n\n    this.composing = 0;\n\n    trigger(this, 'input');\n}\n\n/**\n * 双绑输入框CompositionStart事件监听函数\n *\n * @inner\n */\nfunction inputOnCompositionStart() {\n    this.composing = 1;\n}\n\nfunction xPropOutputer(xProp, data) {\n    getPropHandler(this.tagName, xProp.name).output(this, xProp, data);\n}\n\nfunction inputXPropOutputer(element, xProp, data) {\n    var outputer = bind(xPropOutputer, element, xProp, data);\n    return function (e) {\n        if (!this.composing) {\n            outputer(e);\n        }\n    };\n}\n\n/**\n * 完成元素 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nfunction elementOwnAttached() {\n    this._toPhase('created');\n\n    var isComponent = this.nodeType === 5;\n    var data = isComponent ? this.data : this.scope;\n\n    /* eslint-disable no-redeclare */\n\n    // 处理自身变化时双向绑定的逻辑\n    var xProps = this.aNode.hotspot.xProps;\n    for (var i = 0, l = xProps.length; i < l; i++) {\n        var xProp = xProps[i];\n\n        switch (xProp.name) {\n            case 'value':\n                switch (this.tagName) {\n                    case 'input':\n                    case 'textarea':\n                        if (isBrowser && window.CompositionEvent) {\n                            this._onEl('change', inputOnCompositionEnd);\n                            this._onEl('compositionstart', inputOnCompositionStart);\n                            this._onEl('compositionend', inputOnCompositionEnd);\n                        }\n\n                        this._onEl(\n                            ('oninput' in this.el) ? 'input' : 'propertychange',\n                            inputXPropOutputer(this, xProp, data)\n                        );\n\n                        break;\n\n                    case 'select':\n                        this._onEl('change', bind(xPropOutputer, this, xProp, data));\n                        break;\n                }\n                break;\n\n            case 'checked':\n                switch (this.tagName) {\n                    case 'input':\n                        switch (this.el.type) {\n                            case 'checkbox':\n                            case 'radio':\n                                this._onEl('click', bind(xPropOutputer, this, xProp, data));\n                        }\n                }\n                break;\n        }\n    }\n\n    // bind events\n    var events = isComponent\n        ? this.aNode.events.concat(this.nativeEvents)\n        : this.aNode.events;\n\n    for (var i = 0, l = events.length; i < l; i++) {\n        var eventBind = events[i];\n        var owner = isComponent ? this : this.owner;\n\n        // 判断是否是nativeEvent，下面的warn方法和事件绑定都需要\n        // 依此指定eventBind.expr.name位于owner还是owner.owner上\n        if (eventBind.modifier.native) {\n            owner = owner.owner;\n            data = this.scope || owner.data;\n        }\n\n        // #[begin] error\n        warnEventListenMethod(eventBind, owner);\n        // #[end]\n\n        this._onEl(\n            eventBind.name,\n            bind(\n                eventDeclarationListener,\n                owner,\n                eventBind,\n                0,\n                data\n            ),\n            eventBind.modifier.capture\n        );\n    }\n\n    this._toPhase('attached');\n\n\n    if (this._isInitFromEl) {\n        this._isInitFromEl = false;\n    }\n    else {\n        var transition = elementGetTransition(this);\n        if (transition && transition.enter) {\n            transition.enter(this.el, empty);\n        }\n    }\n}\n\n// exports = module.exports = elementOwnAttached;\n\n\n/**\n * @file 销毁元素节点\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var un = require('../browser/un');\n// var removeEl = require('../browser/remove-el');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var nodeDispose = require('./node-dispose');\n\n/**\n * 销毁元素节点\n *\n * @param {Object} element 要销毁的元素节点\n * @param {Object=} options 销毁行为的参数\n */\nfunction elementDispose(element) {\n    elementDisposeChildren(element, 1, 1);\n\n    // el 事件解绑\n    var len = element._elFns.length;\n    while (len--) {\n        var fn = element._elFns[len];\n        un(element.el, fn[0], fn[1], fn[2]);\n    }\n    element._elFns = null;\n\n\n    // 如果没有parent，说明是一个root component，一定要从dom树中remove\n    if (!element.disposeNoDetach || !element.parent) {\n        removeEl(element.el);\n    }\n\n    if (element._toPhase) {\n        element._toPhase('detached');\n    }\n\n    nodeDispose(element);\n}\n\n\n// exports = module.exports = elementDispose;\n\n\n/**\n * @file 初始化 element 节点的 tagName 处理\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ieOldThan9 = require('../browser/ie-old-than-9');\n\n/**\n * 初始化 element 节点的 tagName 处理\n *\n * @param {Object} node 节点对象\n */\nfunction elementInitTagName(node) {\n    node.tagName = node.tagName || node.aNode.tagName || 'div';\n\n    // #[begin] allua\n    // ie8- 不支持innerHTML输出自定义标签\n    if (ieOldThan9 && node.tagName.indexOf('-') > 0) {\n        node.tagName = 'div';\n    }\n    // #[end]\n}\n\n\n// exports = module.exports = elementInitTagName;\n\n\n/**\n * @file 给 devtool 发通知消息\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var isBrowser = require('../browser/is-browser');\n\n// #[begin] devtool\nvar san4devtool;\n\n/**\n * 给 devtool 发通知消息\n *\n * @param {string} name 消息名称\n * @param {*} arg 消息参数\n */\nfunction emitDevtool(name, arg) {\n    if (isBrowser && san4devtool && san4devtool.debug && window.__san_devtool__) {\n        window.__san_devtool__.emit(name, arg);\n    }\n}\n\nemitDevtool.start = function (main) {\n    san4devtool = main;\n    emitDevtool('san', main);\n};\n// #[end]\n\n// exports = module.exports = emitDevtool;\n\n\n/**\n * @file 组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var bind = require('../util/bind');\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var extend = require('../util/extend');\n// var nextTick = require('../util/next-tick');\n// var emitDevtool = require('../util/emit-devtool');\n// var ExprType = require('../parser/expr-type');\n// var parseExpr = require('../parser/parse-expr');\n// var createAccessor = require('../parser/create-accessor');\n// var postProp = require('../parser/post-prop');\n// var removeEl = require('../browser/remove-el');\n// var Data = require('../runtime/data');\n// var evalExpr = require('../runtime/eval-expr');\n// var changeExprCompare = require('../runtime/change-expr-compare');\n// var DataChangeType = require('../runtime/data-change-type');\n// var compileComponent = require('./compile-component');\n// var componentPreheat = require('./component-preheat');\n// var LifeCycle = require('./life-cycle');\n// var getANodeProp = require('./get-a-node-prop');\n// var isDataChangeByElement = require('./is-data-change-by-element');\n// var eventDeclarationListener = require('./event-declaration-listener');\n// var reverseElementChildren = require('./reverse-element-children');\n// var camelComponentBinds = require('./camel-component-binds');\n// var NodeType = require('./node-type');\n// var nodeSBindInit = require('./node-s-bind-init');\n// var nodeSBindUpdate = require('./node-s-bind-update');\n// var elementInitTagName = require('./element-init-tag-name');\n// var elementOwnAttached = require('./element-own-attached');\n// var elementDispose = require('./element-dispose');\n// var elementUpdateChildren = require('./element-update-children');\n// var elementOwnOnEl = require('./element-own-on-el');\n// var elementOwnCreate = require('./element-own-create');\n// var elementOwnAttach = require('./element-own-attach');\n// var elementOwnDetach = require('./element-own-detach');\n// var elementOwnDispose = require('./element-own-dispose');\n// var warnEventListenMethod = require('./warn-event-listen-method');\n// var elementDisposeChildren = require('./element-dispose-children');\n// var elementAttach = require('./element-attach');\n// var handleProp = require('./handle-prop');\n// var createDataTypesChecker = require('../util/create-data-types-checker');\n\n\n\n\n/**\n * 组件类\n *\n * @class\n * @param {Object} options 初始化参数\n */\nfunction Component(options) { // eslint-disable-line\n    options = options || {};\n\n    this.lifeCycle = LifeCycle.start;\n    this.children = [];\n    this._elFns = [];\n    this.listeners = {};\n    this.slotChildren = [];\n\n    var clazz = this.constructor;\n\n    this.filters = this.filters || clazz.filters || {};\n    this.computed = this.computed || clazz.computed || {};\n    this.messages = this.messages || clazz.messages || {};\n\n    if (options.transition) {\n        this.transition = options.transition;\n    }\n\n    this.subTag = options.subTag;\n\n    // compile\n    compileComponent(clazz);\n    componentPreheat(clazz);\n\n    var me = this;\n    var protoANode = clazz.prototype.aNode;\n\n    this.givenANode = options.aNode;\n    this.givenNamedSlotBinds = [];\n    this.givenSlots = {\n        named: {}\n    };\n\n    this.owner = options.owner;\n    this.scope = options.scope;\n    this.el = options.el;\n\n    var parent = options.parent;\n    if (parent) {\n        this.parent = parent;\n        this.parentComponent = parent.nodeType === 5\n            ? parent\n            : parent && parent.parentComponent;\n    }\n\n    this.id = guid();\n\n    // #[begin] reverse\n    if (this.el) {\n        var firstCommentNode = this.el.firstChild;\n        if (firstCommentNode && firstCommentNode.nodeType === 3) {\n            firstCommentNode = firstCommentNode.nextSibling;\n        }\n\n        if (firstCommentNode && firstCommentNode.nodeType === 8) {\n            var stumpMatch = firstCommentNode.data.match(/^\\s*s-data:([\\s\\S]+)?$/);\n            if (stumpMatch) {\n                var stumpText = stumpMatch[1];\n\n                // fill component data\n                options.data = (new Function(\n                    'return ' + stumpText.replace(/^[\\s\\n]*/, '')\n                ))();\n\n                if (firstCommentNode.previousSibling) {\n                    removeEl(firstCommentNode.previousSibling);\n                }\n                removeEl(firstCommentNode);\n            }\n        }\n    }\n    // #[end]\n\n    // native事件数组\n    this.nativeEvents = [];\n\n    if (this.givenANode) {\n        // 组件运行时传入的结构，做slot解析\n        this._createGivenSlots();\n\n        each(this.givenANode.events, function (eventBind) {\n            // 保存当前实例的native事件，下面创建aNode时候做合并\n            if (eventBind.modifier.native) {\n                me.nativeEvents.push(eventBind);\n                return;\n            }\n\n            // #[begin] error\n            warnEventListenMethod(eventBind, options.owner);\n            // #[end]\n\n            me.on(\n                eventBind.name,\n                bind(eventDeclarationListener, options.owner, eventBind, 1, options.scope),\n                eventBind\n            );\n        });\n\n        this.tagName = protoANode.tagName || this.givenANode.tagName;\n        this.binds = camelComponentBinds(this.givenANode.props);\n\n        // init s-bind data\n        nodeSBindInit(this, this.givenANode.directives.bind);\n    }\n\n    this._toPhase('compiled');\n\n    // init data\n    this.data = new Data(\n        extend(\n            typeof this.initData === 'function' && this.initData() || {},\n            options.data || this._sbindData\n        )\n    );\n\n    elementInitTagName(this);\n\n    each(this.binds, function (bind) {\n        postProp(bind);\n\n        if (me.scope) {\n            var value = evalExpr(bind.expr, me.scope, me.owner);\n            if (typeof value !== 'undefined') {\n                // See: https://github.com/ecomfe/san/issues/191\n                me.data.set(bind.name, value);\n            }\n        }\n    });\n\n    // #[begin] error\n    // 在初始化 + 数据绑定后，开始数据校验\n    // NOTE: 只在开发版本中进行属性校验\n    var dataTypes = this.dataTypes || clazz.dataTypes;\n    if (dataTypes) {\n        var dataTypeChecker = createDataTypesChecker(\n            dataTypes,\n            this.subTag || this.name || clazz.name\n        );\n        this.data.setTypeChecker(dataTypeChecker);\n        this.data.checkDataTypes();\n    }\n    // #[end]\n\n    this.computedDeps = {};\n    for (var expr in this.computed) {\n        if (this.computed.hasOwnProperty(expr) && !this.computedDeps[expr]) {\n            this._calcComputed(expr);\n        }\n    }\n\n    if (!this.dataChanger) {\n        this.dataChanger = bind(this._dataChanger, this);\n        this.data.listen(this.dataChanger);\n    }\n    this._toPhase('inited');\n\n    // #[begin] reverse\n    if (this.el) {\n        reverseElementChildren(this);\n        this._attached();\n    }\n\n    var walker = options.reverseWalker;\n    if (walker) {\n        var currentNode = walker.current;\n        if (currentNode && currentNode.nodeType === 1) {\n            this.el = currentNode;\n            walker.goNext();\n        }\n\n        reverseElementChildren(this);\n\n        this._attached();\n    }\n    // #[end]\n}\n\n\n/**\n * 初始化创建组件外部传入的插槽对象\n *\n * @protected\n */\nComponent.prototype._createGivenSlots = function () {\n    var me = this;\n    this.givenSlots.named = {};\n\n    // 组件运行时传入的结构，做slot解析\n    this.givenANode && this.scope && each(this.givenANode.children, function (child) {\n        var target;\n\n        var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n        if (slotBind) {\n            !me.givenSlotInited && me.givenNamedSlotBinds.push(slotBind);\n\n            var slotName = evalExpr(slotBind.expr, me.scope, me.owner);\n            target = me.givenSlots.named[slotName];\n            if (!target) {\n                target = me.givenSlots.named[slotName] = [];\n            }\n        }\n        else if (!me.givenSlotInited) {\n            target = me.givenSlots.noname;\n            if (!target) {\n                target = me.givenSlots.noname = [];\n            }\n        }\n\n        target && target.push(child);\n    });\n\n    this.givenSlotInited = true;\n};\n\n/**\n * 类型标识\n *\n * @type {string}\n */\nComponent.prototype.nodeType = 5;\n\n/**\n * 在下一个更新周期运行函数\n *\n * @param {Function} fn 要运行的函数\n */\nComponent.prototype.nextTick = nextTick;\n\n/* eslint-disable operator-linebreak */\n/**\n * 使节点到达相应的生命周期\n *\n * @protected\n * @param {string} name 生命周期名称\n */\nComponent.prototype._callHook =\nComponent.prototype._toPhase = function (name) {\n    if (!this.lifeCycle[name]) {\n        this.lifeCycle = LifeCycle[name] || this.lifeCycle;\n        if (typeof this[name] === 'function') {\n            this[name]();\n        }\n        this['_after' + name] = 1;\n\n        // 通知devtool\n        // #[begin] devtool\n        emitDevtool('comp-' + name, this);\n        // #[end]\n    }\n};\n/* eslint-enable operator-linebreak */\n\n\n/**\n * 添加事件监听器\n *\n * @param {string} name 事件名\n * @param {Function} listener 监听器\n * @param {string?} declaration 声明式\n */\nComponent.prototype.on = function (name, listener, declaration) {\n    if (typeof listener === 'function') {\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        this.listeners[name].push({fn: listener, declaration: declaration});\n    }\n};\n\n/**\n * 移除事件监听器\n *\n * @param {string} name 事件名\n * @param {Function=} listener 监听器\n */\nComponent.prototype.un = function (name, listener) {\n    var nameListeners = this.listeners[name];\n    var len = nameListeners && nameListeners.length;\n\n    while (len--) {\n        if (!listener || listener === nameListeners[len].fn) {\n            nameListeners.splice(len, 1);\n        }\n    }\n};\n\n\n/**\n * 派发事件\n *\n * @param {string} name 事件名\n * @param {Object} event 事件对象\n */\nComponent.prototype.fire = function (name, event) {\n    var me = this;\n    each(this.listeners[name], function (listener) {\n        listener.fn.call(me, event);\n    });\n};\n\n/**\n * 计算 computed 属性的值\n *\n * @private\n * @param {string} computedExpr computed表达式串\n */\nComponent.prototype._calcComputed = function (computedExpr) {\n    var computedDeps = this.computedDeps[computedExpr];\n    if (!computedDeps) {\n        computedDeps = this.computedDeps[computedExpr] = {};\n    }\n\n    this.data.set(computedExpr, this.computed[computedExpr].call({\n        data: {\n            get: bind(function (expr) {\n                // #[begin] error\n                if (!expr) {\n                    throw new Error('[SAN ERROR] call get method in computed need argument');\n                }\n                // #[end]\n\n                if (!computedDeps[expr]) {\n                    computedDeps[expr] = 1;\n\n                    if (this.computed[expr]) {\n                        this._calcComputed(expr);\n                    }\n\n                    this.watch(expr, function () {\n                        this._calcComputed(computedExpr);\n                    });\n                }\n\n                return this.data.get(expr);\n            }, this)\n        }\n    }));\n};\n\n/**\n * 派发消息\n * 组件可以派发消息，消息将沿着组件树向上传递，直到遇上第一个处理消息的组件\n *\n * @param {string} name 消息名称\n * @param {*?} value 消息值\n */\nComponent.prototype.dispatch = function (name, value) {\n    var parentComponent = this.parentComponent;\n\n    while (parentComponent) {\n        var receiver = parentComponent.messages[name] || parentComponent.messages['*'];\n        if (typeof receiver === 'function') {\n            receiver.call(\n                parentComponent,\n                {target: this, value: value, name: name}\n            );\n            break;\n        }\n\n        parentComponent = parentComponent.parentComponent;\n    }\n};\n\n/**\n * 获取组件内部的 slot\n *\n * @param {string=} name slot名称，空为default slot\n * @return {Array}\n */\nComponent.prototype.slot = function (name) {\n    var result = [];\n    var me = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            if (child.nodeType === 6 && child.owner === me) {\n                if (child.isNamed && child.name === name\n                    || !child.isNamed && !name\n                ) {\n                    result.push(child);\n                }\n            }\n            else {\n                childrenTraversal(child.children);\n            }\n        });\n    }\n\n    childrenTraversal(this.children);\n    return result;\n};\n\n/**\n * 获取带有 san-ref 指令的子组件引用\n *\n * @param {string} name 子组件的引用名\n * @return {Component}\n */\nComponent.prototype.ref = function (name) {\n    var refTarget;\n    var owner = this;\n\n    function childrenTraversal(children) {\n        each(children, function (child) {\n            elementTraversal(child);\n            return !refTarget;\n        });\n    }\n\n    function elementTraversal(element) {\n        var nodeType = element.nodeType;\n        if (nodeType === 1) {\n            return;\n        }\n\n        if (element.owner === owner) {\n            var ref;\n            switch (element.nodeType) {\n                case 4:\n                    ref = element.aNode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element.el;\n                    }\n                    break;\n\n                case 5:\n                    ref = element.givenANode.directives.ref;\n                    if (ref && evalExpr(ref.value, element.scope, owner) === name) {\n                        refTarget = element;\n                    }\n            }\n\n            !refTarget && childrenTraversal(element.slotChildren);\n        }\n\n        !refTarget && childrenTraversal(element.children);\n    }\n\n    childrenTraversal(this.children);\n\n    return refTarget;\n};\n\n\n/**\n * 视图更新函数\n *\n * @param {Array?} changes 数据变化信息\n */\nComponent.prototype._update = function (changes) {\n    if (this.lifeCycle.disposed) {\n        return;\n    }\n\n    var me = this;\n\n\n    var needReloadForSlot = false;\n    this._notifyNeedReload = function () {\n        needReloadForSlot = true;\n    };\n\n    if (changes) {\n        this.givenANode && nodeSBindUpdate(\n            this,\n            this.givenANode.directives.bind,\n            changes,\n            function (name, value) {\n                if (name in me.givenANode.hotspot.props) {\n                    return;\n                }\n\n                me.data.set(name, value, {\n                    target: {\n                        id: me.owner.id\n                    }\n                });\n            }\n        );\n\n\n        each(changes, function (change) {\n            var changeExpr = change.expr;\n\n            each(me.binds, function (bindItem) {\n                var relation;\n                var setExpr = bindItem.name;\n                var updateExpr = bindItem.expr;\n\n                if (!isDataChangeByElement(change, me, setExpr)\n                    && (relation = changeExprCompare(changeExpr, updateExpr, me.scope))\n                ) {\n                    if (relation > 2) {\n                        setExpr = createAccessor(\n                            [\n                                {\n                                    type: 1,\n                                    value: setExpr\n                                }\n                            ].concat(changeExpr.paths.slice(updateExpr.paths.length))\n                        );\n                        updateExpr = changeExpr;\n                    }\n\n                    if (relation >= 2 && change.type === 2) {\n                        me.data.splice(setExpr, [change.index, change.deleteCount].concat(change.insertions), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                    else {\n                        me.data.set(setExpr, evalExpr(updateExpr, me.scope, me.owner), {\n                            target: {\n                                id: me.owner.id\n                            }\n                        });\n                    }\n                }\n            });\n\n            each(me.givenNamedSlotBinds, function (bindItem) {\n                needReloadForSlot = needReloadForSlot || changeExprCompare(changeExpr, bindItem.expr, me.scope);\n                return !needReloadForSlot;\n            });\n        });\n\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n        else {\n            var slotChildrenLen = this.slotChildren.length;\n            while (slotChildrenLen--) {\n                var slotChild = this.slotChildren[slotChildrenLen];\n\n                if (slotChild.lifeCycle.disposed) {\n                    this.slotChildren.splice(slotChildrenLen, 1);\n                }\n                else if (slotChild.isInserted) {\n                    slotChild._update(changes, 1);\n                }\n            }\n        }\n    }\n\n    var dataChanges = this.dataChanges;\n    if (dataChanges) {\n        this.dataChanges = null;\n        each(this.aNode.hotspot.dynamicProps, function (prop) {\n            each(dataChanges, function (change) {\n                if (changeExprCompare(change.expr, prop.expr, me.data)\n                    || prop.hintExpr && changeExprCompare(change.expr, prop.hintExpr, me.data)\n                ) {\n                    handleProp(me, evalExpr(prop.expr, me.data, me), prop);\n                    return false;\n                }\n            });\n        });\n\n        elementUpdateChildren(this, dataChanges);\n        if (needReloadForSlot) {\n            this._createGivenSlots();\n            this._repaintChildren();\n        }\n\n        this._toPhase('updated');\n\n        if (this.owner) {\n            this._updateBindxOwner(dataChanges);\n            this.owner._update();\n        }\n    }\n\n    this._notifyNeedReload = null;\n};\n\nComponent.prototype._updateBindxOwner = function (dataChanges) {\n    var me = this;\n    each(dataChanges, function (change) {\n        each(me.binds, function (bindItem) {\n            var changeExpr = change.expr;\n            if (bindItem.x\n                && !isDataChangeByElement(change, me.owner)\n                && changeExprCompare(changeExpr, parseExpr(bindItem.name), me.data)\n            ) {\n                var updateScopeExpr = bindItem.expr;\n                if (changeExpr.paths.length > 1) {\n                    updateScopeExpr = createAccessor(\n                        bindItem.expr.paths.concat(changeExpr.paths.slice(1))\n                    );\n                }\n\n                me.scope.set(\n                    updateScopeExpr,\n                    evalExpr(changeExpr, me.data, me),\n                    {\n                        target: {\n                            id: me.id,\n                            prop: bindItem.name\n                        }\n                    }\n                );\n            }\n        });\n    });\n};\n\n/**\n * 重新绘制组件的内容\n * 当 dynamic slot name 发生变更或 slot 匹配发生变化时，重新绘制\n * 在组件级别重绘有点粗暴，但是能保证视图结果正确性\n */\nComponent.prototype._repaintChildren = function () {\n    elementDisposeChildren(this, 0, 1);\n    this.children = [];\n\n    this._contentReady = 0;\n    this.slotChildren = [];\n    elementAttach(this);\n};\n\n\n/**\n * 组件内部监听数据变化的函数\n *\n * @private\n * @param {Object} change 数据变化信息\n */\nComponent.prototype._dataChanger = function (change) {\n    if (this.lifeCycle.created && this._aftercreated) {\n        if (!this.dataChanges) {\n            nextTick(this._update, this);\n            this.dataChanges = [];\n        }\n\n        this.dataChanges.push(change);\n    }\n    else if (this.lifeCycle.inited && this.owner) {\n        this._updateBindxOwner([change]);\n    }\n};\n\n\n/**\n * 监听组件的数据变化\n *\n * @param {string} dataName 变化的数据项\n * @param {Function} listener 监听函数\n */\nComponent.prototype.watch = function (dataName, listener) {\n    var dataExpr = parseExpr(dataName);\n\n    this.data.listen(bind(function (change) {\n        if (changeExprCompare(change.expr, dataExpr, this.data)) {\n            listener.call(this, evalExpr(dataExpr, this.data, this), change);\n        }\n    }, this));\n};\n\n/**\n * 组件销毁的行为\n *\n * @param {Object} options 销毁行为的参数\n */\nComponent.prototype.dispose = elementOwnDispose;\n\nComponent.prototype._doneLeave = function () {\n    if (this.leaveDispose) {\n        if (!this.lifeCycle.disposed) {\n            // 这里不用挨个调用 dispose 了，因为 children 释放链会调用的\n            this.slotChildren = null;\n\n            this.data.unlisten();\n            this.dataChanger = null;\n            this.dataChanges = null;\n\n            elementDispose(\n                this,\n                this.disposeNoDetach,\n                this.disposeNoTransition\n            );\n            this.listeners = null;\n\n            this.givenANode = null;\n            this.givenSlots = null;\n            this.givenNamedSlotBinds = null;\n        }\n    }\n    else if (this.lifeCycle.attached) {\n        removeEl(this.el);\n        this._toPhase('detached');\n    }\n};\n\n/**\n * 完成组件 attached 后的行为\n *\n * @param {Object} element 元素节点\n */\nComponent.prototype._attached = elementOwnAttached;\n\nComponent.prototype.attach = elementOwnAttach;\nComponent.prototype.detach = elementOwnDetach;\nComponent.prototype._create = elementOwnCreate;\nComponent.prototype._onEl = elementOwnOnEl;\n\n\n// exports = module.exports = Component;\n\n\n/**\n * @file 创建组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var Component = require('./component');\n// var inherits = require('../util/inherits');\n\n/**\n * 创建组件类\n *\n * @param {Object} proto 组件类的方法表\n * @param {Function=} SuperComponent 父组件类\n * @return {Function}\n */\nfunction defineComponent(proto, SuperComponent) {\n    // 如果传入一个不是 san component 的 constructor，直接返回不是组件构造函数\n    // 这种场景导致的错误 san 不予考虑\n    if (typeof proto === 'function') {\n        return proto;\n    }\n\n    // #[begin] error\n    if (typeof proto !== 'object') {\n        throw new Error('[SAN FATAL] param must be a plain object.');\n    }\n    // #[end]\n\n    function ComponentClass(option) { // eslint-disable-line\n        Component.call(this, option);\n    }\n\n    ComponentClass.prototype = proto;\n    inherits(ComponentClass, SuperComponent || Component);\n\n    return ComponentClass;\n}\n\n// exports = module.exports = defineComponent;\n\n\n/**\n * @file 编译组件类\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var createANode = require('../parser/create-a-node');\n// var parseTemplate = require('../parser/parse-template');\n// var parseText = require('../parser/parse-text');\n// var defineComponent = require('./define-component');\n\n\n/**\n * 编译组件类。预解析template和components\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction compileComponent(ComponentClass) {\n    var proto = ComponentClass.prototype;\n\n    // pre define components class\n    if (!proto.hasOwnProperty('_cmptReady')) {\n        proto.components = ComponentClass.components || proto.components || {};\n        var components = proto.components;\n\n        for (var key in components) { // eslint-disable-line\n            var componentClass = components[key];\n\n            if (typeof componentClass === 'object') {\n                components[key] = defineComponent(componentClass);\n            }\n            else if (componentClass === 'self') {\n                components[key] = ComponentClass;\n            }\n        }\n\n        proto._cmptReady = 1;\n    }\n\n\n    // pre compile template\n    if (!proto.hasOwnProperty('aNode')) {\n        proto.aNode = createANode();\n\n        var tpl = ComponentClass.template || proto.template;\n        if (tpl) {\n            var aNode = parseTemplate(tpl, {\n                trimWhitespace: proto.trimWhitespace || ComponentClass.trimWhitespace,\n                delimiters: proto.delimiters || ComponentClass.delimiters\n            });\n            var firstChild = aNode.children[0];\n\n            // #[begin] error\n            if (aNode.children.length !== 1 || firstChild.textExpr) {\n                throw new Error('[SAN FATAL] template must have a root element.');\n            }\n            // #[end]\n\n            proto.aNode = firstChild;\n            if (firstChild.tagName === 'template') {\n                firstChild.tagName = null;\n            }\n\n            var componentPropExtra = {\n                'class': {name: 'class', expr: parseText('{{class | _class | _sep(\" \")}}')},\n                'style': {name: 'style', expr: parseText('{{style | _style | _sep(\";\")}}')},\n                'id': {name: 'id', expr: parseText('{{id}}')}\n            };\n\n            var len = firstChild.props.length;\n            while (len--) {\n                var prop = firstChild.props[len];\n                var extra = componentPropExtra[prop.name];\n\n                if (extra) {\n                    firstChild.props.splice(len, 1);\n                    componentPropExtra[prop.name] = prop;\n\n                    if (prop.name !== 'id') {\n                        prop.expr.segs.push(extra.expr.segs[0]);\n                        prop.expr.value = null;\n                    }\n                }\n            }\n\n            firstChild.props.push(\n                componentPropExtra['class'], // eslint-disable-line dot-notation\n                componentPropExtra.style,\n                componentPropExtra.id\n            );\n        }\n    }\n}\n\n// exports = module.exports = compileComponent;\n\n\n/**\n * @file 组件预热\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var ExprType = require('../parser/expr-type');\n// var each = require('../util/each');\n// var createEl = require('../browser/create-el');\n// var getPropHandler = require('./get-prop-handler');\n// var getANodeProp = require('./get-a-node-prop');\n// var isBrowser = require('../browser/is-browser');\n\n/**\n * 组件预热，分析组件aNode的数据引用等信息\n *\n * @param {Function} ComponentClass 组件类\n */\nfunction componentPreheat(ComponentClass) {\n    var stack = [];\n\n    function recordHotspotData(refs, notContentData) {\n        var len = stack.length;\n        each(stack, function (aNode, index) {\n            if (!notContentData || index !== len - 1) {\n                each(refs, function (ref) {\n                    aNode.hotspot.data[ref] = 1;\n                });\n            }\n        });\n    }\n\n\n    function analyseANodeHotspot(aNode) {\n        if (!aNode.hotspot) {\n            stack.push(aNode);\n\n\n            if (aNode.textExpr) {\n                aNode.hotspot = {data: {}};\n                recordHotspotData(analyseExprDataHotspot(aNode.textExpr));\n            }\n            else {\n                var sourceNode;\n                if (isBrowser && aNode.tagName\n                    && !/^(template|slot|select|input|option|button)$/i.test(aNode.tagName)\n                ) {\n                    sourceNode = createEl(aNode.tagName);\n                }\n\n                aNode.hotspot = {\n                    data: {},\n                    dynamicProps: [],\n                    xProps: [],\n                    props: {},\n                    sourceNode: sourceNode\n                };\n\n\n                // === analyse hotspot data: start\n                each(aNode.vars, function (varItem) {\n                    recordHotspotData(analyseExprDataHotspot(varItem.expr));\n                });\n\n                each(aNode.props, function (prop) {\n                    recordHotspotData(analyseExprDataHotspot(prop.expr));\n                });\n\n                for (var key in aNode.directives) {\n                    if (aNode.directives.hasOwnProperty(key)) {\n                        var directive = aNode.directives[key];\n                        recordHotspotData(\n                            analyseExprDataHotspot(directive.value),\n                            !/^(html|bind)$/.test(key)\n                        );\n\n                        // init trackBy getKey function\n                        if (key === 'for') {\n                            var trackBy = directive.trackBy;\n                            if (trackBy\n                                && trackBy.type === 4\n                                && trackBy.paths[0].value === directive.item.raw\n                            ) {\n                                aNode.hotspot.getForKey = new Function(\n                                    directive.item.raw,\n                                    'return ' + trackBy.raw\n                                );\n                            }\n                        }\n                    }\n                }\n\n                each(aNode.elses, function (child) {\n                    analyseANodeHotspot(child);\n                });\n\n                each(aNode.children, function (child) {\n                    analyseANodeHotspot(child);\n                });\n                // === analyse hotspot data: end\n\n\n                // === analyse hotspot props: start\n                each(aNode.props, function (prop, index) {\n                    aNode.hotspot.props[prop.name] = index;\n\n                    if (prop.name === 'id') {\n                        prop.id = true;\n                        aNode.hotspot.idProp = prop;\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                    else if (prop.expr.value != null) {\n                        if (sourceNode) {\n                            getPropHandler(aNode.tagName, prop.name)\n                                .prop(sourceNode, prop.expr.value, prop.name, aNode);\n                        }\n                    }\n                    else {\n                        if (prop.x) {\n                            aNode.hotspot.xProps.push(prop);\n                        }\n                        aNode.hotspot.dynamicProps.push(prop);\n                    }\n                });\n\n                // ie 下，如果 option 没有 value 属性，select.value = xx 操作不会选中 option\n                // 所以没有设置 value 时，默认把 option 的内容作为 value\n                if (aNode.tagName === 'option'\n                    && !getANodeProp(aNode, 'value')\n                    && aNode.children[0]\n                ) {\n                    var valueProp = {\n                        name: 'value',\n                        expr: aNode.children[0].textExpr\n                    };\n                    aNode.props.push(valueProp);\n                    aNode.hotspot.dynamicProps.push(valueProp);\n                    aNode.hotspot.props.value = aNode.props.length - 1;\n                }\n                // === analyse hotspot props: end\n            }\n\n            stack.pop();\n        }\n    }\n\n    analyseANodeHotspot(ComponentClass.prototype.aNode);\n}\n\n/**\n * 分析表达式的数据引用\n *\n * @param {Object} expr 要分析的表达式\n * @return {Array}\n */\nfunction analyseExprDataHotspot(expr) {\n    var refs = [];\n\n    function analyseExprs(exprs) {\n        each(exprs, function (expr) {\n            refs = refs.concat(analyseExprDataHotspot(expr));\n        });\n    }\n\n    switch (expr.type) {\n        case 4:\n            var paths = expr.paths;\n            refs.push(paths[0].value);\n\n            if (paths.length > 1) {\n                refs.push(paths[0].value + '.' + (paths[1].value || '*'));\n            }\n\n            analyseExprs(paths.slice(1));\n            break;\n\n        case 9:\n            return analyseExprDataHotspot(expr.expr);\n\n        case 7:\n        case 8:\n        case 10:\n            analyseExprs(expr.segs);\n            break;\n\n        case 5:\n            refs = analyseExprDataHotspot(expr.expr);\n\n            each(expr.filters, function (filter) {\n                analyseExprs(filter.name.paths);\n                analyseExprs(filter.args);\n            });\n\n            break;\n\n    }\n\n    return refs;\n}\n\n// exports = module.exports = componentPreheat;\n\n\n/**\n * @file 将 binds 的 name 从 kebabcase 转换成 camelcase\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var kebab2camel = require('../util/kebab2camel');\n// var each = require('../util/each');\n\n/**\n * 将 binds 的 name 从 kebabcase 转换成 camelcase\n *\n * @param {Array} binds binds集合\n * @return {Array}\n */\nfunction camelComponentBinds(binds) {\n    var result = [];\n    each(binds, function (bind) {\n        result.push({\n            name: kebab2camel(bind.name),\n            expr: bind.expr,\n            x: bind.x,\n            raw: bind.raw\n        });\n    });\n\n    return result;\n}\n\n// exports = module.exports = camelComponentBinds;\n\n\n/**\n * @file 编译源码的 helper 方法集合\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var ExprType = require('../parser/expr-type');\n\n// #[begin] ssr\n// \n// /**\n//  * 编译源码的 helper 方法集合对象\n//  */\n// var compileExprSource = {\n// \n//     /**\n//      * 字符串字面化\n//      *\n//      * @param {string} source 需要字面化的字符串\n//      * @return {string} 字符串字面化结果\n//      */\n//     stringLiteralize: function (source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//                 // .replace( /\\x08/g, '\\\\b' )\n//                 // .replace( /\\x0C/g, '\\\\f' )\n//             + '\"';\n//     },\n// \n//     /**\n//      * 生成数据访问表达式代码\n//      *\n//      * @param {Object?} accessorExpr accessor表达式对象\n//      * @return {string}\n//      */\n//     dataAccess: function (accessorExpr) {\n//         var code = 'componentCtx.data';\n//         if (accessorExpr) {\n//             each(accessorExpr.paths, function (path) {\n//                 if (path.type === 4) {\n//                     code += '[' + compileExprSource.dataAccess(path) + ']';\n//                     return;\n//                 }\n// \n//                 switch (typeof path.value) {\n//                     case 'string':\n//                         code += '.' + path.value;\n//                         break;\n// \n//                     case 'number':\n//                         code += '[' + path.value + ']';\n//                         break;\n//                 }\n//             });\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成调用表达式代码\n//      *\n//      * @param {Object?} callExpr 调用表达式对象\n//      * @return {string}\n//      */\n//     callExpr: function (callExpr) {\n//         var paths = callExpr.name.paths;\n//         var code = 'componentCtx.' + paths[0].value;\n// \n//         for (var i = 1; i < paths.length; i++) {\n//             var path = paths[i];\n// \n//             switch (path.type) {\n//                 case 1:\n//                     code += '.' + path.value;\n//                     break;\n// \n//                 case 2:\n//                     code += '[' + path.value + ']';\n//                     break;\n// \n//                 default:\n//                     code += '[' + compileExprSource.expr(path) + ']';\n//             }\n//         }\n// \n//         code += '(';\n//         each(callExpr.args, function (arg, index) {\n//             code += (index > 0 ? ', ' : '') + compileExprSource.expr(arg);\n//         });\n//         code += ')';\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成插值代码\n//      *\n//      * @param {Object} interpExpr 插值表达式对象\n//      * @return {string}\n//      */\n//     interp: function (interpExpr) {\n//         var code = compileExprSource.expr(interpExpr.expr);\n// \n// \n//         each(interpExpr.filters, function (filter) {\n//             code = 'componentCtx.callFilter(\"' + filter.name.paths[0].value + '\", [' + code;\n//             each(filter.args, function (arg) {\n//                 code += ', ' + compileExprSource.expr(arg);\n//             });\n//             code += '])';\n//         });\n// \n//         if (!interpExpr.original) {\n//             return 'escapeHTML(' + code + ')';\n//         }\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成文本片段代码\n//      *\n//      * @param {Object} textExpr 文本片段表达式对象\n//      * @return {string}\n//      */\n//     text: function (textExpr) {\n//         if (textExpr.segs.length === 0) {\n//             return '\"\"';\n//         }\n// \n//         var code = '';\n// \n//         each(textExpr.segs, function (seg) {\n//             var segCode = compileExprSource.expr(seg);\n//             code += code ? ' + ' + segCode : segCode;\n//         });\n// \n//         return code;\n//     },\n// \n//     /**\n//      * 生成数组字面量代码\n//      *\n//      * @param {Object} arrayExpr 数组字面量表达式对象\n//      * @return {string}\n//      */\n//     array: function (arrayExpr) {\n//         var code = [];\n// \n//         each(arrayExpr.items, function (item) {\n//             code.push((item.spread ? '...' : '') + compileExprSource.expr(item.expr));\n//         });\n// \n//         return '[\\n' + code.join(',\\n') + '\\n]';\n//     },\n// \n//     /**\n//      * 生成对象字面量代码\n//      *\n//      * @param {Object} objExpr 对象字面量表达式对象\n//      * @return {string}\n//      */\n//     object: function (objExpr) {\n//         var code = [];\n// \n//         each(objExpr.items, function (item) {\n//             if (item.spread) {\n//                 code.push('...' + compileExprSource.expr(item.expr));\n//             }\n//             else {\n//                 code.push(compileExprSource.expr(item.name) + ':' + compileExprSource.expr(item.expr));\n//             }\n//         });\n// \n//         return '{\\n' + code.join(',\\n') + '\\n}';\n//     },\n// \n//     /**\n//      * 二元表达式操作符映射表\n//      *\n//      * @type {Object}\n//      */\n//     binaryOp: {\n//         /* eslint-disable */\n//         43: '+',\n//         45: '-',\n//         42: '*',\n//         47: '/',\n//         60: '<',\n//         62: '>',\n//         76: '&&',\n//         94: '!=',\n//         121: '<=',\n//         122: '==',\n//         123: '>=',\n//         155: '!==',\n//         183: '===',\n//         248: '||'\n//         /* eslint-enable */\n//     },\n// \n//     /**\n//      * 生成表达式代码\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     expr: function (expr) {\n//         if (expr.parenthesized) {\n//             return '(' + compileExprSource._expr(expr) + ')';\n//         }\n// \n//         return compileExprSource._expr(expr);\n//     },\n// \n//     /**\n//      * 根据表达式类型进行生成代码函数的中转分发\n//      *\n//      * @param {Object} expr 表达式对象\n//      * @return {string}\n//      */\n//     _expr: function (expr) {\n//         switch (expr.type) {\n//             case 9:\n//                 switch (expr.operator) {\n//                     case 33:\n//                         return '!' + compileExprSource.expr(expr.expr);\n//                     case 45:\n//                         return '-' + compileExprSource.expr(expr.expr);\n//                 }\n// \n//             case 8:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + compileExprSource.binaryOp[expr.operator]\n//                     + compileExprSource.expr(expr.segs[1]);\n// \n//             case 10:\n//                 return compileExprSource.expr(expr.segs[0])\n//                     + '?' + compileExprSource.expr(expr.segs[1])\n//                     + ':' + compileExprSource.expr(expr.segs[2]);\n// \n//             case 1:\n//                 return compileExprSource.stringLiteralize(expr.literal || expr.value);\n// \n//             case 2:\n//                 return expr.value;\n// \n//             case 3:\n//                 return expr.value ? 'true' : 'false';\n// \n//             case 4:\n//                 return compileExprSource.dataAccess(expr);\n// \n//             case 5:\n//                 return compileExprSource.interp(expr);\n// \n//             case 7:\n//                 return compileExprSource.text(expr);\n// \n//             case 12:\n//                 return compileExprSource.array(expr);\n// \n//             case 11:\n//                 return compileExprSource.object(expr);\n// \n//             case 6:\n//                 return compileExprSource.callExpr(expr);\n//         }\n//     }\n// };\n// #[end]\n\n// exports = module.exports = compileExprSource;\n\n\n/**\n * @file 编译源码的中间buffer类\n * @author errorrik(errorrik@gmail.com)\n */\n\n// var each = require('../util/each');\n// var compileExprSource = require('./compile-expr-source');\n\n\n// #[begin] ssr\n// /**\n//  * 编译源码的中间buffer类\n//  *\n//  * @class\n//  */\n// function CompileSourceBuffer() {\n//     this.segs = [];\n// }\n// \n// /**\n//  * 添加原始代码，将原封不动输出\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.addRaw = function (code) {\n//     this.segs.push({\n//         type: 'RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的原始代码\n//  *\n//  * @param {string} code 原始代码\n//  */\n// CompileSourceBuffer.prototype.joinRaw = function (code) {\n//     this.segs.push({\n//         type: 'JOIN_RAW',\n//         code: code\n//     });\n// };\n// \n// /**\n//  * 添加renderer方法的起始源码\n//  */\n// CompileSourceBuffer.prototype.addRendererStart = function () {\n//     this.addRaw('function (data, parentCtx, givenSlots) {');\n//     this.addRaw('var html = \"\";');\n// };\n// \n// /**\n//  * 添加renderer方法的结束源码\n//  */\n// CompileSourceBuffer.prototype.addRendererEnd = function () {\n//     this.addRaw('return html;');\n//     this.addRaw('}');\n// };\n// \n// /**\n//  * 添加被拼接为html的静态字符串\n//  *\n//  * @param {string} str 被拼接的字符串\n//  */\n// CompileSourceBuffer.prototype.joinString = function (str) {\n//     this.segs.push({\n//         str: str,\n//         type: 'JOIN_STRING'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的数据访问\n//  *\n//  * @param {Object?} accessor 数据访问表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinDataStringify = function () {\n//     this.segs.push({\n//         type: 'JOIN_DATA_STRINGIFY'\n//     });\n// };\n// \n// /**\n//  * 添加被拼接为html的表达式\n//  *\n//  * @param {Object} expr 表达式对象\n//  */\n// CompileSourceBuffer.prototype.joinExpr = function (expr) {\n//     this.segs.push({\n//         expr: expr,\n//         type: 'JOIN_EXPR'\n//     });\n// };\n// \n// /**\n//  * 生成编译后代码\n//  *\n//  * @return {string}\n//  */\n// CompileSourceBuffer.prototype.toCode = function () {\n//     var code = [];\n//     var temp = '';\n// \n//     function genStrLiteral() {\n//         if (temp) {\n//             code.push('html += ' + compileExprSource.stringLiteralize(temp) + ';');\n//         }\n// \n//         temp = '';\n//     }\n// \n//     each(this.segs, function (seg) {\n//         if (seg.type === 'JOIN_STRING') {\n//             temp += seg.str;\n//             return;\n//         }\n// \n//         genStrLiteral();\n//         switch (seg.type) {\n//             case 'JOIN_DATA_STRINGIFY':\n//                 code.push('html += stringifier.any(' + compileExprSource.dataAccess() + ');');\n//                 break;\n// \n//             case 'JOIN_EXPR':\n//                 code.push('html += ' + compileExprSource.expr(seg.expr) + ';');\n//                 break;\n// \n//             case 'JOIN_RAW':\n//                 code.push('html += ' + seg.code + ';');\n//                 break;\n// \n//             case 'RAW':\n//                 code.push(seg.code);\n//                 break;\n// \n//         }\n//     });\n// \n//     genStrLiteral();\n// \n//     return code.join('\\n');\n// };\n// \n// #[end]\n\n// exports = module.exports = CompileSourceBuffer;\n\n\n/**\n * @file 将组件编译成 render 方法的 js 源码\n * @author errorrik(errorrik@gmail.com)\n */\n\n\n// var each = require('../util/each');\n// var guid = require('../util/guid');\n// var splitStr2Obj = require('../util/split-str-2-obj');\n// var parseExpr = require('../parser/parse-expr');\n// var createANode = require('../parser/create-a-node');\n// var cloneDirectives = require('../parser/clone-directives');\n// var autoCloseTags = require('../browser/auto-close-tags');\n// var CompileSourceBuffer = require('./compile-source-buffer');\n// var compileExprSource = require('./compile-expr-source');\n// var rinseCondANode = require('./rinse-cond-anode');\n// var getANodeProp = require('./get-a-node-prop');\n\n// #[begin] ssr\n// \n// /**\n//  * 生成序列化时起始桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @param {string?} content 桩内的内容\n//  * @return {string}\n//  */\n// function serializeStump(type, content) {\n//     return '<!--s-' + type + (content ? ':' + content : '') + '-->';\n// }\n// \n// /**\n//  * 生成序列化时结束桩的html\n//  *\n//  * @param {string} type 桩类型标识\n//  * @return {string}\n//  */\n// function serializeStumpEnd(type) {\n//     return '<!--/s-' + type + '-->';\n// }\n// \n// /**\n//  * element 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var elementSourceCompiler = {\n// \n//     /* eslint-disable max-params */\n//     /**\n//      * 编译元素标签头\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      * @param {Array} props 属性列表\n//      * @param {string=} extraProp 额外的属性串\n//      * @param {Object=} bindDirective bind指令对象\n//      */\n//     tagStart: function (sourceBuffer, tagName, props, extraProp, bindDirective) {\n//         sourceBuffer.joinString('<' + tagName);\n//         sourceBuffer.joinString(extraProp || '');\n// \n//         // index list\n//         var propsIndex = {};\n//         each(props, function (prop) {\n//             propsIndex[prop.name] = prop;\n//         });\n// \n//         each(props, function (prop) {\n//             if (prop.name === 'slot') {\n//                 return;\n//             }\n// \n//             if (prop.name === 'value') {\n//                 switch (tagName) {\n//                     case 'textarea':\n//                         return;\n// \n//                     case 'select':\n//                         sourceBuffer.addRaw('$selectValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ' || \"\";'\n//                         );\n//                         return;\n// \n//                     case 'option':\n//                         sourceBuffer.addRaw('$optionValue = '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ';'\n//                         );\n//                         // value\n//                         sourceBuffer.addRaw('if ($optionValue != null) {');\n//                         sourceBuffer.joinRaw('\" value=\\\\\"\" + $optionValue + \"\\\\\"\"');\n//                         sourceBuffer.addRaw('}');\n// \n//                         // selected\n//                         sourceBuffer.addRaw('if ($optionValue === $selectValue) {');\n//                         sourceBuffer.joinString(' selected');\n//                         sourceBuffer.addRaw('}');\n//                         return;\n//                 }\n//             }\n// \n//             switch (prop.name) {\n//                 case 'readonly':\n//                 case 'disabled':\n//                 case 'multiple':\n//                     if (prop.raw === '') {\n//                         sourceBuffer.joinString(' ' + prop.name);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('boolAttrFilter(\"' + prop.name + '\", '\n//                             + compileExprSource.expr(prop.expr)\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n// \n//                 case 'checked':\n//                     if (tagName === 'input') {\n//                         var valueProp = propsIndex.value;\n//                         var valueCode = compileExprSource.expr(valueProp.expr);\n// \n//                         if (valueProp) {\n//                             switch (propsIndex.type.raw) {\n//                                 case 'checkbox':\n//                                     sourceBuffer.addRaw('if (contains('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ', '\n//                                         + valueCode\n//                                         + ')) {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n// \n//                                 case 'radio':\n//                                     sourceBuffer.addRaw('if ('\n//                                         + compileExprSource.expr(prop.expr)\n//                                         + ' === '\n//                                         + valueCode\n//                                         + ') {'\n//                                     );\n//                                     sourceBuffer.joinString(' checked');\n//                                     sourceBuffer.addRaw('}');\n//                                     break;\n//                             }\n//                         }\n//                     }\n//                     break;\n// \n//                 default:\n//                     if (prop.attr) {\n//                         sourceBuffer.joinString(' ' + prop.attr);\n//                     }\n//                     else {\n//                         sourceBuffer.joinRaw('attrFilter(\"' + prop.name + '\", '\n//                             + (prop.x ? 'escapeHTML(' : '')\n//                             + compileExprSource.expr(prop.expr)\n//                             + (prop.x ? ')' : '')\n//                             + ')'\n//                         );\n//                     }\n//                     break;\n//             }\n//         });\n// \n//         if (bindDirective) {\n//             sourceBuffer.addRaw(\n//                 '(function ($bindObj) {for (var $key in $bindObj) {'\n//                 + 'var $value = $bindObj[$key];'\n//             );\n// \n//             if (tagName === 'textarea') {\n//                 sourceBuffer.addRaw(\n//                     'if ($key === \"value\") {'\n//                     + 'continue;'\n//                     + '}'\n//                 );\n//             }\n// \n//             sourceBuffer.addRaw('switch ($key) {\\n'\n//                 + 'case \"readonly\":\\n'\n//                 + 'case \"disabled\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'case \"multiple\":\\n'\n//                 + 'html += boolAttrFilter($key, escapeHTML($value));\\n'\n//                 + 'break;\\n'\n//                 + 'default:\\n'\n//                 + 'html += attrFilter($key, escapeHTML($value));'\n//                 + '}'\n//             );\n// \n//             sourceBuffer.addRaw(\n//                 '}})('\n//                 + compileExprSource.expr(bindDirective.value)\n//                 + ');'\n//             );\n//         }\n// \n//         sourceBuffer.joinString('>');\n//     },\n//     /* eslint-enable max-params */\n// \n//     /**\n//      * 编译元素闭合\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {string} tagName 标签名\n//      */\n//     tagEnd: function (sourceBuffer, tagName) {\n//         if (!autoCloseTags[tagName]) {\n//             sourceBuffer.joinString('</' + tagName + '>');\n//         }\n// \n//         if (tagName === 'select') {\n//             sourceBuffer.addRaw('$selectValue = null;');\n//         }\n// \n//         if (tagName === 'option') {\n//             sourceBuffer.addRaw('$optionValue = null;');\n//         }\n//     },\n// \n//     /**\n//      * 编译元素内容\n//      *\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {ANode} aNode 元素的抽象节点信息\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     inner: function (sourceBuffer, aNode, owner) {\n//         // inner content\n//         if (aNode.tagName === 'textarea') {\n//             var valueProp = getANodeProp(aNode, 'value');\n//             if (valueProp) {\n//                 sourceBuffer.joinRaw('escapeHTML('\n//                     + compileExprSource.expr(valueProp.expr)\n//                     + ')'\n//                 );\n//             }\n// \n//             return;\n//         }\n// \n//         var htmlDirective = aNode.directives.html;\n//         if (htmlDirective) {\n//             sourceBuffer.joinExpr(htmlDirective.value);\n//         }\n//         else {\n//             /* eslint-disable no-use-before-define */\n//             each(aNode.children, function (aNodeChild) {\n//                 sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//             });\n//             /* eslint-enable no-use-before-define */\n//         }\n//     }\n// };\n// \n// /**\n//  * ANode 的编译方法集合对象\n//  *\n//  * @inner\n//  */\n// var aNodeCompiler = {\n// \n//     /**\n//      * 编译节点\n//      *\n//      * @param {ANode} aNode 抽象节点\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compile: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         var compileMethod = 'compileElement';\n// \n//         if (aNode.textExpr) {\n//             compileMethod = 'compileText';\n//         }\n//         else if (aNode.directives['if']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileIf';\n//         }\n//         else if (aNode.directives['for']) { // eslint-disable-line dot-notation\n//             compileMethod = 'compileFor';\n//         }\n//         else if (aNode.tagName === 'slot') {\n//             compileMethod = 'compileSlot';\n//         }\n//         else if (aNode.tagName === 'template') {\n//             compileMethod = 'compileTemplate';\n//         }\n//         else {\n//             var ComponentType = owner.getComponentType\n//                 ? owner.getComponentType(aNode)\n//                 : owner.components[aNode.tagName];\n//             if (ComponentType) {\n//                 compileMethod = 'compileComponent';\n//                 extra.ComponentClass = ComponentType;\n//             }\n//         }\n// \n//         aNodeCompiler[compileMethod](aNode, sourceBuffer, owner, extra);\n//     },\n// \n//     /**\n//      * 编译文本节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      */\n//     compileText: function (aNode, sourceBuffer) {\n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStump('text'));\n//         }\n// \n//         sourceBuffer.joinExpr(aNode.textExpr);\n// \n//         if (aNode.textExpr.original) {\n//             sourceBuffer.joinString(serializeStumpEnd('text'));\n//         }\n//     },\n// \n//     /**\n//      * 编译template节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileTemplate: function (aNode, sourceBuffer, owner) {\n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//     },\n// \n//     /**\n//      * 编译 if 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileIf: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('var ifIndex = null;');\n// \n//         // output main if\n//         var ifDirective = aNode.directives['if']; // eslint-disable-line dot-notation\n//         sourceBuffer.addRaw('if (' + compileExprSource.expr(ifDirective.value) + ') {');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 rinseCondANode(aNode),\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         // output elif and else\n//         each(aNode.elses, function (elseANode, index) {\n//             var elifDirective = elseANode.directives.elif;\n//             if (elifDirective) {\n//                 sourceBuffer.addRaw('else if (' + compileExprSource.expr(elifDirective.value) + ') {');\n//             }\n//             else {\n//                 sourceBuffer.addRaw('else {');\n//             }\n// \n//             sourceBuffer.addRaw(\n//                 aNodeCompiler.compile(\n//                     rinseCondANode(elseANode),\n//                     sourceBuffer,\n//                     owner\n//                 )\n//             );\n//             sourceBuffer.addRaw('}');\n//         });\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译 for 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileFor: function (aNode, sourceBuffer, owner) {\n//         var forElementANode = createANode({\n//             children: aNode.children,\n//             props: aNode.props,\n//             events: aNode.events,\n//             tagName: aNode.tagName,\n//             directives: cloneDirectives(aNode.directives, {\n//                 'for': 1\n//             }),\n//             hotspot: aNode.hotspot\n//         });\n// \n//         var forDirective = aNode.directives['for']; // eslint-disable-line dot-notation\n//         var itemName = forDirective.item.raw;\n//         var indexName = forDirective.index.raw;\n//         var listName = guid();\n// \n//         if (indexName === '$index') {\n//             indexName = guid();\n//         }\n// \n//         sourceBuffer.addRaw('var ' + listName + ' = ' + compileExprSource.expr(forDirective.value) + ';');\n//         sourceBuffer.addRaw('if (' + listName + ' instanceof Array) {');\n// \n//         // for array\n//         sourceBuffer.addRaw('for ('\n//             + 'var ' + indexName + ' = 0; '\n//             + indexName + ' < ' + listName + '.length; '\n//             + indexName + '++) {'\n//         );\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('} else if (typeof ' + listName + ' === \"object\") {');\n// \n//         // for object\n//         sourceBuffer.addRaw('for (var ' + indexName + ' in ' + listName + ') {');\n//         sourceBuffer.addRaw('if (' + listName + '[' + indexName + '] != null) {');\n//         sourceBuffer.addRaw('componentCtx.data.' + indexName + '=' + indexName + ';');\n//         sourceBuffer.addRaw('componentCtx.data.' + itemName + '= ' + listName + '[' + indexName + '];');\n//         sourceBuffer.addRaw(\n//             aNodeCompiler.compile(\n//                 forElementANode,\n//                 sourceBuffer,\n//                 owner\n//             )\n//         );\n//         sourceBuffer.addRaw('}');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('}');\n//     },\n// \n//     /**\n//      * 编译 slot 节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      */\n//     compileSlot: function (aNode, sourceBuffer, owner) {\n//         sourceBuffer.addRaw('(function () {');\n// \n//         sourceBuffer.addRaw('function $defaultSlotRender(componentCtx) {');\n//         sourceBuffer.addRaw('  var html = \"\";');\n//         each(aNode.children, function (aNodeChild) {\n//             sourceBuffer.addRaw(aNodeCompiler.compile(aNodeChild, sourceBuffer, owner));\n//         });\n//         sourceBuffer.addRaw('  return html;');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('  var $givenSlot = [];');\n// \n//         var nameProp = getANodeProp(aNode, 'name');\n//         if (nameProp) {\n//             sourceBuffer.addRaw('var $slotName = ' + compileExprSource.expr(nameProp.expr) + ';');\n//         }\n//         else {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//         }\n// \n//         sourceBuffer.addRaw('var $ctxGivenSlots = componentCtx.givenSlots;');\n//         sourceBuffer.addRaw('for (var $i = 0; $i < $ctxGivenSlots.length; $i++) {');\n//         sourceBuffer.addRaw('  if ($ctxGivenSlots[$i][1] == $slotName) {');\n//         sourceBuffer.addRaw('    $givenSlot.push($ctxGivenSlots[$i][0]);');\n//         sourceBuffer.addRaw('  }');\n//         sourceBuffer.addRaw('}');\n// \n// \n//         sourceBuffer.addRaw('var $isInserted = $givenSlot.length > 0;');\n//         sourceBuffer.addRaw('if (!$isInserted) { $givenSlot.push($defaultSlotRender); }');\n// \n//         sourceBuffer.addRaw('var $slotCtx = $isInserted ? componentCtx.owner : componentCtx;');\n// \n//         if (aNode.vars || aNode.directives.bind) {\n//             sourceBuffer.addRaw('$slotCtx = {data: extend({}, $slotCtx.data), filters: $slotCtx.filters, callFilter: $slotCtx.callFilter};'); // eslint-disable-line\n// \n//             if (aNode.directives.bind) {\n//                 sourceBuffer.addRaw('extend($slotCtx.data, ' + compileExprSource.expr(aNode.directives.bind.value) + ');'); // eslint-disable-line\n//             }\n// \n//             each(aNode.vars, function (varItem) {\n//                 sourceBuffer.addRaw(\n//                     '$slotCtx.data[\"' + varItem.name + '\"] = '\n//                     + compileExprSource.expr(varItem.expr)\n//                     + ';'\n//                 );\n//             });\n//         }\n// \n//         sourceBuffer.addRaw('for (var $renderIndex = 0; $renderIndex < $givenSlot.length; $renderIndex++) {');\n//         sourceBuffer.addRaw('  html += $givenSlot[$renderIndex]($slotCtx);');\n//         sourceBuffer.addRaw('}');\n// \n//         sourceBuffer.addRaw('})();');\n//     },\n// \n//     /**\n//      * 编译普通节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      */\n//     compileElement: function (aNode, sourceBuffer, owner, extra) {\n//         extra = extra || {};\n//         // if (aNode.tagName === 'option'\n//         //     && !getANodeProp(aNode, 'value')\n//         //     && aNode.children[0]\n//         // ) {\n//         //     aNode.props.push({\n//         //         name: 'value',\n//         //         expr: aNode.children[0].textExpr\n//         //     });\n//         // }\n// \n//         elementSourceCompiler.tagStart(\n//             sourceBuffer,\n//             aNode.tagName,\n//             aNode.props,\n//             extra.prop,\n//             aNode.directives.bind\n//         );\n// \n//         elementSourceCompiler.inner(sourceBuffer, aNode, owner);\n//         elementSourceCompiler.tagEnd(sourceBuffer, aNode.tagName);\n//     },\n// \n//     /**\n//      * 编译组件节点\n//      *\n//      * @param {ANode} aNode 节点对象\n//      * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//      * @param {Component} owner 所属组件实例环境\n//      * @param {Object} extra 编译所需的一些额外信息\n//      * @param {Function} extra.ComponentClass 对应组件类\n//      */\n//     compileComponent: function (aNode, sourceBuffer, owner, extra) {\n//         if (aNode) {\n//             sourceBuffer.addRaw('var $slotName = null;');\n//             sourceBuffer.addRaw('var $givenSlots = [];');\n//             each(aNode.children, function (child) {\n//                 var slotBind = !child.textExpr && getANodeProp(child, 'slot');\n//                 if (slotBind) {\n//                     sourceBuffer.addRaw('$slotName = ' + compileExprSource.expr(slotBind.expr) + ';');\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}, $slotName]);');\n//                 }\n//                 else {\n//                     sourceBuffer.addRaw('$givenSlots.push([function (componentCtx) {');\n//                     sourceBuffer.addRaw('  var html = \"\";');\n//                     sourceBuffer.addRaw(aNodeCompiler.compile(child, sourceBuffer, owner));\n//                     sourceBuffer.addRaw('  return html;');\n//                     sourceBuffer.addRaw('}]);');\n//                 }\n//             });\n//         }\n// \n//         var ComponentClass = extra.ComponentClass;\n//         var component = new ComponentClass({\n//             aNode: aNode,\n//             owner: owner,\n//             subTag: aNode.tagName\n//         });\n// \n//         var givenData = [];\n// \n//         each(component.binds, function (prop) {\n//             givenData.push(\n//                 compileExprSource.stringLiteralize(prop.name)\n//                 + ':'\n//                 + compileExprSource.expr(prop.expr)\n//             );\n//         });\n// \n//         var givenDataHTML = '{' + givenData.join(',\\n') + '}';\n//         if (aNode.directives.bind) {\n//             givenDataHTML = 'extend('\n//                 + compileExprSource.expr(aNode.directives.bind.value)\n//                  + ', '\n//                 + givenDataHTML\n//                 + ')';\n//         }\n// \n//         sourceBuffer.addRaw('html += (');\n//         sourceBuffer.addRendererStart();\n//         compileComponentSource(sourceBuffer, component, extra && extra.prop);\n//         sourceBuffer.addRendererEnd();\n//         sourceBuffer.addRaw(')(' + givenDataHTML + ', componentCtx, $givenSlots);');\n//         sourceBuffer.addRaw('$givenSlots = null;');\n//     }\n// };\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {CompileSourceBuffer} sourceBuffer 编译源码的中间buffer\n//  * @param {Object} component 组件实例\n//  * @param {string?} extraProp 额外的属性串\n//  */\n// function compileComponentSource(sourceBuffer, component, extraProp) {\n//     sourceBuffer.addRaw(genComponentContextCode(component));\n//     sourceBuffer.addRaw('componentCtx.owner = parentCtx;');\n//     sourceBuffer.addRaw('componentCtx.givenSlots = givenSlots;');\n// \n// \n//     sourceBuffer.addRaw('data = extend(componentCtx.data, data);');\n//     sourceBuffer.addRaw('for (var $i = 0; $i < componentCtx.computedNames.length; $i++) {');\n//     sourceBuffer.addRaw('  var $computedName = componentCtx.computedNames[$i];');\n//     sourceBuffer.addRaw('  data[$computedName] = componentCtx.computed[$computedName]();');\n//     sourceBuffer.addRaw('}');\n// \n//     extraProp = extraProp || '';\n// \n//     var eventDeclarations = [];\n//     for (var key in component.listeners) {\n//         if (component.listeners.hasOwnProperty(key)) {\n//             each(component.listeners[key], function (listener) {\n//                 if (listener.declaration) {\n//                     eventDeclarations.push(listener.declaration);\n//                 }\n//             });\n//         }\n//     }\n// \n//     elementSourceCompiler.tagStart(\n//         sourceBuffer,\n//         component.tagName,\n//         component.aNode.props,\n//         extraProp,\n//         component.aNode.directives.bind\n//     );\n// \n//     if (!component.owner) {\n//         sourceBuffer.joinString('<!--s-data:');\n//         sourceBuffer.joinDataStringify();\n//         sourceBuffer.joinString('-->');\n//     }\n// \n// \n//     elementSourceCompiler.inner(sourceBuffer, component.aNode, component);\n//     elementSourceCompiler.tagEnd(sourceBuffer, component.tagName);\n// }\n// \n// var stringifier = {\n//     obj: function (source) {\n//         var prefixComma;\n//         var result = '{';\n// \n//         for (var key in source) {\n//             if (!source.hasOwnProperty(key) || typeof source[key] === 'undefined') {\n//                 continue;\n//             }\n// \n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += compileExprSource.stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//         }\n// \n//         return result + '}';\n//     },\n// \n//     arr: function (source) {\n//         var prefixComma;\n//         var result = '[';\n// \n//         each(source, function (value) {\n//             if (prefixComma) {\n//                 result += ',';\n//             }\n//             prefixComma = 1;\n// \n//             result += stringifier.any(value);\n//         });\n// \n//         return result + ']';\n//     },\n// \n//     str: function (source) {\n//         return compileExprSource.stringLiteralize(source);\n//     },\n// \n//     date: function (source) {\n//         return 'new Date(' + source.getTime() + ')';\n//     },\n// \n//     any: function (source) {\n//         switch (typeof source) {\n//             case 'string':\n//                 return stringifier.str(source);\n// \n//             case 'number':\n//                 return '' + source;\n// \n//             case 'boolean':\n//                 return source ? 'true' : 'false';\n// \n//             case 'object':\n//                 if (!source) {\n//                     return null;\n//                 }\n// \n//                 if (source instanceof Array) {\n//                     return stringifier.arr(source);\n//                 }\n// \n//                 if (source instanceof Date) {\n//                     return stringifier.date(source);\n//                 }\n// \n//                 return stringifier.obj(source);\n//         }\n// \n//         throw new Error('Cannot Stringify:' + source);\n//     }\n// };\n// \n// var COMPONENT_RESERVED_MEMBERS = splitStr2Obj('computed,filters,components,'\n//     + 'initData,template,attached,created,detached,disposed,compiled'\n// );\n// \n// /**\n//  * 生成组件 renderer 时 ctx 对象构建的代码\n//  *\n//  * @inner\n//  * @param {Object} component 组件实例\n//  * @return {string}\n//  */\n// function genComponentContextCode(component) {\n//     var code = ['var componentCtx = {'];\n// \n//     // members for call expr\n//     var ComponentProto = component.constructor.prototype;\n//     Object.keys(ComponentProto).forEach(function (protoMemberKey) {\n//         var protoMember = ComponentProto[protoMemberKey];\n//         if (COMPONENT_RESERVED_MEMBERS[protoMemberKey] || !protoMember) {\n//             return;\n//         }\n// \n//         switch (typeof protoMember) {\n//             case 'function':\n//                 code.push(protoMemberKey + ': ' + protoMember.toString() + ',');\n//                 break;\n// \n//             case 'object':\n//                 code.push(protoMemberKey + ':');\n// \n//                 if (protoMember instanceof Array) {\n//                     code.push('[');\n//                     protoMember.forEach(function (item) {\n//                         code.push(typeof item === 'function' ? item.toString() : '' + ',');\n//                     });\n//                     code.push(']');\n//                 }\n//                 else {\n//                     code.push('{');\n//                     Object.keys(protoMember).forEach(function (itemKey) {\n//                         var item = protoMember[itemKey];\n//                         if (typeof item === 'function') {\n//                             code.push(itemKey + ':' + item.toString() + ',');\n//                         }\n//                     });\n//                     code.push('}');\n//                 }\n// \n//                 code.push(',');\n//         }\n//     });\n// \n//     // given anode\n//     code.push('givenSlots: [],');\n// \n//     // filters\n//     code.push('filters: {');\n//     var filterCode = [];\n//     for (var key in component.filters) {\n//         if (component.filters.hasOwnProperty(key)) {\n//             var filter = component.filters[key];\n// \n//             if (typeof filter === 'function') {\n//                 filterCode.push(key + ': ' + filter.toString());\n//             }\n//         }\n//     }\n//     code.push(filterCode.join(','));\n//     code.push('},');\n// \n//     code.push(\n//         'callFilter: function (name, args) {',\n//         '    var filter = this.filters[name] || DEFAULT_FILTERS[name];',\n//         '    if (typeof filter === \"function\") {',\n//         '        return filter.apply(this, args);',\n//         '    }',\n//         '},'\n//     );\n// \n//     /* eslint-disable no-redeclare */\n//     // computed obj\n//     code.push('computed: {');\n//     var computedCode = [];\n//     for (var key in component.computed) {\n//         if (component.computed.hasOwnProperty(key)) {\n//             var computed = component.computed[key];\n// \n//             if (typeof computed === 'function') {\n//                 computedCode.push(key + ': '\n//                     + computed.toString().replace(\n//                         /this.data.get\\(([^\\)]+)\\)/g,\n//                         function (match, exprLiteral) {\n//                             var exprStr = (new Function('return ' + exprLiteral))();\n//                             var expr = parseExpr(exprStr);\n// \n//                             return compileExprSource.expr(expr);\n//                         })\n//                 );\n//             }\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('},');\n// \n//     // computed names\n//     code.push('computedNames: [');\n//     computedCode = [];\n//     for (var key in component.computed) {\n//         if (component.computed.hasOwnProperty(key)) {\n//             var computed = component.computed[key];\n// \n//             if (typeof computed === 'function') {\n//                 computedCode.push('\"' + key + '\"');\n//             }\n//         }\n//     }\n//     code.push(computedCode.join(','));\n//     code.push('],');\n//     /* eslint-enable no-redeclare */\n// \n//     // data\n//     code.push('data: ' + stringifier.any(component.data.get()) + ',');\n// \n//     // tagName\n//     code.push('tagName: \"' + component.tagName + '\"');\n//     code.push('};');\n// \n//     return code.join('\\n');\n// }\n// \n// /* eslint-enable guard-for-in */\n// \n// /* eslint-disable no-unused-vars */\n// /* eslint-disable fecs-camelcase */\n// \n// /**\n//  * 组件编译的模板函数\n//  *\n//  * @inner\n//  */\n// function componentCompilePreCode() {\n//     var $version = '3.6.14';\n// \n//     function extend(target, source) {\n//         if (source) {\n//             Object.keys(source).forEach(function (key) {\n//                 let value = source[key];\n//                 if (typeof value !== 'undefined') {\n//                     target[key] = value;\n//                 }\n//             });\n//         }\n// \n//         return target;\n//     }\n// \n//     function each(array, iterator) {\n//         if (array && array.length > 0) {\n//             for (var i = 0, l = array.length; i < l; i++) {\n//                 if (iterator(array[i], i) === false) {\n//                     break;\n//                 }\n//             }\n//         }\n//     }\n// \n//     function contains(array, value) {\n//         var result;\n//         each(array, function (item) {\n//             result = item === value;\n//             return !result;\n//         });\n// \n//         return result;\n//     }\n// \n//     var HTML_ENTITY = {\n//         /* jshint ignore:start */\n//         '&': '&amp;',\n//         '<': '&lt;',\n//         '>': '&gt;',\n//         '\"': '&quot;',\n//         /* eslint-disable quotes */\n//         \"'\": '&#39;'\n//         /* eslint-enable quotes */\n//         /* jshint ignore:end */\n//     };\n// \n//     function htmlFilterReplacer(c) {\n//         return HTML_ENTITY[c];\n//     }\n// \n//     function escapeHTML(source) {\n//         if (source == null) {\n//             return '';\n//         }\n// \n//         return String(source).replace(/[&<>\"']/g, htmlFilterReplacer);\n//     }\n// \n//     var DEFAULT_FILTERS = {\n//         url: encodeURIComponent,\n//         _class: function (source) {\n//             if (source instanceof Array) {\n//                 return source.join(' ');\n//             }\n// \n//             return source;\n//         },\n//         _style: function (source) {\n//             if (typeof source === 'object') {\n//                 var result = '';\n//                 if (source) {\n//                     Object.keys(source).forEach(function (key) {\n//                         result += key + ':' + source[key] + ';';\n//                     });\n//                 }\n// \n//                 return result;\n//             }\n// \n//             return source || '';\n//         },\n//         _sep: function (source, sep) {\n//             return source ? sep + source : '';\n//         }\n//     };\n// \n//     function attrFilter(name, value) {\n//         if (value) {\n//             return ' ' + name + '=\"' + value + '\"';\n//         }\n// \n//         return '';\n//     }\n// \n//     function boolAttrFilter(name, value) {\n//         if (value && value !== 'false' && value !== '0') {\n//             return ' ' + name;\n//         }\n// \n//         return '';\n//     }\n// \n//     function stringLiteralize(source) {\n//         return '\"'\n//             + source\n//                 .replace(/\\x5C/g, '\\\\\\\\')\n//                 .replace(/\"/g, '\\\\\"')\n//                 .replace(/\\x0A/g, '\\\\n')\n//                 .replace(/\\x09/g, '\\\\t')\n//                 .replace(/\\x0D/g, '\\\\r')\n//             + '\"';\n//     }\n// \n//     var stringifier = {\n//         obj: function (source) {\n//             var prefixComma;\n//             var result = '{';\n// \n//             Object.keys(source).forEach(function (key) {\n//                 if (typeof source[key] === 'undefined') {\n//                     return;\n//                 }\n// \n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringLiteralize(key) + ':' + stringifier.any(source[key]);\n//             });\n// \n//             return result + '}';\n//         },\n// \n//         arr: function (source) {\n//             var prefixComma;\n//             var result = '[';\n// \n//             each(source, function (value) {\n//                 if (prefixComma) {\n//                     result += ',';\n//                 }\n//                 prefixComma = 1;\n// \n//                 result += stringifier.any(value);\n//             });\n// \n//             return result + ']';\n//         },\n// \n//         str: function (source) {\n//             return stringLiteralize(source);\n//         },\n// \n//         date: function (source) {\n//             return 'new Date(' + source.getTime() + ')';\n//         },\n// \n//         any: function (source) {\n//             switch (typeof source) {\n//                 case 'string':\n//                     return stringifier.str(source);\n// \n//                 case 'number':\n//                     return '' + source;\n// \n//                 case 'boolean':\n//                     return source ? 'true' : 'false';\n// \n//                 case 'object':\n//                     if (!source) {\n//                         return null;\n//                     }\n// \n//                     if (source instanceof Array) {\n//                         return stringifier.arr(source);\n//                     }\n// \n//                     if (source instanceof Date) {\n//                         return stringifier.date(source);\n//                     }\n// \n//                     return stringifier.obj(source);\n//             }\n// \n//             throw new Error('Cannot Stringify:' + source);\n//         }\n//     };\n// }\n// /* eslint-enable no-unused-vars */\n// /* eslint-enable fecs-camelcase */\n// \n// /**\n//  * 将组件编译成 render 方法的 js 源码\n//  *\n//  * @param {Function} ComponentClass 组件类\n//  * @return {string}\n//  */\n// function compileJSSource(ComponentClass) {\n//     var sourceBuffer = new CompileSourceBuffer();\n// \n//     sourceBuffer.addRendererStart();\n//     sourceBuffer.addRaw(\n//         componentCompilePreCode.toString()\n//             .split('\\n')\n//             .slice(1)\n//             .join('\\n')\n//             .replace(/\\}\\s*$/, '')\n//     );\n// \n//     // 先初始化个实例，让模板编译成 ANode，并且能获得初始化数据\n//     var component = new ComponentClass();\n// \n//     compileComponentSource(sourceBuffer, component);\n//     sourceBuffer.addRendererEnd();\n//     return sourceBuffer.toCode();\n// }\n// #[end]\n\n// exports = module.exports = compileJSSource;\n\n    /* eslint-disable no-unused-vars */\n//     var nextTick = require('./util/next-tick');\n//     var inherits = require('./util/inherits');\n//     var parseTemplate = require('./parser/parse-template');\n//     var parseExpr = require('./parser/parse-expr');\n//     var ExprType = require('./parser/expr-type');\n//     var LifeCycle = require('./view/life-cycle');\n//     var NodeType = require('./view/node-type');\n//     var Component = require('./view/component');\n//     var compileComponent = require('./view/compile-component');\n//     var defineComponent = require('./view/define-component');\n//     var emitDevtool = require('./util/emit-devtool');\n//     var compileJSSource = require('./view/compile-js-source');\n//     var Data = require('./runtime/data');\n//     var evalExpr = require('./runtime/eval-expr');\n//     var DataTypes = require('./util/data-types');\n\n\n    var san = {\n        /**\n         * san版本号\n         *\n         * @type {string}\n         */\n        version: '3.6.14',\n\n        // #[begin] devtool\n        /**\n         * 是否开启调试。开启调试时 devtool 会工作\n         *\n         * @type {boolean}\n         */\n        debug: true,\n        // #[end]\n\n        // #[begin] ssr\n//         /**\n//          * 将组件类编译成 renderer 方法\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {function(Object):string}\n//          */\n//         compileToRenderer: function (ComponentClass) {\n//             var renderer = ComponentClass.__ssrRenderer;\n// \n//             if (!renderer) {\n//                 var code = compileJSSource(ComponentClass);\n//                 renderer = (new Function('return ' + code))();\n//                 ComponentClass.__ssrRenderer = renderer;\n//             }\n// \n//             return renderer;\n//         },\n// \n//         /**\n//          * 将组件类编译成 renderer 方法的源文件\n//          *\n//          * @param {Function} ComponentClass 组件类\n//          * @return {string}\n//          */\n//         compileToSource: compileJSSource,\n        // #[end]\n\n        /**\n         * 组件基类\n         *\n         * @type {Function}\n         */\n        Component: Component,\n\n        /**\n         * 创建组件类\n         *\n         * @param {Object} proto 组件类的方法表\n         * @return {Function}\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * 编译组件类。预解析template和components\n         *\n         * @param {Function} ComponentClass 组件类\n         */\n        compileComponent: compileComponent,\n\n        /**\n         * 解析 template\n         *\n         * @inner\n         * @param {string} source template 源码\n         * @return {ANode}\n         */\n        parseTemplate: parseTemplate,\n\n        /**\n         * 解析表达式\n         *\n         * @param {string} source 源码\n         * @return {Object}\n         */\n        parseExpr: parseExpr,\n\n        /**\n         * 表达式类型枚举\n         *\n         * @const\n         * @type {Object}\n         */\n        ExprType: ExprType,\n\n        /**\n         * 生命周期\n         */\n        LifeCycle: LifeCycle,\n\n        /**\n         * 节点类型\n         *\n         * @const\n         * @type {Object}\n         */\n        NodeType: NodeType,\n\n        /**\n         * 在下一个更新周期运行函数\n         *\n         * @param {Function} fn 要运行的函数\n         */\n        nextTick: nextTick,\n\n        /**\n         * 数据类\n         *\n         * @class\n         * @param {Object?} data 初始数据\n         * @param {Data?} parent 父级数据对象\n         */\n        Data: Data,\n\n        /**\n         * 计算表达式的值\n         *\n         * @param {Object} expr 表达式对象\n         * @param {Data} data 数据对象\n         * @param {Component=} owner 组件对象，用于表达式中filter的执行\n         * @return {*}\n         */\n        evalExpr: evalExpr,\n\n        /**\n         * 构建类之间的继承关系\n         *\n         * @param {Function} subClass 子类函数\n         * @param {Function} superClass 父类函数\n         */\n        inherits: inherits,\n\n        /**\n         * DataTypes\n         *\n         * @type {Object}\n         */\n        DataTypes: DataTypes\n    };\n\n    // export\n    if (typeof exports === 'object' && typeof module === 'object') {\n        // For CommonJS\n        exports = module.exports = san;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        // For AMD\n        define('san', [], san);\n    }\n    else {\n        // For <script src=\"...\"\n        root.san = san;\n    }\n\n    // #[begin] devtool\n    emitDevtool.start(san);\n    // #[end]\n})(this);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","\nvar content = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./task.san\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./task.san\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./task.san\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import Task from './task.san';\r\n\r\nconsole.log(process.env.NODE_ENV)\r\n\r\n\r\nlet a = new Task().attach(document.body);\r\n\r\n\r\n\r\n\r\n\r\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!./main.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!./main.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var __san_script__, __san_template__\nvar __san_styles__ = {}\nrequire(\"!!style-loader!css-loader?sourceMap!../node_modules/san-loader/lib/style-rewriter.js!../node_modules/san-loader/lib/selector.js?type=style&index=0!./task.san\")\n__san_script__ = require(\"!!babel-loader!../node_modules/san-loader/lib/selector.js?type=script&index=0!./task.san\")\nif (__san_script__ &&\n    __san_script__.__esModule &&\n    Object.keys(__san_script__).length > 1) {\n  console.warn(\"[san-loader] src\\\\task.san: named exports in *.san files are ignored.\")}\n__san_template__ = require(\"!!html-loader?minimize=false!../node_modules/san-loader/lib/selector.js?type=template&index=0!./task.san\")\nvar __san_proto__ = {}\nif (__san_script__) {\n  __san_proto__ = __san_script__.__esModule\n    ? __san_script__['default']\n    : __san_script__\n}\nif (__san_template__) {\n  __san_proto__.template = __san_template__\n}\nvar san = require(\"san\")\nvar __san_exports__ = san.defineComponent(__san_proto__)\nmodule.exports = __san_exports__\nif (module.exports.__esModule) module.exports = module.exports['default']\nif (!__san_exports__.computed) __san_exports__.computed = {}\nObject.keys(__san_styles__).forEach(function (key) {\nvar module = __san_styles__[key]\n__san_exports__.computed[key] = function () { return module }\n})\n"],"sourceRoot":""}